@page
@model IndexModel
@using System.Globalization;
@using System.Linq;
@{
    var pie_XLabels = @Model.PieReportViewModel == null ? string.Empty : Newtonsoft.Json.JsonConvert.SerializeObject(Model.PieReportViewModel.Select(x => x.DimensionOne).ToList());
    var pie_YValues = @Model.PieReportViewModel == null ? string.Empty :  Newtonsoft.Json.JsonConvert.SerializeObject(Model.PieReportViewModel.Select(x => x.Quantity).ToList());
    var bar_XLabels = @Model.PieReportViewModel == null ? string.Empty :  Newtonsoft.Json.JsonConvert.SerializeObject(Model.PieReportViewModel.Select(x => x.DimensionOne).ToList());
    var bar_YValues = @Model.PieReportViewModel == null ? string.Empty :  Newtonsoft.Json.JsonConvert.SerializeObject(Model.PieReportViewModel.Select(x => x.Quantity).ToList());
    ViewData["Title"] = "DashBoard";
}
<link href="~/css/adminlte.min.css" rel="stylesheet" />
<link href="~/css/main_calender.css" rel="stylesheet" />
<div class="row">
    <div class="col-12">
        <div class="mb-3">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">My DashBoard </h3>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-4">
                            <a href="">
                                <div class="card text-white shadow" style="background: linear-gradient(to top, #bac7f5, #8478ed);">
                                    <div class="card-body">
                                        @if(@Model.TotalAmountWithCurrency != null && @Model.TotalAmountWithCurrency.Any())
                                        {
                                            <h3 style="color: #4141a1;"> @Model.TotalAmountWithCurrency[0].Currency:  @Model.TotalAmountWithCurrency[0].TotalAmount.ToString("#,#.##", CultureInfo.CreateSpecificCulture("hi-IN"))</h3>
                                        }
                                        <div style="color: #4141a1;">Total Approved Amount</div>
                                    </div>
                                </div>
                            </a>
                        </div>
                        <div class="col-4">
                            <a href="/statusboard/RunningBoard">
                                <div class="card text-white shadow" style="background: linear-gradient(to top, #cac2f3, #8d66cf);">
                                    <div class="card-body">
                                        <h3 style="color: darkblue;"> @Model.TotalRunningBudget </h3>
                                        <div style="color: darkblue;">Running</div>
                                    </div>
                                </div>
                            </a>
                        </div>
                        <div class="col-4">
                            <a href="/BudgetApprover/Index">
                                <div class="card text-white shadow" style="background: linear-gradient(to top, #ebe6b1, #edc13a);">
                                    <div class="card-body">
                                        <h3 style="color: darkgoldenrod;"> @Model.TotalPendingBudget </h3>
                                        <div style="color: darkgoldenrod;">Pending <i class="fa fa-icon-pencil" aria-hidden="true" style="color: white"></i></div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-4">
                            <a href="/statusboard/RejectedBoard">
                                <div class="card text-white shadow" style="background: linear-gradient(to top, #f3dcd8, #f5b9ac);">
                                    <div class="card-body">
                                        <h3 style="color: darkred;"> @Model.TotalRejectedBudget </h3>
                                        <div style="color: darkred;">Rejected </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                        <div class="col-4">
                            <a href="/BudgetEstimation/RollbackList">
                                <div class="card text-white shadow" style="background: linear-gradient(to top, #f3e1d8cc, #f5d5ae);">
                                    <div class="card-body">
                                        <h3 style="color: darkorange;"> @Model.TotalRollbackedBudget </h3>
                                        <div style="color: darkorange;">Rollbacked</div>
                                    </div>
                                </div>
                            </a>
                        </div>
                        <div class="col-4">
                            <a href="/statusboard/CompletedEstimateBudget">
                                <div class="card text-white shadow" style="background: linear-gradient(to top, #afe7b5, #82e54f);">
                                    <div class="card-body">
                                        <h3 style="color: darkgreen;"> @Model.TotalCompletedBudget </h3>
                                        <div style="color: darkgreen;">Completed</div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                    @*<div class="row">
                        <div class="col-9">
                            <div class="card bg-cyan text-white shadow">
                                <div class="card-body table-responsive">
                                    <div class="page-header">Total Approved Amount</div>

                                    <table class="table mt-2">
                                        <thead class="table-bordered">
                                        <td>Currency</td>
                                        <td>Amount</td>
                                        </thead>
                                        @if(Model.TotalAmountWithCurrency != null)
                                        @foreach (var amount in Model.TotalAmountWithCurrency)
                                        {
                                            <tr class="table-bordered">
                                                <td> @amount.Currency</td>
                                                <td>@amount.TotalAmount.ToString("#,#.##", CultureInfo.CreateSpecificCulture("hi-IN"))</td>
                                            </tr>
                                        }
                                    </table>

                                </div>
                            </div>
                        </div>
                    </div>*@
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <div class="row">
            <div class="col-6" style="float:left">
            <canvas id="pie_chart" style="width:100%; height:350px"></canvas>
        </div>
        <div class="col-6">
            <canvas id="bar_chart" style="width:100%; height:350px"></canvas>
        </div>
        </div>
    </div>
</div>
@*<div class="container-fluid">
    <div class="row">
        <div class="" style="width: 100%;">
            <section class="content">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="card card-primary">
                                <div class="card-body p-0">
                                    <div id="calendar"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>
</div>*@
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    <script src="~/js/adminlte.min.js"></script>
    <script src="~/js/main_calender.js"></script>
    <script src="~/js/demo-charts.min.js"></script>
    <script>
        $(function() {
            $(function() {
                var chartName = "bar_chart";
                var ctx = document.getElementById(chartName).getContext('2d');
                var data = {
                    labels: @Html.Raw(bar_XLabels),
                    datasets: [{
                        label: "Status Chart",
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(255, 0, 0)',
                            'rgba(0, 255, 0)',
                            'rgba(0, 0, 255)',
                            'rgba(192, 192, 192)',
                            'rgba(255, 255, 0)',
                            'rgba(255, 0, 255)'
                        ],
                        borderColor: [
                            'rgba(255,99,132,1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)',
                            'rgba(255, 0, 0)',
                            'rgba(0, 255, 0)',
                            'rgba(0, 0, 255)',
                            'rgba(192, 192, 192)',
                            'rgba(255, 255, 0)',
                            'rgba(255, 0, 255)'
                        ],
                        borderWidth: 1,
                        data: @Html.Raw(bar_YValues)
                    }]
                };

                var options = {
                    maintainAspectRatio: false,
                    scales: {
                        yAxes: [{
                            ticks: {
                                min: 0,
                                beginAtZero: true
                            },
                            gridLines: {
                                display: true,
                                color: "rgba(255,99,164,0.2)"
                            }
                        }],
                        xAxes: [{
                            ticks: {
                                min: 0,
                                beginAtZero: true
                            },
                            gridLines: {
                                display: false
                            }
                        }]
                    }
                };

                new Chart(ctx, {
                    options: options,
                    data: data,
                    type: 'bar'

                });
            });
            $(function() {
                var chartName = "pie_chart";
                var ctx = document.getElementById(chartName).getContext('2d');
                var data = {
                    labels: @Html.Raw(pie_XLabels),
                    datasets: [{
                        label: "Request Count Chart",
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255,99,132,1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1,
                        data: @Html.Raw(pie_YValues)
                    }]
                };

                var options = {
                    maintainAspectRatio: false,
                    scales: {
                    }
                };

                new Chart(ctx, {
                    options: options,
                    data: data,
                    type: 'pie'

                });
            });
            loadApprovalDateBasedOnUserId();
            function ini_events(ele) {
                ele.each(function() {
                    var eventObject = {
                        title: $.trim($(this).text())
                    }
                    $(this).data('eventObject', eventObject)

                })
            }
            ini_events($('#external-events div.external-event'))
            var date = new Date()
            var d = date.getDate(),
                m = date.getMonth(),
                y = date.getFullYear()

            var Calendar = FullCalendar.Calendar;
            var Draggable = FullCalendar.Draggable;

            var containerEl = document.getElementById('external-events');
            var checkbox = document.getElementById('drop-remove');
            var calendarEl = document.getElementById('calendar');
            new Draggable(containerEl, {
                itemSelector: '.external-event',
                eventData: function(eventEl) {
                    return {
                        title: eventEl.innerText,
                        backgroundColor: window.getComputedStyle(eventEl, null).getPropertyValue('background-color'),
                        borderColor: window.getComputedStyle(eventEl, null).getPropertyValue('background-color'),
                        textColor: window.getComputedStyle(eventEl, null).getPropertyValue('color'),
                    };
                }
            });
            var currColor = '#3c8dbc'
            $('#color-chooser > li > a').click(function(e) {
                e.preventDefault()
                currColor = $(this).css('color')
                $('#add-new-event').css({
                    'background-color': currColor,
                    'border-color': currColor
                })
            })
            $('#add-new-event').click(function(e) {
                e.preventDefault()
                var val = $('#new-event').val()
                if (val.length == 0) {
                    return
                }
                var event = $('<div />')
                event.css({
                    'background-color': currColor,
                    'border-color': currColor,
                    'color': '#fff'
                }).addClass('external-event')
                event.text(val)
                $('#external-events').prepend(event)
                ini_events(event)
                $('#new-event').val('')
            })


            function loadApprovalDateBasedOnUserId(value) {

                var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
                $.ajax({
                    type: "GET",
                    url: "/Estimation/GetAllEstimationApprovalInfoByUserId",
                    data: "{}",
                    success: function(data) {
                        let approvalDateList = [];
                        for (var i = 0; i < data.length; i++) {
                            let backgroundColor = "";
                            let borderColor = "";

                            if (data[i].estimationStatus == -500) {
                                backgroundColor = "red";

                            } else if (data[i].estimationStatus == 100) {
                                backgroundColor = "green";

                            }
                            else if (data[i].estimationStatus == 2) {
                                backgroundColor = "orange";

                            }
                            else if (data[i].estimationStatus == -400) {
                                backgroundColor = "blue";

                            }

                            if (data[i].approvalStatus == -500) {
                                borderColor = "red";

                            } else if (data[i].approvalStatus == 100) {
                                borderColor = "green";

                            }
                            else if (data[i].approvalStatus == 2) {
                                borderColor = "orange";

                            }
                            else if (data[i].approvalStatus == -400) {
                                borderColor = "blue";

                            }


                            approvalDateList.push({
                                title: data[i].uniqueIdentifier,
                                start: data[i].planDate,
                                backgroundColor: backgroundColor,
                                borderColor: borderColor, //red
                                allDay: true,
                                url: data[i].viewURL
                            })

                        }
                        var calendar = new Calendar(calendarEl, {
                            headerToolbar: {
                                left: 'prev,next today',
                                center: 'title',
                                right: 'dayGridMonth,timeGridWeek,timeGridDay'
                            },
                            themeSystem: 'bootstrap',
                            events: approvalDateList,
                            droppable: true,
                            drop: function(info) {
                                if (checkbox.checked) {
                                    info.draggedEl.parentNode.removeChild(info.draggedEl);
                                }
                            }
                        });
                        calendar.render();
                    }
                });
            }
        })
    </script>
}
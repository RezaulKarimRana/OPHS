@model AMS.Models.ServiceModels.BudgetEstimate.SingleEstimationWithTypeResponse
@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
@using AMS.Models.DomainModels
@inject AMS.Services.Managers.Contracts.ISessionManager _sessionManager
@{
    UserEntity? user = await _sessionManager.GetUser();
}
<div class="hiddenElements">
    <input id="estimateId"
           type="hidden"
           value="@Model.Estimation.EstimateId" />
</div>
<div class="container-fluid">
    <form id="form">
        <div class="card border-secondary mb-4">
            <div class="card-header">
                <b>View Estimate Budget</b>
                <a id="btnDownloadExcelReport"
                   style="margin-left: 5px;"
                   href="/ReportGenarator/SingleEstimateReport?id=@Model.Estimation.EstimateId"
                   class="btn btn-info float-right">
                    <span class="icon text-gray-100">
                        <i class="fas fa-file-excel"></i>
                    </span>
                </a>
                <a id="btnDownloadPdfReport" href="/ReportGenarator/SinglePdfEstimateReport?id=@Model.Estimation.EstimateId" class="btn btn-info float-right">
                    <span class="icon text-gray-100">
                        <i class="fas fa-file-pdf"></i>
                    </span>
                </a>
            </div>
            <div class="card-body">
                <div class="container-fluid">
                    <div class="form-group required row">
                        <label for="approvalForDropDown" class="col-sm-2 col-form-label-sm control-label">Approval For</label>
                        <div class="col-sm-4">
                            <select class="form-control" aria-label=".form-select-sm example" id="approvalForDropDown" disabled>
                                <option value="@Model.Estimation.EstimationTypeId" selected>@Model.Estimation.EstimationTypeName</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="IdentificationTextId" class="col-sm-2 col-form-label-sm control-label">Idenfication</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control" id="IdentificationTextId" value="@Model.Estimation.EstimationIdentifier" disabled />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="subjectTextId" class="col-sm-2 col-form-label-sm control-label">Subject</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="subjectTextId" disabled />
                        </div>
                    </div>

                </div>
            </div>
        </div>

        <div class="card secondary mb-4 procurementApprovalDiv">
            <div class="card-header">
                <b>Background</b>
            </div>
            <div class="card-body">
                <div class="container-fluid">
                    <div class="form-group required row">
                        <label for="paReferenceNumberTextId" class="col-sm-2 col-form-label-sm control-label">PA. Reference No.</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="paReferenceNumberTextId" disabled />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="titleOfPRorRFQTextId" class="col-sm-2 col-form-label-sm control-label">Title of the PR/RFQ</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="titleOfPRorRFQTextId" disabled />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="RFQReferNoTextId" class="col-sm-2 col-form-label-sm control-label">RFQ Reference No.</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="RFQReferNoTextId" disabled />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="PRReferenceNoTextId" class="col-sm-2 col-form-label-sm control-label">PR Reference No.</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="PRReferenceNoTextId" disabled />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="NameAndCellRequesterTextId" class="col-sm-2 col-form-label-sm control-label">Name and Cell No. of Requester</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="nameAndCellRequesterTextId" disabled />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="deptOrDivTextId" class="col-sm-2 col-form-label-sm control-label">Department/Division</label>
                        <div class="col-sm-10">
                            <select class="form-control" aria-label=".form-select-sm" id="deptOrDivTextId" disabled>
                                <option value="-1" selected>Select</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="RFQProcessTextId" class="col-sm-2 col-form-label-sm control-label">RFQ Process</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="RFQProcessTextId" disabled />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="sourcingMethodTextId" class="col-sm-2 col-form-label-sm control-label">Sourcing Method</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="sourcingMethodTextId" disabled />
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card secondary mb-4 procurementApprovalDiv">
            <div class="card-header">
                <b>Award Recommandation</b>
            </div>
            <div class="card-body">
                <div class="container-fluid">
                    <div class="form-group required row">
                        <label for="nameSupplierTextId" class="col-sm-2 col-form-label-sm control-label">Name of the Recommended Supplied</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="nameSupplierTextId" disabled />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="purchaseValueTextId" class="col-sm-2 col-form-label-sm">Purchase Value</label>
                        <div class="col-sm-10">
                            <textarea class="form-control" id="purchaseValueTextId" style="height: 200px;" aria-label="With textarea" disabled></textarea>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="savingAmountTextId" class="col-sm-2 col-form-label-sm">Saving Amount</label>
                        <div class="col-sm-10">
                            <textarea class="form-control" id="savingAmountTextId" style="height: 200px;" aria-label="With textarea" disabled></textarea>
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="savingTypeDropDown" class="col-sm-2 col-form-label-sm control-label">Saving Type</label>
                        <div class="col-sm-4">
                            <select class="form-control" aria-label=".form-select-sm example" id="savingTypeDropDown" disabled>
                                <option value="None">Select</option>
                                <option value="CostAvoidance">Cost Avoidance</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card border-secondary mb-4">
            <div class="card-header">
                <b>Budget Descriptions</b>
            </div>
            <div class="card-body">
                <div class="container-fluid">
                    <div class="form-group row">
                        <label for="objectiveTextId" class="col-sm-2 col-form-label-sm">Objective</label>
                        <div class="col-sm-10">
                            <textarea class="form-control" id="objectiveTextId" aria-label="With textarea" style="height: 200px;" disabled>@Model.Estimation.EstimationObjective</textarea>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="textEditorEstimation" class="col-sm-2 col-form-label-sm">Details</label>
                        <div class="col-sm-10">
                            <textarea id="textEditorEstimation" name="detailsData" disabled>@Model.Estimation.EstimationDetails</textarea>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-2 col-form-label-sm">Plan Date</label>
                        <div class="col-sm-4">
                            <label for="datetimepickerEstimationStartDate" class="col-form-label-sm control-label">Start</label>
                            <input readonly="readonly" id="datetimepickerEstimationStartDate" class="form-control datepicker" disabled />
                        </div>
                        <div class="col-sm-4">
                            <label for="datetimepickerEstimationEndDate" class="col-form-label-sm control-label">End</label>
                            <input readonly="readonly" id="datetimepickerEstimationEndDate" class="form-control datepicker" disabled />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="estimationfiles" class="col-sm-2 col-form-label-sm">Attachments</label>
                        <div class="col-sm-4">
                            <table class="table table-sm">
                                <tr id="attachmentsTable"></tr>
                            </table>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="creatortext" class="col-sm-2 col-form-label-sm control-label">Created By</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control" id="creatortext" value="@Model.Estimation.CreateorFullName" disabled />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="creationDateTxt" class="col-sm-2 col-form-label-sm control-label">Creation Time</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control" id="creationDateTxt" value="@Model.Estimation.CreatedDate.ToString("f")" disabled />
                        </div>
                    </div>
                    <div class="form-group row" id="totalPriceDiv">
                        <label for="totalPriceText" class="col-sm-2 col-form-label-sm control-label">Total Price</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control numbersOnly" id="totalPriceText" value="@Model.Estimation.EstimaionTotalPrice" disabled />
                        </div>
                    </div>
                </div>
            </div>
            <div class="container-fluid">
                <div class="card border-secondary mb-4">
                    <div class="card-header">
                        <b>Budget Summary View</b>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-sm">
                                <div class="summaryHead">
                                    <h1>Department Wise Summary</h1>
                                </div>
                                <div class="table-responsive">
                                    <table class="table table-sm table-hover table-bordered departmentWiseSummaryTable"
                                           id="TableDepartmentWishSummary" style="float: left">
                                        <thead class="thead-dark">
                                            <tr>
                                                <th class="text-left" scope="col">Departments</th>
                                                <th class="text-right" scope="col">Total Budget (TK.)</th>
                                                <th class="text-right" scope="col">Total TA/DA Budget (TK.)</th>
                                                <th class="text-right" scope="col">Total Allowed Budget (TK.)</th>
                                                <th class="text-right" scope="col">Total Cost (TK.)</th>
                                                <th class="text-right" scope="col">Deviation</th>
                                                <th class="text-right" scope="col">Percentage</th>
                                            </tr>
                                        </thead>
                                        <tbody id="tDepartSummarybody" style="text-align: left">
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm">
                                <div class="summaryHead">
                                    <h1>Particular Wise Summary</h1>
                                </div>
                                <div class="table-responsive">
                                    <table class="table table-sm table-hover table-bordered particularWiseSummaryTable"
                                           id="TableParticularWishSummary" style="float: left">
                                        <thead class="thead-dark">
                                            <tr>
                                                <th class="text-left" scope="col">Particulars</th>
                                                <th class="text-right" scope="col">Total Price (TK.)</th>
                                                <th class="text-right" scope="col">Total TA/DA (TK.)</th>
                                                <th class="text-right" scope="col">Total Allowed Price (TK.)</th>
                                                <th class="text-right" scope="col">Total Cost (TK.)</th>
                                                <th class="text-right" scope="col">Deviation</th>
                                                <th class="text-right" scope="col">Percentage</th>
                                            </tr>
                                        </thead>
                                        <tbody id="tPartiSummarybody" style="text-align: left">
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card border-secondary mb-4" id="AddParticularSection">
            <div class="card-header">
                <b>Particular Items and Details</b>
                <p style="text-align: right">
                    <button style="margin-right: 5px;" class="btn btn-primary" id="settlementBulkExcelBtn"> <i class="fa fa-upload"></i>Settlement</button>
                    
          
                    <a id="btnDownloadPdfReport" href="/ReportGenarator/SettlementBulkTempleteDownload?id=@Model.Estimation.EstimateId" class="btn btn-info float-right">
                        <span class="icon text-gray-100">
                            <i class="fas fa-download"></i>
                        </span>
                    </a>
                    </p>
            </div>
            <div class="card-body">
                <div id="AddParticularSection">
                    <div class="container-fluid">
                        <div class="large-table-fake-top-scroll-container-3">
                            <div>&nbsp;</div>
                        </div>
                        <div class="table-responsive table-responsive  " id="particularItemTableId" style="max-width: 1200px; overflow: scroll;">
                            <table class="table table-responsive-md table-hover
table-bordered particularItemsAndDetailsTable
" id="particularItemsDetails">
                                <thead class="thead-dark">
                                    <tr>
                                        <th>#</th>
                                        <th scope="col" hidden>EstimateSettleIItemId</th>
                                        <th scope="col" style="position: sticky; left: 0%;">Particular </th>
                                        <th scope="col" style="position: sticky;left:10%;">Item Category</th>
                                        <th scope="col" style="position: sticky; left: 20%; ">Item</th>
                                        <th scope="col" style="position: sticky; left: 30%; ">Item Code</th>
                                        <th scope="col">Unit</th>
                                        <th scope="col">No. Of Machine /Usages /Team /Car</th>
                                        <th scope="col">No. Of Day /Total Unit</th>
                                        <th scope="col">Required Quantity</th>
                                        <th scope="col">Unit Price(Budget)</th>
                                        <th scope="col">Total Price(Budget)</th>
                                        <th scope="col">Responsible Department</th>
                                        <th scope="col">District</th>
                                        <th scope="col">Thana</th>
                                        <th scope="col">Area Type</th>
                                        <th scope="col">Settle Actual Quantity</th>
                                        <th scope="col">Settled Cost</th>
                                        <th scope="col">Actual Quantity </th>
                                        <th scope="col">Actual Unit Price </th>
                                        <th scope="col">Actual Cost </th>
                                        <th scope="col">Settlement Remarks</th>
                                    </tr>
                                </thead>
                                <tbody id="tbody" style="text-align: left">
                                </tbody>
                                <tfoot align="right">

                                    <tr>
                                        <td id="sumOfTotalPrice" hidden>@Model.Estimation.EstimaionTotalPrice</td>
                                        <td colspan="11" style="font-weight: bold;" id="sumOfTotalPriceShow"></td>
                                        <td>
                                            <span id="validationMsgOnDepartment" style="color: red"></span>
                                        </td>
                                        <td colspan="4" style="font-weight: bold;" id="sumOfSettledQuantity">BDSS</td>
                                        <td colspan="1" style="font-weight: bold;" id="sumOfSettledCost">BDDD</td>
                                        <td colspan="2">
                                            <span id="validationMsgOnThana" style="color: red"></span>
                                        </td>
                                        <td id="sumOfActualTotalPrice" hidden>@Model.Estimation.EstimaionTotalPrice</td>
                                        <td colspan="1" style="font-weight: bold;" id="sumOfActualTotalPriceShow"></td>

                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                    <div>
                        <div class="row">
                            <div class="col-md-4"></div>
                            <div class="col-md-4">
                                <span id="validatioOfParticularItem" style="color: red"></span>
                            </div>
                            <div class="col-md-4"></div>

                        </div>
                    </div>
                    <div class="container-fluid">
                        <div class="row">
                            <div class="col-sm-1">
                                <button class="btn btn-primary form-control-sm" id="addBtn" type="button"><i class="fa fa-plus" aria-hidden="true">Row</i></button>
                            </div>
                            <div class="col-sm-6"></div>
                            <div class="col-sm-3 input-group">
                                <input type="search" placeholder="Item Code" id="itemCodeSearch" class="form-control-sm" style="width:65%" />
                                <div class="input-group-append">
                                    <button class="btn btn-info form-control-sm" id="addByCode" type="button" s><i class="fa fa-plus" aria-hidden="true">Item</i></button>
                                </div>
                                <label id="errorItemCodelabel" style="color:red"></label>
                            </div>
                        </div>
                    </div>
                    <br />
                    
                    <div class="container-fluid">
                        <div class="card border-secondary mb-4">
                            <div class="card-header">
                                <b>Running Settlement Summary </b>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-sm">
                                        <div class="summaryHead">
                                            <h1>Department Wise Running Summary</h1>
                                        </div>
                                        <div class="table-responsive">
                                            <table class="table table-sm table-hover table-bordered departmentWiseSummaryTable"
                                                   id="TableDepartmentWishSummary" style="float: left">
                                                <thead class="thead-dark">
                                                    <tr>
                                                        <th class="text-left" scope="col">Departments</th>
                                                        <th class="text-right" scope="col">Total Budget (TK.)</th>
                                                        <th class="text-right" scope="col">Total TA/DA Budget (TK.)</th>
                                                        <th class="text-right" scope="col">Total Allowed Budget (TK.)</th>
                                                        <th class="text-right" scope="col">Total Cost (TK.)</th>
                                                        <th class="text-right" scope="col">Total Running Cost (TK.)</th>
                                                        <th class="text-right" scope="col">Deviation</th>
                                                        <th class="text-right" scope="col">Percentage</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="SettlementDepartSummarybody" style="text-align: left">
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm">
                                        <div class="summaryHead">
                                            <h1>Particular Wise Running Summary</h1>
                                        </div>
                                        <div class="table-responsive">
                                            <table class="table table-sm table-hover table-bordered particularWiseSummaryTable"
                                                   id="TableParticularWishSummary" style="float: left">
                                                <thead class="thead-dark">
                                                    <tr>
                                                        <th class="text-left" scope="col">Particulars</th>
                                                        <th class="text-right" scope="col">Total Budget (TK.)</th>
                                                        <th class="text-right" scope="col">Total TA/DA (TK.)</th>
                                                        <th class="text-right" scope="col">Total Allowed Budget (TK.)</th>
                                                        <th class="text-right" scope="col">Total Cost (TK.)</th>
                                                        <th class="text-right" scope="col">Total Running Cost (TK.)</th>
                                                        <th class="text-right" scope="col">Deviation</th>
                                                        <th class="text-right" scope="col">Percentage</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="SettlementPartiSummarybody" style="text-align: left">
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card secondary mb-4">
                        <div class="card-header">
                            <b>Settlment Details</b>
                        </div>
                        <div class="card-body">
                            @{
                                var settlementNote = ViewBag.Settlement == null ? "" : ViewBag.Settlement.SettlementNote;
                            }


                            <div class="container-fluid">
                                <div class="form-group row">
                                    <label for="detailsId" class="col-sm-2 col-form-label-sm">Settlement Note</label>
                                    <div class="col-sm-10">
                                        <textarea id="settlementNote" name="settlementNote">@Html.Raw(settlementNote)</textarea>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label for="estimationfiles" class="col-sm-2 col-form-label-sm">Attachments</label>
                                    <div class="col-sm-4">
                                        <input type="file" class="form-control" id="estimationfiles" name="attachedFiles" multiple />
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-sm-2"></div>
                                    <div class="col-sm-8">
                                        <ul id="attachmentsTableNew"></ul>
                                    </div>
                                    <div class="col-sm-8">
                                        @if (ViewBag.Settlement != null)
                                        {
                                            <ol>
                                                @foreach (var _file in ViewBag.Settlement.EstimateSettlementAttachments)
                                                {
                                                    <li id="liAttach' + x + '">
                                                        <a href="@_file.URL" download><i class="fa fa-download" aria-hidden="true"></i> @_file.FileName</a>
                                                        <span id="@_file.Id" class="removeAttachServer" style="font-size:15px;cursor:pointer">&#10060;</span>
                                                    </li>
                                                }
                                            </ol>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <br />
                   

                </div>
            </div>
        </div>
        <div class="card  secondary mb-4">
            <div class="card-header">
                Is it Final Settle
            </div>
            <div class="card-body">
                <label for="" class="col-sm-2 col-form-label-sm control-label">Is Final Settlement </label>
                <div class="col-sm-6" id="settlementTypeDiv">
                    <label class="btn btn-secondary" title="Only for notification and view access, no parking and no action required.">
                        <input type="radio" id="finalYesRadioButton" class="btn btn-default" name="settlementType" value="1" @(ViewBag.Settlement == null ? "" : ViewBag.Settlement.IsItFinalSetttlement == 1 ? "checked='true'" : "") />&nbsp;&nbsp;Yes
                    </label>
                    <label class="btn btn-success" title="Will be pending to Recommendation end for input. Will go to next after recommendation input.">
                        <input type="radio" id="finalNoRadioButton" class="btn btn-default" name="settlementType" value="0" @(ViewBag.Settlement == null ? "checked='true'" : ViewBag.Settlement.IsItFinalSetttlement == 0 ? "checked='true'" : "") />&nbsp;&nbsp;No
                    </label>

                </div>
            </div>
        </div>
        <br />
        <div class="card secondary mb-4">
            <div class="card-header">
                <b>Acknowledger Workflow Design </b>
            </div>
            <div class="card-body">
                <div class="container-fluid" id="addApproverForm">
                    <div class="form-group required row">
                        <label for="employeeListforApprover" class="col-sm-2 col-form-label-sm control-label">Employee List</label>
                        <div class="col-sm-4">
                            <select class="form-control autoSuggestionSelect" aria-label=".form-select-sm example" id="employeeListforApprover" style="width: 100%" required>
                                <option value="-1">Please Select Acknowledger</option>
                            </select>
                        </div>
                        <div class="col-sm-6">
                            <input type="text" class="form-control" id="userDepartmentID" disabled />
                            <input type="text" class="form-control" id="DeptIdUserID" hidden />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label class="col-sm-2 col-form-label-sm" for="datetimepickerApproverTimeLine">Acknowledger Role</label>
                        <div class="col-sm-4" id="sequenORparalllerRadioDiv">
                            <label class="btn btn-secondary" title="SEQUENCIAL or PARALLEL ??">
                                Flow >>>
                            </label>
                            <label class="btn btn-secondary" title="The approval request will process one by one in SEQUENCIAL mode.">
                                <input type="radio" class="btn btn-default" name="flow" value="Sequencial" checked />&nbsp;&nbsp;Sequencial
                            </label>
                            <label class="btn btn-secondary" title="The approval request will sent to all stakeholder during PARALLEL then will follow SEQUENCIAL mode.">
                                <input type="radio" class="btn btn-default" name="flow" value="Parallel" />&nbsp;&nbsp;Parallel
                            </label>
                        </div>
                        <div class="col-sm-6" id="approverTypeRadioDiv">
                            <label class="btn btn-secondary" title="Only for notification and view access, no parking and no action required.">
                                <input type="radio" class="btn btn-default" name="role" value="3" />&nbsp;&nbsp;Informed
                            </label>
                            <label class="btn btn-success" title="Will be pending to Recommendation end for input. Will go to next after recommendation input.">
                                <input type="radio" class="btn btn-default" name="role" value="2" checked />&nbsp;&nbsp;Acknowledged
                            </label>
                            <label class="btn btn-warning" title="Will be pending to Recommendation end for input. This will be the last stage of the workflow. Only one person can be final approver.">
                                <input type="radio" class="btn btn-default" name="role" value="1" />&nbsp;&nbsp;Final Acknowledged
                            </label>
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label class="col-sm-2 col-form-label-sm" for="datetimepickerApproverTimeLine">Time Line</label>
                        <div class="col-sm-4">
                            <input readonly="readonly" id="datetimepickerApproverTimeLine" class="form-control datepicker" required />
                        </div>
                    </div>
                </div>
                <div class="container-fluid col-sm-3">
                    <button class="btn btn-secondary" id="addApprover" type="button">Add Acknowledger</button>
                </div>
                <br />
                <div class="card secondary mb-4">
                    <div class="card-header">
                        <b>Acknowledger List </b>
                    </div>
                    <div class="card-body">
                        <div class="container-fluid">
                            <span id="app_err-container"></span>
                            <div class="table-responsive">
                                <table class="table table-sm table-hover table-bordered" id="TableAprroverList">
                                    <thead class="thead-dark">
                                        <tr>
                                            <th>#</th>
                                            <th class="text-center" scope="col">Acknowledger Name</th>
                                            <th class="text-center" scope="col">Acknowledger Type</th>
                                            <th class="text-center" scope="col">Acknowledger Department</th>
                                            <th class="text-center" scope="col">Expected Time</th>
                                        </tr>
                                    </thead>
                                    <tbody id="tApproverbody" style="text-align: left">
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />

        @{
            var settlementId = ViewBag.Settlement == null ? -1 : ViewBag.Settlement.Id;
        }

        <input id="settlementId"
               type="hidden"
               value="@settlementId" />
        <div class="container-fluid">
            <div class="form-group row" style="align-content: center">
                <div class="col-sm-4"></div>
                <div class="col-sm-8 ">
                    <button id="draftSettlement" class="btn btn-primary btn-lg" type="button">
                        <i class="fa fa-file" aria-hidden="true"></i> Draft
                    </button>
                    <button type="button" id="submitButton" class="btn btn-info btn-lg">
                        <i class="fa fa-eye" aria-hidden="true"></i> Submit
                    </button>
                </div>
            </div>
        </div>

    </form>

<div class="modal fade" id="finalSettlementWarningModal" tabindex="-1" role="dialog">
    <div class="modal-dialog  modal-lg"  role="document">
        <div class="modal-content">
            <div class="modal-header">
                <span class="text-danger">
                    you are not allowed to submit the Final Settlement
                    so Please Complete all of Pending Fund & settlement before Submit Final Settlement .
                </span>
            </div>
            <div class="modal-body">
                <table class="table table-sm table-hover table-bordered" id="TableIncompletedFundList">
                    <thead class="thead-dark">
                    <tr>
                        <th>#</th>
                        <th class="text-center" scope="col">Fund Id</th>

                        <th class="text-center" scope="col">RequisitionType</th>
                               
                        <th class="text-center" scope="col">Fund Requestor </th>
                        <th class="text-center" scope="col"> Requisition Amount</th>
                        <th class="text-center" scope="col">Disburse Amount </th>
                        <th class="text-center" scope="col">Received Amount </th>

                    </tr>
                    </thead>
                    <tbody id="TBodyIncompletedFundList" style="text-align: left">
                    </tbody>
                </table>
                <table class="table table-sm table-hover table-bordered" id="TableIncompletedSettlementList">
                    <thead class="thead-dark">
                    <tr>
                        <th>#</th>
                        <th class="text-center" scope="col">Settlement Id</th>
                        <th class="text-center" scope="col">Status</th>
                        <th class="text-center" scope="col">Settlement Amount</th>
                        <th class="text-center" scope="col">Settlement Creator Name</th>

                    </tr>
                    </thead>
                    <tbody id="TBodyIncompletedSettlementList" style="text-align: left">
                    </tbody>
                </table>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>
<!-- Modal Loader -->
<div class="modal fade bd-example-modal-xl" id="loaderModal" tabindex="-1" role="dialog" aria-labelledby="myExtraLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-body">
            <div align='center'>
                <div class="loader"> </div>
                <strong style="color: yellow">Please Wait ...</strong> <br>
                <strong style="color: yellow">The task is being executed.Please wait until it is completed. </strong> <br>
            </div>
        </div>
    </div>
</div>
</div>


@section Scripts{
    <script src="~/js/AjaxCall/Settlement.js"></script>
    <script>
        var rowIdx = 0;
        var storeItemDetails;
        var storeUsersWithDepartmentName;
        var tableOpen = 1;

        var filelist = [];
        var formData;
        var approverPriorityIndex = 101;

        $(document).ready(function () {
            $(document).on('click',
                '#clearbtn',
                function () {

                    $("#form")[0].reset();
                });
            GetSettlementInitData(0);
            $('.procurementApprovalDiv').hide();
            $("#totalPriceDiv").hide();
            $('#settlementNote').summernote({
                placeholder: 'Settlment Note',
                tabsize: 2,
                height: 300,
                toolbar: [
                    ['style', ['style']],
                    ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']],
                    ['fontname', ['fontname']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ol', 'ul', 'paragraph', 'height']],
                    ['table', ['table']],
                    ['insert', ['link', 'picture', 'video']],
                    ['view', ['undo', 'redo', 'fullscreen', 'codeview', 'help']]
                ]
            });
            $('#textEditorEstimation').summernote({
                placeholder: 'Estimation Details',
                tabsize: 2,
                height: 300,
                toolbar: [
                    ['style', ['style']],
                    ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']],
                    ['fontname', ['fontname']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ol', 'ul', 'paragraph', 'height']],
                    ['table', ['table']],
                    ['insert', ['link', 'picture', 'video']],
                    ['view', ['undo', 'redo', 'fullscreen', 'codeview', 'help']]
                ]
            });
            $('#textEditorEstimation').summernote('disable');
            getUserWithDepartmentNameSelect2FromDb();
            var uploadField = document.getElementById("estimationfiles");
            uploadField.onchange = function () {
                if (this.files[0].size > 10000000) {
                    alertify.alert("File is too big!");
                    this.value = "";
                };
            };
            $("input[name=attachedFiles]").change(function () {
                var files = $(this).get(0).files;
                for (var x = 0; x < files.length; x++) {
                    filelist.push(files[x]);
                    $("#attachmentsTableNew").append('<li id="liAttach' + x + '"><a href="#">' + files[x].name + '</a><span id="' + x + '" class="removeAttachLocal" style="font-size:15px;">&#10060;</span></li>');
                }
            });
            $("body").on('click',
                ".removeAttachLocal",
                function () {
                    var index = this.id;
                    filelist[index] = {};
                    $(this).parent().remove();
                });
            var estimationId = $("#estimateId").val();
            var selectValue = $("#approvalForDropDown").val();

            var formatter = new Intl.NumberFormat('en-IN',
                {
                    style: 'currency',
                    currency: 'BDT'
                });

            var totalPriceWithoutItemTable = $('#totalPriceText').val();
            var formatedtotalPriceWithoutItemTable = formatter.format(totalPriceWithoutItemTable);
            $('#totalPriceText').val(formatedtotalPriceWithoutItemTable);

            var totalPrice = $('#sumOfTotalPrice').text();
            var formatedtotalPrice = formatter.format(totalPrice);
            $('#sumOfTotalPriceShow').text(formatedtotalPrice);

            getUserDept();
            loadEstimation(estimationId);
            loadAttachments(estimationId);
            if (selectValue == 7) {
                $('.procurementApprovalDiv').show();
                loadProcurementApprovalEstimate(estimationId);
            }
            loadEstimationDetails(estimationId);
            loadEstimateApprovers($("#settlementId").val());
            setTimeout(function(){
                loadSummariesOfThisEstimation(estimationId);
            },1000)
            loadEstimateApproverRemarkList(estimationId);

            $('#finalYesRadioButton').click(function () {
                settlementAndFundIsCompleted = 0;
                settlementAndSettlementIsCompleted = 0;
                $('#TBodyIncompletedFundList tr>td').remove();
                $('#TBodyIncompletedSettlementList tr>td').remove();
                $.ajax({
                    type: "GET",
                    async: false,
                    url: "/Settlement/GetInCompletedSettlementForCheckFinalSettlement?estimationId=" + estimationId,
                    data: "{}",
                    success: function (data) {
                        var incompletedSettlements = data;
                        if (data.length > 0) {
                            $("#finalNoRadioButton").trigger("click");

                            for (var i = 0; i < incompletedSettlements.length; i++) {
                              
                                $('#TBodyIncompletedSettlementList').append(
                                    `<tr >
                                        <td>&nbsp;</td>
                                        <td >` + incompletedSettlements[i].settlementId + `</td>
                                        <td >` + incompletedSettlements[i].status + `</td>
                                        <td >` + incompletedSettlements[i].settleAmount + `</td>
                                        <td >` + incompletedSettlements[i].creatorFullName + `</td>

                                    </tr>`);

                            }

                        } else {
                            settlementAndSettlementIsCompleted = 1;
                            $("#TableIncompletedSettlementList").hide();
                        }
                    }
                });
                $.ajax({
                    type: "GET",
                    async: false,
                    url: "/FundRequisition/GetInCompletedFundRequisitionForCheckFinalSettlement?estimationId=" + estimationId,
                    data: "{}",
                    success: function (data) {
                        var incompletedFund = data;
                        if (data.length > 0) {
                            $("#finalNoRadioButton").trigger("click");

                            for (var i = 0; i < incompletedFund.length; i++) {
                              
                                $('#TBodyIncompletedFundList').append(
                                    `<tr >
                                        <td>&nbsp;</td>
                                        <td >` + incompletedFund[i].fundRequisitionId + `</td>
                                      
                                        <td >` + incompletedFund[i].requisitionType + `</td>
                                        <td >` + incompletedFund[i].createorFullName + `</td>
                                          <td >` + incompletedFund[i].fundRequested + `</td>
                                        <td >` + incompletedFund[i].alreadyDisburseAmount + `</td>
                                        <td >` + incompletedFund[i].totalReceived + `</td>

                                    </tr>`);

                            }

                        }
                        else {
                            settlementAndFundIsCompleted = 1;
                            $("#TableIncompletedFundList").hide();
                            $('#finalSettlementWarningModal').modal('hide');
                        }
                    }
                });
                if (Number(settlementAndFundIsCompleted) == 0 || settlementAndSettlementIsCompleted == 0) {

                    $('#finalSettlementWarningModal').modal();
                }
            });

            $('#addBtn').on('click',
                function () {
                    ++rowIdx;
                    addTableRow(rowIdx);
                    getParticularsDropdown(rowIdx);
                    getDepartmentsDropdown(rowIdx);
                    getAreasDropdown(rowIdx);
                    getDistrictsDropdown(rowIdx);
                });
            $('#addByCode').on('click',
                function () {
                    var itemCode = $("#itemCodeSearch").val();
                    if (itemCode == '' || typeof itemCode === 'undefined')
                        return;

                    $.ajax({
                        type: "GET",
                        url: "/Item/GetItemAnditsDetailByItemCode?code=" + itemCode,
                        data: "{}",
                        success: function (data) {
                            if (data == null) {
                                $("#errorItemCodelabel").text("Invalid Item Code");
                                return;
                            }
                            $("#errorItemCodelabel").text("");

                            ++rowIdx;
                            addTableRow(rowIdx);

                            $("#paticularDropdown" + rowIdx).append(`<option value="${data.particularId}"> ${data.particularName} </option>`);
                            $("#itemCategoryDropdown" + rowIdx).append(`<option value="${data.itemCategoryId}"> ${data.itemCategoryName} </option>`);
                            $("#itemDropdown" + rowIdx).append(`<option value="${data.itemId}"> ${data.itemName} </option>`);
                            $("#itemCodeTextId" + rowIdx).html(data.itemCode);
                            $("#itemUnitTextId" + rowIdx).text(data.itemUnitName);
                            $("#unitPriceTextId" + rowIdx).val(data.itemUnitPrice);
                            $("#TotalPriceTextId" + rowIdx).text(0);
                            $("#NoOfMaUTCaTextId" + rowIdx).val(0);
                            $("#NoOfDTUTextId" + rowIdx).val(0);
                            $("#requiredQuantityTextId" + rowIdx).val(0);

                            getDepartmentsDropdown(rowIdx);
                            getDistrictsDropdown(rowIdx);
                            getAreasDropdown(rowIdx);
                            getSumOfTotalPrice();
                        }
                    });
                });

            //when particular selector changes
            $('#tbody').on('change',
                '.particularSelectorFromTable',
                function () {
                    let getDomId = $(this).attr('id');
                    var rowTrackId = getDomId.slice(17);
                    var value = $("#paticularDropdown" + rowTrackId).val();
                    getItemCategoryById(value, rowTrackId);
                    $('#itemDropdown' + rowTrackId).text("Select");
                    setDefaultDataOnMultipleSpanAndTextBoxOnParticularTable(rowTrackId);
                });
            $('#tbody').on('change',
                '.itemCategoryDropdownSelector',
                function () {
                    let getDomId = $(this).attr('id');
                    var rowTrackId = getDomId.slice(20);
                    var value = $("#itemCategoryDropdown" + rowTrackId).val();
                    getItemUnitDetails(value, rowTrackId);
                    setDefaultDataOnMultipleSpanAndTextBoxOnParticularTable(rowTrackId);
                });
            $('#tbody').on('change',
                '.itemSelectorFromTable',
                function () {
                    $("#validationMsgOnParticular").hide();
                    let getDomId = $(this).attr('id');
                    var rowTrackId = getDomId.slice(12);
                    var value = $("#itemDropdown" + rowTrackId).val();
                    var flag;
                    for (var i = 0; i < storeItemDetails.length; i++) {
                        if (storeItemDetails[i]['id'] == value) {
                            flag = i;
                            break;
                        }
                    }
                    setValuesOnItemCodeAndItemUnitTextAndUnitPrice(rowTrackId, flag);
                });
            $('#tbody').on('click',
                '.remove',
                function () {
                    $(this).closest('tr').remove();
                    getSumOfTotalPrice();
                });

            //when district changes
            $('#tbody').on('change',
                '.distSelectorFromTable',
                function () {
                    var child = $(this).closest('tr').nextAll();
                    var rowTrackId = child.prevObject.attr("id").slice(1);
                    var value = $("#districtDropdown" + rowTrackId).val();
                    getThanaByDistIdFromDB(value, rowTrackId);
                });

            //when thana changes
            $('#tbody').on('change',
                '.particularTableThana',
                function () {
                    $("#validationMsgOnThana").hide();
                });

            //keyup event on findTotalPrice classes
            $('#tbody').on('keyup',
                '.actualQuantity',
                function () {
                    var child = $(this).closest('tr').nextAll();
                    var rowTrackId = child.prevObject.attr("id").slice(1);
                    calculateTotalPrice(rowTrackId);
                });
            //
            $('#tbody').on('keyup',
                '.actualUnitPrice',
                function () {
                    var child = $(this).closest('tr').nextAll();
                    var rowTrackId = child.prevObject.attr("id").slice(1);
                    calculateTotalPrice(rowTrackId);
                });


            function getUserDept() {
                var sessionUserDept = {};
                $.ajax({
                    type: "POST",
                    url: "/User/GetUserByUserId",
                    data: "{}",
                    success: function (data) {
                        var sessionUserDept = data;
                        ;
                    }
                });
                return sessionUserDept.isCRA;

            }
            function loadEstimation(value) {
                $.ajax({
                    type: "GET",
                    url: "/Estimation/GetEstimationInfobyId?estimationId=" + value,
                    data: "{}",
                    success: function (data) {
                        var estimation = data.estimation;
                        $("#subjectTextId").val(estimation.estimationSubject);
                        $("#datetimepickerEstimationEndDate").val(estimation.estimationPlanEndDate.slice(0, 10));
                        $("#datetimepickerEstimationStartDate").val(estimation.estimationPlanStartDate.slice(0, 10));
                    }
                });
            }

            function loadProcurementApprovalEstimate(value) {
                $.ajax({
                    type: "GET",
                    url: "/Estimation/GetProcurementApprovalEstimationInfobyEstimateId?estimationId=" + value,
                    data: "{}",
                    success: function (data) {
                        $("#paReferenceNumberTextId").val(data.paReferenceNo);
                        $("#titleOfPRorRFQTextId").val(data.titleOfPRorRFQ);
                        $("#RFQReferNoTextId").val(data.rfqReferenceNo);
                        $("#PRReferenceNoTextId").val(data.prReferenceNo);
                        $("#nameAndCellRequesterTextId").val(data.nameOfRequester);
                        $('#deptOrDivTextId').val(data.departmentId);
                        $("#RFQProcessTextId").val(data.rfqProcess);
                        $("#sourcingMethodTextId").val(data.sourcingMethod);
                        $("#nameSupplierTextId").val(data.nameOfRecommendedSupplier);
                        $("#purchaseValueTextId").val(data.purchaseValue);
                        $("#savingAmountTextId").val(data.savingAmount);
                        $("#savingTypeDropDown option").filter(function () {
                            return $(this).text() == data.savingType;
                        }).prop('selected', true);
                    }
                });
            }

            function loadAttachments(value) {
                $.ajax({
                    type: "GET",
                    url: "/BudgetEstimation/LoadEstimateAttachmentsByEstimateId?estimateId=" + value,
                    data: "{}",
                    success: function (data) {
                        let attachment = data;
                        for (var i = 0; i < attachment.length; i++) {
                            var str = attachment[i].url;

                            let index = str.indexOf('\\uploadedFiles\\NewFolder');
                            var res = str.substring(index);

                            $('#attachmentsTable').append(
                                `<td><a href="` + res + `" download>` + attachment[i].fileName + `</a></td>`
                            );
                        }
                    }
                });
            }

            function loadEstimationDetails(value) {
                var formatter = new Intl.NumberFormat('en-IN');
                $.ajax({
                    type: "GET",
                    url: "/SettlementItem/GetSettlementItemsByEstimateId?estiId=" + value,
                    data: "{}",
                    success: function (data) {
                        var details = data;
                        if (details.length < 1) {
                            $("#AddParticularSection").hide();
                            $("#totalPriceDiv").show(0);
                            tableOpen = 0;
                        } else {
                            for (var i = 0; i < details.length; i++) {

                                var deptId = details[i].departmentId;
                                var deptName = details[i].departmentName;
                                var formatedTotalPrice = formatter.format(details[i].totalPrice);
                                if ((Number(details[i].isItDeduct) == 1 || Number(details[i].quantityRequired) > 0 || details[i].itemCategory == "TA/DA") && details[i].itemName != "Local Conveyance") {

                                    if ((Number(details[i].isItDeduct) == 1 || details[i].itemCategory == "TA/DA") && details[i].itemName != "Local Conveyance") {

                                        $('#tbody').append(`
                                            <tr id="R${++rowIdx}" class="disabledRowColor">
                                            <td>&nbsp;</td>
                                            <td class="estimateSettleItemId" hidden>
                                            ` +
                                            details[i].estimateSettleItemId +
                                            `
                                                            </td><td hidden><select class="particularSelectorFromTable" name="particularDropdown" disabled>
                                                        <option value="` +
                                            details[i].particularId +
                                            `">` +
                                            details[i].particular +
                                            `</option></select></td>
                                            <td style="position: sticky; left: 0%; background : #A9A9A9;">
                                                ` +
                                            details[i].particular +
                                            `
                                            </td>
                                            <td style="position: sticky; left: 10%;  background : #A9A9A9; " class="itemCategory">
                                                ` +
                                            details[i].itemCategory +
                                            `
                                            </td>
                                            <td style="position: sticky; left: 20%;  background : #A9A9A9;">
                                                <span >` +
                                            details[i].itemName +
                                            `</span>
                                            </td>
                                                    <td style="position: sticky; left: 30%;  background : #A9A9A9;">
                                                <span >` +
                                            details[i].itemCode +
                                            `</span>
                                            </td>
                                            <td>
                                                <span >` +
                                            details[i].itemUnit +
                                            `</span>
                                            </td>
                                            <td>
                                                <input type="text" class="findTotalPrice nomuct singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                                id="NoOfMaUTCaTextId${rowIdx}" name="indexMAU"
                                                                    value="` +
                                            details[i].noOfMachineAndUsagesAndTeamAndCar +
                                            `" disabled />
                                            </td>
                                            <td>
                                                <input type="text" class="onlyNumber findTotalPrice nodut singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                              id="NoOfDTUTextId${rowIdx}" value="` +
                                            details[i].noOfDayAndTotalUnit +
                                            `" disabled />
                                            </td>
                                            <td>
                                                 <input type="text" class="onlyNumber findTotalPrice rqt singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                              id="requiredQuantityTextId${rowIdx}" value="` +
                                            details[i].quantityRequired +
                                            `" disabled />
                                            </td>
                                            <td>
                                                 <input type="text" class="form-control-sm itemUnitPrice numbersOnly" id="unitPriceTextId${rowIdx}" value="` +
                                            details[i].unitPrice +
                                            `" style="width:100px" disabled />
                                            </td>
                                            <td>
                                                <input type="text" class="onlyNumber ftBudgetedPrice findTotalPrice nodut singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                               id="totalPriceBudget${rowIdx}" value="` +
                                            details[i].totalPrice +
                                            `" disabled />
                                                               </td>
                                                                        <td hidden><select class="departmentSelector" name="demartmentDropdown" disabled>
                                                <option value="` +
                                            details[i].departmentId +
                                            `">` +
                                            deptName +
                                            `</option></select></td>
                                            <td>` +
                                            deptName +
                                            `</td>
                                            <td hidden>
                                                        <input type="text" class=" findTotalPrice nodut singleRowFindDepartmentId${rowIdx}" style="width:50px"
                                                                       id="departmentId${rowIdx}" value="` +
                                            details[i].departmentId +
                                            `" disabled />
                                                                       </td>
                                            <td>` +
                                            details[i].districtName +
                                            `
                                                    <td>` +
                                            details[i].thanaName +
                                            `
                                                    <td>` +
                                            details[i].areaType +
                                            `

                                            <td>
                                                <input type="text"  class="onlyNumber findTotalPrice rqt singleRowFindTotalPrice${rowIdx} " style="width:80px"
                                                                id="settleActualQuantityTextId${rowIdx}" value="` +
                                            details[i].settleActualQuantity +
                                            `" disabled />
                                            </td>
                                            <td>
                                                <input type="text" class="onlyNumber findTotalPrice alreadySettleCost nodut singleRowFindTotalPrice${rowIdx}" style="width:80px"
                                                                id="alreadySettleCost${rowIdx}" value="` +
                                            details[i].alreadySettle +
                                            `" disabled />
                                            </td>
                                            <td class="settleItemId" hidden>
                                            ` +
                                            details[i].settleItemId +
                                            `
                                            </td>
                                            <td >
                                                            <input type="text" class="onlyNumber actualQuantity  actualQuantity{rowIdx} actualQuantity_${details[i].estimateSettleItemId}" style="width:60px"
                                                                id="actualQuantity${rowIdx}" value="` +
                                            (details[i].actualQuantity == 0 ? '' : details[i].actualQuantity) +
                                            `" disabled />
                                                        </td>
                                                        <td >
                                                            <input type="text" class="onlyNumber actualUnitPrice  actualUnitPrice${rowIdx} actualUnitPrice_${details[i].estimateSettleItemId}" style="width:60px"
                                                                id="actualUnitPrice${rowIdx}" value="` +
                                            (details[i].actualUnitPrice == 0 ? '' : details[i].actualUnitPrice) +
                                            `" disabled />
                                                        </td>
                                                        <td >
                                                                    <input type="text" class="onlyNumber actualTotalPrice  actualTotalPrice${rowIdx} actualTotalPrice_${details[i].estimateSettleItemId}" style="width:80px"
                                                                id="actualTotalPrice${rowIdx}" value="` +
                                            (details[i].actualTotalPrice == 0 ? '' : details[i].actualTotalPrice) +
                                            `" disabled  readonly/>
                                                        </td>
                                                         <td colspan="2">
                                                            <input type="text" class="settleItemRemarks  settleItemRemarks${rowIdx} settleItemRemarks_${details[i].estimateSettleItemId}"
                                                                id="settleItemRemarks${rowIdx}" value="` +
                                            (details[i].settleItemRemarks == null ? '' : details[i].settleItemRemarks) +
                                            `" disabled />
                                                        </td>
                                            </tr>`);
                                    } else {


                                        $('#tbody').append(`
                                            <tr id="R${++rowIdx}">
                                            <td>&nbsp;</td>
                                            <td class="estimateSettleItemId" hidden>
                                            ` +
                                            details[i].estimateSettleItemId +
                                            `
                                            </td>
                                                    <td hidden><select class="particularSelectorFromTable" name="particularDropdown" disabled>
                                                                <option value="` +
                                            details[i].particularId +
                                            `">` +
                                            details[i].particular +
                                            `</option></select></td>
                                                    <td style="position: sticky; left: 0%; background: white;">
                                                ` +
                                            details[i].particular +
                                            `
                                            </td>
                                            <td style="position: sticky; left: 10%; background: white;" class="itemCategory">
                                                ` +
                                            details[i].itemCategory +
                                            `
                                            </td>
                                            <td style="position: sticky; left: 20%; background: white;">
                                                <span style="color:blue;font-weight:bold">` +
                                            details[i].itemName +
                                            `</span>
                                            </td>
                                            <td style="position: sticky; left: 30%; background: white;">
                                                <span style="color:blue;font-weight:bold">` +
                                            details[i].itemCode +
                                            `</span>
                                            </td>
                                            <td>
                                                <span style="color:blue;font-weight:bold">` +
                                            details[i].itemUnit +
                                            `</span>
                                            </td>
                                            <td>
                                                <input type="text" class="findTotalPrice nomuct singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                                id="NoOfMaUTCaTextId${rowIdx}" name="indexMAU"
                                                                    value="` +
                                            details[i].noOfMachineAndUsagesAndTeamAndCar +
                                            `" disabled />
                                            </td>
                                            <td>
                                                <input type="text" class="onlyNumber findTotalPrice nodut singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                              id="NoOfDTUTextId${rowIdx}" value="` +
                                            details[i].noOfDayAndTotalUnit +
                                            `" disabled />
                                            </td>
                                            <td>
                                                 <input type="text" class="onlyNumber findTotalPrice rqt singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                              id="requiredQuantityTextId${rowIdx}" value="` +
                                            details[i].quantityRequired +
                                            `" disabled />
                                            </td>
                                            <td>
                                                 <input type="text" class="form-control-sm itemUnitPrice numbersOnly" id="unitPriceTextId${rowIdx}" value="` +
                                            details[i].unitPrice +
                                            `" style="width:100px" disabled />
                                            </td>
                                            <td>
                                                        <input type="text" class="onlyNumber ftBudgetedPrice findTotalPrice nodut singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                               id="totalPriceBudget${rowIdx}" value="` +
                                            details[i].totalPrice +
                                            `" disabled />
                                                               </td>
                                                                        <td hidden><select class="departmentSelector" name="demartmentDropdown" disabled>
                                                        <option value="` +
                                            details[i].departmentId +
                                            `">` +
                                            deptName +
                                            `</option></select></td>
                                            <td>` +
                                            deptName +
                                            `</td><td>` +
                                            details[i].districtName +
                                            `
                                                    <td>` +
                                            details[i].thanaName +
                                            `
                                                    <td>` +
                                            details[i].areaType +
                                            `

                                            <td>
                                                <input type="text" class="onlyNumber findTotalPrice settleActualQuantity rqt singleRowFindTotalPrice${rowIdx}" style="width:80px"
                                                                id="settleActualQuantityTextId${rowIdx}" value="` +
                                            details[i].settleActualQuantity +
                                            `" disabled />
                                            </td>
                                            <td>
                                                <input type="text" class="onlyNumber findTotalPrice alreadySettleCost nodut singleRowFindTotalPrice${rowIdx}" style="width:80px"
                                                                id="alreadySettleCost${rowIdx}" value="` +
                                            details[i].alreadySettle +
                                            `" disabled />
                                            </td>
                                            <td class="settleItemId" hidden>
                                            ` +
                                            details[i].settleItemId +
                                            `
                                            </td>
                                            <td >
                                                            <input type="text" class="onlyNumber actualQuantity  actualQuantity{rowIdx} actualQuantity_${details[i].estimateSettleItemId}" style="width:60px"
                                                                id="actualQuantity${rowIdx}" value="` +
                                            (details[i].actualQuantity == 0 ? '' : details[i].actualQuantity) +
                                            `"  />
                                                        </td>
                                                        <td >
                                                                    <input type="text" class="onlyNumber actualUnitPrice  actualUnitPrice${rowIdx} actualUnitPrice_${details[i].estimateSettleItemId}" style="width:60px"
                                                                id="actualUnitPrice${rowIdx}" value="` +
                                            (details[i].actualUnitPrice == 0 ? '' : details[i].actualUnitPrice) +
                                            `"  />
                                                        </td>
                                                        <td >
                                                            <input type="text" class="onlyNumber actualTotalPrice  actualTotalPrice${rowIdx} actualTotalPrice_${details[i].estimateSettleItemId}" style="width:80px"
                                                                id="actualTotalPrice${rowIdx}" value="` +
                                            (details[i].actualTotalPrice == 0 ? '' : details[i].actualTotalPrice) +
                                            `" disabled />
                                                        </td>
                                                         <td colspan="2">
                                                            <input type="text" class="settleItemRemarks  settleItemRemarks${rowIdx} settleItemRemarks_${details[i].estimateSettleItemId}"
                                                                id="settleItemRemarks${rowIdx}" value="` +
                                            (details[i].settleItemRemarks == null ? '' : details[i].settleItemRemarks) +
                                            `"  />
                                                        </td>
                                            </tr>`);
                                    }
                                } else {
                                    $('#tbody').append(`
                                        <tr id="R${++rowIdx}" class="newAddedRowColor">
                                            <td>&nbsp;</td>
                                            <td class="estimateSettleItemId" hidden>
                                            ` +
                                        details[i].estimateSettleItemId +
                                        `
                                            </td>
                                                    <td hidden><select class="particularSelectorFromTable" name="particularDropdown" disabled>
                                                                <option value="` +
                                        details[i].particularId +
                                        `">` +
                                        details[i].particular +
                                        `</option></select></td>
                                            <td style="position: sticky; left: 0%; background: white; ">
                                                ` +
                                        details[i].particular +
                                        `
                                            </td>
                                                            <td style="position: sticky; left: 10%; background: white;" class="itemCategory">
                                                ` +
                                        details[i].itemCategory +
                                        `
                                            </td>
                                            <td style="position: sticky; left: 20%; background: white;">
                                                <span style="color:blue;font-weight:bold">` +
                                        details[i].itemName +
                                        `</span>
                                            </td>
                                            <td style="position: sticky; left: 30%; background: white;">
                                                <span style="color:blue;font-weight:bold">` +
                                        details[i].itemCode +
                                        `</span>
                                            </td>
                                            <td>
                                                <span style="color:blue;font-weight:bold">` +
                                        details[i].itemUnit +
                                        `</span>
                                            </td>
                                            <td>
                                                <input type="text" class="findTotalPrice nomuct singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                                id="NoOfMaUTCaTextId${rowIdx}" name="indexMAU"
                                                                    value="` +
                                            details[i].noOfMachineAndUsagesAndTeamAndCar +
                                            `" disabled />
                                            </td>
                                            <td>
                                                <input type="text" class="onlyNumber findTotalPrice nodut singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                              id="NoOfDTUTextId${rowIdx}" value="` +
                                            details[i].noOfDayAndTotalUnit +
                                            `" disabled />
                                            </td>
                                            <td>
                                                 <input type="text" class="onlyNumber findTotalPrice rqt singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                              id="requiredQuantityTextId${rowIdx}" value="` +
                                            details[i].quantityRequired +
                                            `" disabled />
                                            </td>
                                            <td>
                                                 <input type="text" class="form-control-sm itemUnitPrice numbersOnly" id="unitPriceTextId${rowIdx}" value="` +
                                            details[i].unitPrice +
                                            `" style="width:100px" disabled />
                                            </td>
                                            <td>
                                                        <input type="text" class="onlyNumber ftBudgetedPrice findTotalPrice nodut singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                               id="totalPriceBudget${rowIdx}" value="` +
                                            details[i].totalPrice +
                                            `" disabled />
                                                               </td>
                                                                        <td hidden><select class="departmentSelector" name="demartmentDropdown" disabled>
                                                        <option value="` +
                                        details[i].departmentId +
                                        `">` +
                                        deptName +
                                        `</option></select></td>
                                            <td>` +
                                        deptName +
                                        `</td><td>` +
                                        details[i].districtName +
                                        `
                                                    <td>` +
                                        details[i].thanaName +
                                        `
                                                    <td>` +
                                        details[i].areaType +
                                        `

                                            <td>
                                                <input type="text" class="onlyNumber findTotalPrice rqt singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                                id="settleActualQuantityTextId${rowIdx}" value="` +
                                        details[i].settleActualQuantity +
                                        `" disabled />
                                            </td>
                                            <td>
                                                <input type="text" class="onlyNumber findTotalPrice alreadySettleCost nodut singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                                id="alreadySettleCost${rowIdx}" value="` +
                                        details[i].alreadySettle +
                                        `" disabled />
                                            </td>
                                            <td class="settleItemId" hidden>
                                            ` +
                                        details[i].settleItemId +
                                        `
                                            </td>
                                            <td >
                                                            <input type="text" class="onlyNumber actualQuantity  actualQuantity{rowIdx} actualQuantity_${details[i].estimateSettleItemId}" style="width:50px"
                                                                id="actualQuantity${rowIdx}" value="` +
                                        (details[i].actualQuantity == 0 ? '' : details[i].actualQuantity) +
                                        `"  />
                                                        </td>
                                                        <td >
                                                                    <input type="text" class="onlyNumber actualUnitPrice  actualUnitPrice${rowIdx} actualUnitPrice_${details[i].estimateSettleItemId}" style="width:50px"
                                                                id="actualUnitPrice${rowIdx}" value="` +
                                        (details[i].actualUnitPrice == 0 ? '' : details[i].actualUnitPrice) +
                                        `"  />
                                                        </td>
                                                        <td >
                                                            <input type="text" class="onlyNumber actualTotalPrice  actualTotalPrice${rowIdx} actualTotalPrice_${details[i].estimateSettleItemId}" style="width:50px"
                                                                id="actualTotalPrice${rowIdx}" value="` +
                                        (details[i].actualTotalPrice == 0 ? '' : details[i].actualTotalPrice) +
                                        `" disabled />
                                                        </td>
                                                         <td colspan="2">
                                                            <input type="text" class="settleItemRemarks  settleItemRemarks${rowIdx} settleItemRemarks_${details[i].estimateSettleItemId}"
                                                                id="settleItemRemarks${rowIdx}" value="` +
                                        (details[i].settleItemRemarks == null ? '' : details[i].settleItemRemarks) +
                                        `"  />
                                                        </td>
                                                        </td>
                                                                    <td class="text-center">
                                    <i class="fa fa-cart-plus fa-2x" aria-hidden="true"</i>
                                </td>
                                        </tr>`);
                                }

                                getSumOfTotalPrice();
                                getSumOfTotalSettledAmount();
                                getSumOfTotalSettledQuantity();
                            }
                        }
                    }
                });
            }

            function loadEstimateApprovers(value) {
                $.ajax({
                    type: "GET",
                    url: "/Settlement/GetAllApproverBySettlementIdForRollbackDraft?settlementId=" + value,
                    data: "{}",
                    success: function (data) {
                        var approvers = data;
                       
                        for (var i = 0; i < approvers.length; i++) {
                           
                            $('#tApproverbody').append(
                                `<tr id="RowApprover${++rowApproverIdx}">
                                        <td>&nbsp;</td>
                                        <td class="approverName">` + approvers[i].approverFullName + `</td>
                                        <td class="approverId" hidden>` + approvers[i].approverId + `</td>
                                        <td class="approverPriority" hidden>` + approvers[i].approverPriority + `</td>
                                        <td class="approverPriorityType" hidden>` + approvers[i].approverRoleId + `</td>
                                        <td class="approverPriorityTypeText">` + approvers[i].approverRoleName + `</td>
                                        <td class="approverDepartment">` + approvers[i].approverDepartment + `</td>
                                        <td class="approverDepartmentId" hidden>` + approvers[i].approverDepartmentId + `</td>
                                        <td class="approverExpectedTime">`+ approvers[i].approverPlanDate.slice(0, 10) + `</td>
                                        <td class="text-center">
                                            <button class="btn btn-danger remove" type="button"><i class="fa fa-trash" aria-hidden="true"></i></button>
                                        </td>
                                    </tr>`);

                            if (approverPriorityIndex > approvers[i].approverPriority && approvers[i].approverRoleId == 2)
                                approverPriorityIndex = approvers[i].approverPriority;
                        }
                    }
                });
            }

            function loadSummariesOfThisEstimation(value) {
                var formatter = new Intl.NumberFormat('en-IN',
                    {
                        style: 'currency',
                        currency: 'BDT'
                    });
                
                $.ajax({
                    type: "GET",
                    url: "/Settlement/LoadDepartmentWiseSummaryForASettledEstimationWithBudgetData?estimationId=" + value,
                    data: "{}",
                    success: function (data) {
                        var deptSummary = data;
                        let tTotalCost = 0;
                        let totalBudgetExclueScm = 0;
                        let totalTADAExclueScm = 0;
                        let totalAllowedBudgetExclueScm = 0;
                        let tTotalBudget = 0;
                        let tTotalTADA = 0;
                        let tTotalAllowedBudget = 0;
                        let tTotalDeviation = 0;
                        let rowDepartmentWiseSummaryTableIndex = 1;
                        for (var i = 0; i < deptSummary.length; i++) {

                            var deviation = 0;
                            var percentage = 0;
                            var divide = 0;

                            tTotalCost += deptSummary[i].totalCost;

                            if (Number(deptSummary[i].departmentId) != 7 && Number(deptSummary[i].departmentId) != 41) {
                                totalBudgetExclueScm += deptSummary[i].totalBudget;
                                totalTADAExclueScm += deptSummary[i].totalTADABudget;
                                totalAllowedBudgetExclueScm += deptSummary[i].totalAllowableBudget;
                                
                                deviation =parseFloat(deptSummary[i].totalAllowableBudget) - parseFloat(deptSummary[i].totalCost) ;
                                if(parseFloat(deptSummary[i].totalCost) > 0)
                                divide = deviation/ parseFloat(deptSummary[i].totalCost)  ;
                                percentage = parseFloat(divide) * 100;
                                tTotalDeviation += deviation;
                            }
                            if (Number(deptSummary[i].departmentId) == 7 || Number(deptSummary[i].departmentId) == 41) {

                                tTotalBudget += deptSummary[i].totalBudget;
                                tTotalTADA += deptSummary[i].totalTADABudget;
                                tTotalAllowedBudget += deptSummary[i].totalAllowableBudget;

                                deviation =parseFloat(deptSummary[i].totalAllowableBudget) - parseFloat(deptSummary[i].totalCost) ;
                                if(parseFloat(deptSummary[i].totalCost) > 0)
                                divide = deviation/ parseFloat(deptSummary[i].totalCost)  ;
                                percentage = parseFloat(divide) * 100;

                                $('#tDepartSummarybody').append(
                                    `<tr class="deletedDepartmentRow" style="color:#B2BEB5" id="RowDepartmentSummary${rowDepartmentWiseSummaryTableIndex}">
                                                    <td lass="text-left">
                                                        <span id="nameDepartmentId${rowDepartmentWiseSummaryTableIndex}"
                                                            class="departmentWiserSummaryDepartmentColumn"
                                                            >` +
                                    deptSummary[i].departmentName +
                                    `</span>
                                                    </td>
                                                    <td id="idDepartmentId${rowDepartmentWiseSummaryTableIndex}" class="departmentSummaryDeptId" hidden>` +
                                    deptSummary[i].departmentId +
                                    `</td>
                                                    <td class="text-right">
                                                        <span id="totalPriceDepartmentId${rowDepartmentWiseSummaryTableIndex}"
                                                            class="departmentWiserSummaryTablePriceColumn" hidden>` +
                                    deptSummary[i].totalBudget +
                                    `</span>
                                                        <span >` +
                                    formatter.format(deptSummary[i].totalBudget) +
                                    `</span>
                                                    </td>
                                                    <td class="text-right">
                                                        <span id="totalPriceDepartmentId${rowDepartmentWiseSummaryTableIndex}"
                                                            class="departmentWiserSummaryTablePriceColumn" hidden>` +
                                    deptSummary[i].totalTADABudget +
                                    `</span>
                                                        <span >` +
                                    formatter.format(deptSummary[i].totalTADABudget) +
                                    `</span>
                                                    </td>
                                                    <td class="text-right">
                                                        <span id="totalPriceDepartmentId${rowDepartmentWiseSummaryTableIndex}"
                                                            class="departmentWiserSummaryTablePriceColumn" hidden>` +
                                    deptSummary[i].totalAllowableBudget +
                                    `</span>
                                                        <span >` +
                                    formatter.format(deptSummary[i].totalAllowableBudget) +
                                    `</span>
                                                    </td>
                                                    <td class="text-right">
                                                        <span id="totalcostDepartmentId${rowDepartmentWiseSummaryTableIndex}"
                                                            class="departmentWiserSummaryTablePriceColumn" hidden>` +
                                    deptSummary[i].totalCost +
                                    `</span>
                                                        <span >` +
                                    formatter.format(deptSummary[i].totalCost) +
                                    `</span>
                                                    </td>
                                                    <td class="text-right">
                                                        <span >` +
                                    formatter.format(deviation) +
                                    `</span>
                                                    </td>
                                                    <td class="text-right">
                                                        <span >` +
                                    percentage.toFixed(2) +
                                    ` % </span>
                                                    </td>
                                                </tr>`
                                );
                            } else {
                                $('#tDepartSummarybody').append(
                                    `<tr class="deletedDepartmentRow" id="RowDepartmentSummary${rowDepartmentWiseSummaryTableIndex}">
                                                    <td lass="text-left">
                                                        <span id="nameDepartmentId${rowDepartmentWiseSummaryTableIndex}"
                                                            class="departmentWiserSummaryDepartmentColumn"
                                                            style="color:chocolate">` +
                                    deptSummary[i].departmentName +
                                    `</span>
                                                    </td>
                                                    <td id="idDepartmentId${rowDepartmentWiseSummaryTableIndex}" class="departmentSummaryDeptId" hidden>` +
                                    deptSummary[i].departmentId +
                                    `</td>
                                                    <td class="text-right">
                                                        <span id="totalPriceDepartmentId${rowDepartmentWiseSummaryTableIndex}"
                                                            class="departmentWiserSummaryTablePriceColumn" hidden>` +
                                    deptSummary[i].totalBudget +
                                    `</span>
                                                        <span style="color:chocolate">` +
                                    formatter.format(deptSummary[i].totalBudget) +
                                    `</span>
                                                    </td>
                                                    <td class="text-right">
                                                        <span id="totalPriceDepartmentId${rowDepartmentWiseSummaryTableIndex}"
                                                            class="departmentWiserSummaryTablePriceColumn" hidden>` +
                                    deptSummary[i].totalTADABudget +
                                    `</span>
                                                        <span >` +
                                    formatter.format(deptSummary[i].totalTADABudget) +
                                    `</span>
                                                    </td>
                                                    <td class="text-right">
                                                        <span id="totalPriceDepartmentId${rowDepartmentWiseSummaryTableIndex}"
                                                            class="departmentWiserSummaryTablePriceColumn" hidden>` +
                                    deptSummary[i].totalAllowableBudget +
                                    `</span>
                                                        <span >` +
                                    formatter.format(deptSummary[i].totalAllowableBudget) +
                                    `</span>
                                                    </td>
                                                    <td class="text-right">
                                                        <span id="totalcostDepartmentId${rowDepartmentWiseSummaryTableIndex}"
                                                            class="departmentWiserSummaryTablePriceColumn" hidden>` +
                                    deptSummary[i].totalCost +
                                    `</span>
                                                        <span style="color:chocolate">` +
                                    formatter.format(deptSummary[i].totalCost) +
                                    `</span>
                                                    </td>
                                                    <td class="text-right">
                                                        <span style="color:chocolate">` +
                                    formatter.format(deviation) +
                                    `</span>
                                                    </td>
                                                    <td class="text-right">
                                                        <span style="color:chocolate">` +
                                    percentage.toFixed(2) +
                                    ` % </span>
                                                    </td>
                                                </tr>`
                                );
                            }
                            rowDepartmentWiseSummaryTableIndex++
                        }
                        $('#tDepartSummarybody').append(
                            `<tr class="deletedParticularRow" >
                                                    <td lass="text-left"><span style="color: #23098B ">Grand Total(<span style="color: blue ">Exclude SCM & Regulatory Affairs</span>)</span></td>
                                                    <td class="text-right">

                                                        <span style="color: #23098B ">` +
                            formatter.format(totalBudgetExclueScm) + `(<span style="color: #B2BEB5; ">` + formatter.format(tTotalBudget) + `</span>)
                                    </span>
                                                    </td>
                                                    <td class="text-right">

                                                        <span style="color: #23098B ">` +
                            formatter.format(totalTADAExclueScm) + `(<span style="color: #B2BEB5; ">` + formatter.format(tTotalTADA) + `</span>)
                                    </span>
                                                    </td>
                                                    <td class="text-right">

                                                        <span style="color: #23098B ">` +
                            formatter.format(totalAllowedBudgetExclueScm) + `(<span style="color: #B2BEB5; ">` + formatter.format(tTotalAllowedBudget) + `</span>)
                                    </span>
                                                    </td>
                                                    <td class="text-right">

                                                        <span style="color: #23098B ">` +
                            formatter.format(tTotalCost) +
                            `</span>
                                                    </td>
                                                    <td class="text-right">
                                                        <span style="color: #23098B">` +
                            formatter.format(tTotalDeviation) +
                            `</span>
                                                    </td>
                                                    <td class="text-right">

                                                    </td>
                                                </tr>`
                        );
                    }
                });
                $.ajax({
                    type: "GET",
                    url: "/Settlement/GetParticularSummaryForASettledEstimationWithBudgetData?estimationId=" + value,
                    data: "{}",
                    success: function (data) {
                        let partiSummary = data;
                        let rowParticularWiseSummaryTableIndex = 1;
                        let tTotalCost = 0;
                        let tTotalBudget = 0;
                        let tTotalTADABudget = 0;
                        let tTotalAllowedBudget = 0;
                        let tTotalDeviation = 0;
                        for (var i = 0; i < partiSummary.length; i++) {
                            var deviation = 0;
                            var percentage = 0;
                            var divide = 0;
                            
                            deviation =parseFloat(partiSummary[i].totalAllowableBudget - parseFloat(partiSummary[i].totalCost) );
                            if(parseFloat(partiSummary[i].totalCost) > 0)
                            divide =   deviation / parseFloat(partiSummary[i].totalCost);
                            percentage = parseFloat(divide) * 100;
                            tTotalDeviation += deviation;

                            tTotalCost += partiSummary[i].totalCost;
                            tTotalBudget += partiSummary[i].totalBudget;
                            tTotalTADABudget += partiSummary[i].totalTADABudget;
                            tTotalAllowedBudget += partiSummary[i].totalAllowableBudget;

                            $('#tPartiSummarybody').append(
                                `<tr class="deletedParticularRow" id="RowParticularSummary${rowParticularWiseSummaryTableIndex}">
                                                    <td lass="text-left">
                                                        <span id="nameParticularId${rowParticularWiseSummaryTableIndex}"
                                                            style="color:chocolate">` +
                                partiSummary[i].particularName +
                                `</span>
                                                    <td id="idParticularId${rowParticularWiseSummaryTableIndex}" class="particularSummarypartiId" hidden>` +
                                partiSummary[i].particularId +
                                `</td>
                                                    </td>
                                                    <td class="text-right">
                                                        <span id="totalPriceParticularId${rowParticularWiseSummaryTableIndex}" hidden>` +
                                partiSummary[i].totalBudget +
                                `</span>
                                                        <span style="color:chocolate">` +
                                formatter.format(partiSummary[i].totalBudget) +
                                `</span>
                                                    </td>
                                                    <td class="text-right">
                                                        <span id="totalPriceParticularId${rowParticularWiseSummaryTableIndex}" hidden>` +
                                partiSummary[i].totalTADABudget +
                                `</span>
                                                        <span style="color:chocolate">` +
                                formatter.format(partiSummary[i].totalTADABudget) +
                                `</span>
                                                    </td>
                                                    <td class="text-right">
                                                        <span id="totalPriceParticularId${rowParticularWiseSummaryTableIndex}" hidden>` +
                                partiSummary[i].totalAllowableBudget +
                                `</span>
                                                        <span style="color:chocolate">` +
                                formatter.format(partiSummary[i].totalAllowableBudget) +
                                `</span>
                                                    </td>
                                                    <td class="text-right">
                                                        <span id="totalcostParticularId${rowParticularWiseSummaryTableIndex}" hidden>` +
                                partiSummary[i].totalCost +
                                `</span>
                                                        <span style="color:chocolate">` +
                                formatter.format(partiSummary[i].totalCost) +
                                `</span>
                                                    </td>
                                                    <td class="text-right">
                                                        <span style="color:chocolate">` +
                                formatter.format(deviation) +
                                `</span>
                                                    </td>
                                                    <td class="text-right">
                                                        <span style="color:chocolate">` +
                                percentage.toFixed(2) +
                                ` % </span>
                                                    </td>
                                                </tr>`
                            );
                            rowParticularWiseSummaryTableIndex++;
                        }
                        $('#tPartiSummarybody').append(
                            `<tr class="deletedParticularRow" id="RowParticularSummary${rowParticularWiseSummaryTableIndex}">
                                                    <td lass="text-left">
                                                        <span id="nameParticularId${rowParticularWiseSummaryTableIndex}"
                                                            style="color: #23098B">Grand Total(Exclued SCM & Regulatory Affairs)</span>

                                                    </td>
                                                    <td class="text-right">

                                                        <span style="color: #23098B">` +
                            formatter.format(tTotalBudget) +
                            `</span>
                                                    </td>
                                                    <td class="text-right">

                                                        <span style="color: #23098B">` +
                            formatter.format(tTotalTADABudget) +
                            `</span>
                                                    </td>
                                                    <td class="text-right">

                                                        <span style="color: #23098B">` +
                            formatter.format(tTotalAllowedBudget) +
                            `</span>
                                                    </td>
                                                    <td class="text-right">

                                                        <span style="color: #23098B">` +
                            formatter.format(tTotalCost) +
                            `</span>
                                                    </td>
                                                    <td class="text-right">
                                                        <span style="color: #23098B">` +
                            formatter.format(tTotalDeviation) +
                            `</span>
                                                    </td>
                                                    <td class="text-right">

                                                    </td>
                                                </tr>`
                        );
                    }
                });
            }
            function loadEstimateApproverRemarkList(value) {
                $.ajax({
                    type: "GET",
                    url: "/BudgetApprover/GetApproverRemarkList?estimationId=" + value,
                    data: "{}",
                    success: function (data) {
                        var approvers = data;
                        var commentIcon = '<i class="fa fa-quote-left fa-2x fa-pull-left" aria-hidden="true"></i>';
                        if (approvers < 1) {
                            $("#divApproverRemarksList").hide();
                        }
                        for (var i = 0; i < approvers.length; i++) {
                            var d = new Date(approvers[i].feedBackDate);
                            if (approvers[i].estimateStatus == "-500") {
                                statusTag = "<span class='w3-tag w3-red'>Rejected</span>";
                            } else if (approvers[i].estimateStatus == "100") {
                                statusTag = "<span class='w3-tag w3-green'>Approved</span>";
                            } else if (approvers[i].estimateStatus == "-404") {
                                statusTag = "<span class='w3-tag w3-deep-orange'>Rollbacked</span>";
                            }
                            if (approvers[i].feedBack == null)
                                approvers[i].feedBack = 'N/A';
                            $('#tApproverRemarksbody').append(
                                `<tr>
                                        <td>&nbsp;</td>
                                        <td class="approverNameFromFeedBack">` +
                                approvers[i].approverFullName +
                                ` </td>
                                        <td>` +
                                statusTag +
                                `</td>
                                        <td class="approverApprovalDate">` +
                                d.toDateString() +
                                ` ` +
                                d.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true }) +
                                `</td>
                                        <td class="approverFeedbackFromFeedBack">` +
                                commentIcon +
                                approvers[i].feedBack +
                                `</td>
                                    </tr>`);
                        }
                    }
                });
            }
            function addingRowInParticularSummaryTableForRunningSettlement(rowParticularSettlementSummaryTableIndex, name, particularId, totalBudget, totalTADABudget, totalAllowedBudget, runningTotalCost, totalSettledCost, deviation, percantage) {
                var formatter = new Intl.NumberFormat('en-IN',
                    {
                        style: 'currency',
                        currency: 'BDT'
                    });
                $('#SettlementPartiSummarybody').append(
                    `<tr class="deletedParticularRow" id="RowParticularSummary${rowParticularSettlementSummaryTableIndex}">
                                <td lass="text-left">
                                            <span id="nameParticularId${rowParticularSettlementSummaryTableIndex}" style="color:chocolate">` +
                    name +
                    `</span>
                                <td id="idParticularId${rowParticularSettlementSummaryTableIndex}" hidden>` +
                    particularId +
                    `</td>
                                </td>
                                <td class="text-right">
                                            <span id="totalPriceParticularId${rowParticularSettlementSummaryTableIndex}" hidden>` +
                    totalBudget +
                    `</span>
                                    <span style="color:chocolate">` +
                    formatter.format(totalBudget) +
                    `</span>
                                </td>
                                <td class="text-right">
                                            <span id="totalPriceParticularId${rowParticularSettlementSummaryTableIndex}" hidden>` +
                    totalTADABudget +
                    `</span>
                                    <span style="color:chocolate">` +
                    formatter.format(totalTADABudget) +
                    `</span>
                                </td>
                                <td class="text-right">
                                            <span id="totalPriceParticularId${rowParticularSettlementSummaryTableIndex}" hidden>` +
                    totalAllowedBudget +
                    `</span>
                                    <span style="color:chocolate">` +
                    formatter.format(totalAllowedBudget) +
                    `</span>
                                </td>
                                <td class="text-right">
                                                    <span id="totalSettledCostParticularId${rowParticularSettlementSummaryTableIndex}" hidden>` +
                    totalSettledCost +
                    `</span>
                                    <span style="color:chocolate">` +
                    formatter.format(totalSettledCost) +
                    `</span>
                                </td>
                                        <td class="text-right">
                                                            <span id="runningTotalCostParticularId${rowParticularSettlementSummaryTableIndex}" hidden>` +
                    runningTotalCost +
                    `</span>
                                            <span style="color:chocolate">` +
                    formatter.format(runningTotalCost) +
                    `</span>
                                        </td>
                                                <td class="text-right">
                                                                    <span id="runningTotalCostParticularId${rowParticularSettlementSummaryTableIndex}" hidden>` +
                    deviation +
                    `</span>
                                                    <span style="color:chocolate">` +
                    formatter.format(deviation) +
                    `</span>
                                                </td>
                                                        <td class="text-right">
                                                                            <span id="runningTotalCostParticularId${rowParticularSettlementSummaryTableIndex}" hidden>` +
                    percantage +
                    `</span>
                                                            <span style="color:chocolate">` +
                    percantage +
                    `</span> %
                                                        </td>
                            </tr>`
                );
            }

            function removeTableRowsForRunningSettlement() {
                $('.deletedParticularRow').remove();
            }

            function isNaNCustom(value) {
                return value.toString() === 'NaN' &&
                    typeof value !== 'string' &&
                    typeof value === 'number'
            }

            function getSettlementParticularSummary() {
                var particularSettlementTableArray = [];
                $('.particularItemsAndDetailsTable tbody tr').each(function (a, b) {
                    var particularName = $('.particularSelectorFromTable', b).find(":selected").text().trim();
                    var particularId = $('.particularSelectorFromTable', b).find(":selected").val()
                    var departmentId = $('.departmentSelector', b).find(":selected").val();
                    
                    if (particularId == "-1" || departmentId == "7" || departmentId == "41") {
                        console.log("not selected");
                    } else {

                        var itemCategory = '';
                        var totalPrice = 0;
                        var totalTADABudget = 0;
                        var totalAllowedBudget = 0;

                        itemCategory = $.trim($('.itemCategory', b).text());
                        
                        if(itemCategory == "TA/DA")
                        {
                            totalTADABudget = Number($('.ftBudgetedPrice', b).val());
                            totalTADABudget = isNaNCustom(totalTADABudget) == true ? 0 : totalTADABudget;
                        }
                        
                        totalPrice = isNaN(parseFloat($('.ftBudgetedPrice', b).val())) ? 0 : parseFloat($('.ftBudgetedPrice', b).val());
                        totalAllowedBudget = totalPrice - totalTADABudget;
                        var runningTotalCost = Number($('.actualTotalPrice', b).val());
                        runningTotalCost = isNaNCustom(runningTotalCost) == true ? 0 : runningTotalCost;
                        var totalSettledCost = Number($('.alreadySettleCost', b).val());
                        totalSettledCost = isNaNCustom(totalSettledCost) == true ? 0 : totalSettledCost;
                        if (particularName.length > 0) {
                            
                            particularSettlementTableArray.push({
                                ParticularName: particularName,
                                ParticularId: particularId,
                                RunningTotalCost: runningTotalCost,
                                TotalTADABudget: totalTADABudget,
                                TotalAllowedBudget: totalAllowedBudget,
                                TotalBudget: totalPrice,
                                TotalSettledCost: totalSettledCost
                            });
                        }
                    }
                });

                var result = [];
                particularSettlementTableArray.reduce(function (res, value) {
                    if (!res[value.ParticularName]) {
                        res[value.ParticularName] = {
                            
                            RunningTotalCost: 0,
                            TotalBudget: 0,
                            TotalTADABudget: 0,
                            TotalAllowedBudget: 0,
                            TotalSettledCost: 0,
                            ParticularId: value.ParticularId,
                            ParticularName: value.ParticularName
                        };
                        result.push(res[value.ParticularName])
                    }
                    res[value.ParticularName].RunningTotalCost = parseFloat(value.RunningTotalCost) + parseFloat(res[value.ParticularName].RunningTotalCost);
                    res[value.ParticularName].TotalBudget = parseFloat(value.TotalBudget) + parseFloat(res[value.ParticularName].TotalBudget);
                    res[value.ParticularName].TotalTADABudget = parseFloat(value.TotalTADABudget) + parseFloat(res[value.ParticularName].TotalTADABudget);
                    res[value.ParticularName].TotalAllowedBudget = parseFloat(value.TotalAllowedBudget) + parseFloat(res[value.ParticularName].TotalAllowedBudget);
                    res[value.ParticularName].TotalSettledCost = parseFloat(value.TotalSettledCost) + parseFloat(res[value.ParticularName].TotalSettledCost);
                    return res;
                },
                    {});
                removeTableRowsForRunningSettlement();
                var rowParticularSettlementSummaryTableIndex = 1;
                var tTotalBudget = 0;
                var tTotalTADA = 0;
                var totalAllowedBudget = 0;
                var tTotalCost = 0;
                var tTotalRunningCost = 0;
                var tTotalDeviation = 0;
                var totalParcentage = 0;
                for (var x = 0; x < result.length; x++) {
                    addingRowInParticularSummaryTableForRunningSettlement(rowParticularSettlementSummaryTableIndex,
                        result[x].ParticularName,
                        result[x].ParticularId,
                        result[x].TotalBudget.toFixed(2),
                        result[x].TotalTADABudget.toFixed(2),
                        result[x].TotalAllowedBudget.toFixed(2),
                        result[x].RunningTotalCost.toFixed(2),
                        result[x].TotalSettledCost.toFixed(2),
                        (result[x].TotalAllowedBudget - (result[x].TotalSettledCost + result[x].RunningTotalCost)),
                        (((result[x].TotalSettledCost + result[x].RunningTotalCost) / result[x].TotalAllowedBudget) * 100).toFixed(2)
                        
                    );
                    tTotalBudget += isNaN(parseFloat(result[x].TotalBudget.toFixed(2))) ? 0 : parseFloat(result[x].TotalBudget.toFixed(2));
                    tTotalTADA += isNaN(parseFloat(result[x].TotalTADABudget.toFixed(2))) ? 0 : parseFloat(result[x].TotalTADABudget.toFixed(2));
                    totalAllowedBudget += isNaN(parseFloat(result[x].TotalAllowedBudget.toFixed(2))) ? 0 : parseFloat(result[x].TotalAllowedBudget.toFixed(2));
                    tTotalCost += isNaN(parseFloat(result[x].TotalSettledCost.toFixed(2))) ? 0 : parseFloat(result[x].TotalSettledCost.toFixed(2));
                    tTotalRunningCost += isNaN(parseFloat(result[x].RunningTotalCost.toFixed(2))) ? 0 : parseFloat(result[x].RunningTotalCost.toFixed(2));
                    tTotalDeviation += (result[x].TotalAllowedBudget - (result[x].TotalSettledCost + result[x].RunningTotalCost));
                    rowParticularSettlementSummaryTableIndex++;
                }
                totalParcentage = (parseFloat((tTotalCost + tTotalRunningCost) / totalAllowedBudget) * 100);
                $('#SettlementPartiSummarybody').append(
                            `<tr class="deletedParticularRow" id="RowParticularSummary${rowParticularSettlementSummaryTableIndex}">
                                                            <td lass="text-left">
                                                                <span id="nameParticularId${rowParticularSettlementSummaryTableIndex}"
                                                                    style="color: #23098B">Grand Total(Exclued SCM & Regulatory Affairs)</span>

                                                            </td>
                                                            <td class="text-right">

                                                                <span style="color: #23098B">` +
                            formatter.format(tTotalBudget) +
                            `</span>
                                                            </td>
                                                            <td class="text-right">

                                                                <span style="color: #23098B">` +
                            formatter.format(tTotalTADA) +
                            `</span>
                                                            </td>
                                                            <td class="text-right">

                                                                <span style="color: #23098B">` +
                            formatter.format(totalAllowedBudget) +
                            `</span>
                                                            </td>
                                                            <td class="text-right">

                                                                <span style="color: #23098B">` +
                            formatter.format(tTotalCost) +
                            `</span>
                                                            </td>
                                                                     <td class="text-right">

                                                                        <span style="color: #23098B">` +
                            formatter.format(tTotalRunningCost) +
                            `</span>
                                                                    </td>
                                                            <td class="text-right">
                                                                <span style="color: #23098B">` +
                            formatter.format(tTotalDeviation) +
                            `</span>
                                                            </td>
                                                            <td class="text-right">
                                                                            <span style="color:#23098B">` +
                    totalParcentage.toFixed(2) +
                    `</span> %
                                                        </td>
                                                        </tr>`
                        );
                        rowParticularSettlementSummaryTableIndex++;
            }
           
            function getDepartmentSummaryForRunningSettlement() {
                var departmentRunningSummary = [];
                $('.particularItemsAndDetailsTable tbody tr').each(function (a, b) {
                    

                    var department = $('.departmentSelector', b).find(":selected").text().trim();
                    var departmentId = $('.departmentSelector', b).find(":selected").val();
                    
                    if (departmentId == "-1" || departmentId == "7" || departmentId == "41") {
                    } else {
                        var runningTotalCost = Number($('.actualTotalPrice', b).val());
                        runningTotalCost = isNaNCustom(runningTotalCost) == true ? 0 : runningTotalCost;
                       
                        var itemCategory = '';
                        var totalPrice = 0;
                        var TotalTADABudget = 0;
                        var totalAllowedBudget = 0;
                        var totalSettledCost = 0;

                        itemCategory = $.trim($('.itemCategory', b).text());

                        if(itemCategory == "TA/DA")
                        {
                            TotalTADABudget = Number($('.ftBudgetedPrice', b).val());
                            TotalTADABudget = isNaNCustom(TotalTADABudget) == true ? 0 : TotalTADABudget;
                        }
                        totalPrice = Number($('.ftBudgetedPrice', b).val());
                        totalPrice = isNaNCustom(totalPrice) == true ? 0 : totalPrice;
                        totalAllowedBudget = totalPrice - TotalTADABudget;
                        
                        totalSettledCost = Number( $('.alreadySettleCost', b).val());
                        totalSettledCost = isNaNCustom(totalSettledCost) == true ? 0 : totalSettledCost;
                        
                        if (department.length > 0) {
                            departmentRunningSummary.push({
                                DepartmentName: department,
                                DepartmentID: departmentId,
                                RunningTotalCost: runningTotalCost,
                                TotalBudget:totalPrice,
                                TotalTADABudget:TotalTADABudget,
                                TotalAllowedBudget:totalAllowedBudget,
                                TotalSettledCost : totalSettledCost
                            });
                        }
                    }
                });

                var result = [];
                departmentRunningSummary.reduce(function (res, value) {
                    if (!res[value.DepartmentName]) {
                        res[value.DepartmentName] = {
                            RunningTotalCost: 0,
                            TotalBudget: 0,
                            TotalTADABudget: 0,
                            TotalAllowedBudget: 0,
                            TotalSettledCost: 0,
                            DepartmentID: value.DepartmentID,
                            DepartmentName: value.DepartmentName
                        };
                        result.push(res[value.DepartmentName])
                    }
                    res[value.DepartmentName].RunningTotalCost = parseFloat(value.RunningTotalCost) + parseFloat(res[value.DepartmentName].RunningTotalCost);
                    res[value.DepartmentName].TotalBudget = parseFloat(value.TotalBudget) + parseFloat(res[value.DepartmentName].TotalBudget);
                    res[value.DepartmentName].TotalTADABudget = parseFloat(value.TotalTADABudget) + parseFloat(res[value.DepartmentName].TotalTADABudget);
                    res[value.DepartmentName].TotalAllowedBudget = parseFloat(value.TotalAllowedBudget) + parseFloat(res[value.DepartmentName].TotalAllowedBudget);
                    res[value.DepartmentName].TotalSettledCost = parseFloat(value.TotalSettledCost) + parseFloat(res[value.DepartmentName].TotalSettledCost);
                    return res;
                },
                    {});
                removeDepartmentWiseSummmaryTableRowsForRunningSettlement();
                var rowDepartmentWiseRunningSummaryTableIndex = 1;
                var tTotalBudget = 0;
                var tTotalTADA = 0;
                var totalAllowedBudget = 0;
                var tTotalCost = 0;
                var tTotalRunningCost = 0;
                var tTotalDeviation = 0;
                var totalParcentage = 0;
                for (var x = 0; x < result.length; x++) {
                    
                    addingRowInDepartmentSummaryTableForRunningSettlement(rowDepartmentWiseRunningSummaryTableIndex,
                        result[x].DepartmentName, 
                        result[x].DepartmentID,
                        result[x].TotalBudget.toFixed(2),
                        result[x].TotalTADABudget.toFixed(2),
                        result[x].TotalAllowedBudget.toFixed(2),
                        result[x].TotalSettledCost.toFixed(2),
                        result[x].RunningTotalCost.toFixed(2),
                        (result[x].TotalAllowedBudget - (result[x].TotalSettledCost + result[x].RunningTotalCost) ),
                        (((result[x].TotalSettledCost + result[x].RunningTotalCost) / result[x].TotalAllowedBudget) * 100).toFixed(2)
                    );
                    tTotalBudget += parseFloat(result[x].TotalBudget.toFixed(2));
                    tTotalTADA += parseFloat(result[x].TotalTADABudget.toFixed(2));
                    totalAllowedBudget += parseFloat(result[x].TotalAllowedBudget.toFixed(2));
                    tTotalCost += parseFloat(result[x].TotalSettledCost.toFixed(2));
                    tTotalRunningCost += parseFloat(result[x].RunningTotalCost.toFixed(2));
                    tTotalDeviation += parseFloat(result[x].TotalAllowedBudget - (result[x].TotalSettledCost + result[x].RunningTotalCost));
                    rowDepartmentWiseRunningSummaryTableIndex++;
                }
                totalParcentage = parseFloat((((tTotalCost + tTotalRunningCost) / totalAllowedBudget) * 100).toFixed(2));
                $('#SettlementDepartSummarybody').append(
                    `<tr class="deletedDepartmentRow" id="RowParticularSummary${rowDepartmentWiseRunningSummaryTableIndex}">
                                    <td lass="text-left">
                                        <span id="nameDepartmentId${rowDepartmentWiseRunningSummaryTableIndex}"
                                            style="color: #23098B">Grand Total(Exclued SCM & Regulatory Affairs)</span>
                                    </td>
                                    <td class="text-right">
                                        <span id="totalPriceDepartmentId${rowDepartmentWiseRunningSummaryTableIndex}"
                                            class="departmentWiserSummaryTablePriceColumn" style="color: #23098B" hidden>` +
                    tTotalBudget +
                    `</span>
                                        <span style="color: #23098B">` +
                    formatter.format(tTotalBudget) +
                    `</span>
                                    </td>
                                    <td class="text-right">
                                        <span id="totalPriceDepartmentId${rowDepartmentWiseRunningSummaryTableIndex}"
                                            class="departmentWiserSummaryTablePriceColumn" hidden>` +
                    tTotalTADA +
                    `</span>
                                        <span style="color: #23098B">` +
                    formatter.format(tTotalTADA) +
                    `</span>
                                    </td>
                                    <td class="text-right">
                                        <span id="totalPriceDepartmentId${rowDepartmentWiseRunningSummaryTableIndex}"
                                            class="departmentWiserSummaryTablePriceColumn" hidden>` +
                    totalAllowedBudget +
                    `</span>
                                        <span style="color: #23098B">` +
                    formatter.format(totalAllowedBudget) +
                    `</span>
                                    </td>
                                              <td class="text-right">
                                                <span id="atualTotalPriceDepartmentId${rowDepartmentWiseRunningSummaryTableIndex}"
                                                    class="departmentWiserSummaryTableActualTotalPriceColumn" hidden>` +
                    tTotalCost +
                    `</span>
                                                <span style="color: #23098B">` +
                    formatter.format(tTotalCost) +
                    `</span>
                                            </td>
                                                     <td class="text-right">
                                                        <span id="atualTotalPriceDepartmentId${rowDepartmentWiseRunningSummaryTableIndex}"
                                                            class="departmentWiserSummaryTableActualTotalPriceColumn" hidden>` +
                    tTotalRunningCost +
                    `</span>
                                                        <span style="color: #23098B">` +
                    formatter.format(tTotalRunningCost) +
                    `</span>
                                                    </td>
                                                    <td><span style="color: #23098B">` +
                            formatter.format(tTotalDeviation) +
                            `</span></td>
                                                            <td>`
                    +
                    parseFloat(totalParcentage).toFixed(2) +
                    ` %</td>
                                </tr>`
                );
                rowDepartmentWiseRunningSummaryTableIndex++;
            }

            function addingRowInDepartmentSummaryTableForRunningSettlement(rowDepartmentWiseRunningSummaryTableIndex, name, deptId, totalBudget, TotalTADABudget, totalAllowedBudget ,totalSettledCost, runningTotalCost, deviation,percentage) {
                var formatter = new Intl.NumberFormat('en-IN',
                    {
                        style: 'currency',
                        currency: 'BDT'
                    });
                    
                $('#SettlementDepartSummarybody').append(
                    `<tr class="deletedDepartmentRow" id="RowParticularSummary${rowDepartmentWiseRunningSummaryTableIndex}">
                                    <td lass="text-left">
                                        <span id="nameDepartmentId${rowDepartmentWiseRunningSummaryTableIndex}"
                                            class="departmentWiserSummaryDepartmentColumn"
                                            style="color:chocolate">` +
                    name +
                    `</span>
                                    </td>
                                    <td id="idDepartmentId${rowDepartmentWiseRunningSummaryTableIndex}" class="departmentSummaryDeptId" hidden>` +
                    deptId +
                    `</td>
                                    <td class="text-right">
                                        <span id="totalPriceDepartmentId${rowDepartmentWiseRunningSummaryTableIndex}"
                                            class="departmentWiserSummaryTablePriceColumn" hidden>` +
                    totalBudget +
                    `</span>
                                        <span style="color:chocolate">` +
                    formatter.format(totalBudget) +
                    `</span>
                                    </td>
                                    <td class="text-right">
                                        <span id="totalPriceDepartmentId${rowDepartmentWiseRunningSummaryTableIndex}"
                                            class="departmentWiserSummaryTablePriceColumn" hidden>` +
                    TotalTADABudget +
                    `</span>
                                        <span style="color:chocolate">` +
                    formatter.format(TotalTADABudget) +
                    `</span>
                                    </td>
                                    <td class="text-right">
                                        <span id="totalPriceDepartmentId${rowDepartmentWiseRunningSummaryTableIndex}"
                                            class="departmentWiserSummaryTablePriceColumn" hidden>` +
                    totalAllowedBudget +
                    `</span>
                                        <span style="color:chocolate">` +
                    formatter.format(totalAllowedBudget) +
                    `</span>
                                    </td>
                                              <td class="text-right">
                                                <span id="atualTotalPriceDepartmentId${rowDepartmentWiseRunningSummaryTableIndex}"
                                                    class="departmentWiserSummaryTableActualTotalPriceColumn" hidden>` +
                    totalSettledCost +
                    `</span>
                                                <span style="color:chocolate">` +
                    formatter.format(totalSettledCost) +
                    `</span>
                                            </td>
                                                     <td class="text-right">
                                                        <span id="atualTotalPriceDepartmentId${rowDepartmentWiseRunningSummaryTableIndex}"
                                                            class="departmentWiserSummaryTableActualTotalPriceColumn" hidden>` +
                    runningTotalCost +
                    `</span>
                                                        <span style="color:chocolate">` +
                    formatter.format(runningTotalCost) +
                    `</span>
                                                    </td>
                                                    <td>`
                                                             +
                    formatter.format(deviation) +
                                                    `</td>
                                                            <td>`
                    +
                    percentage +
                    ` %</td>
                                </tr>`
                );
            }

            function removeDepartmentWiseSummmaryTableRowsForRunningSettlement() {
                $('.deletedDepartmentRow').remove();
            }
            var rowApproverIdx = 0;
            $('#addApprover').on('click',
                function () {
                    showErrorMessageBelowCtrl('app_err-container', 'please add alteast one approver', false);

                    var selectedsequenORparallleVal = "";
                    var selectedArrproverTyepVal = "";

                    var selectedsequenORparallle = $("#sequenORparalllerRadioDiv input[type='radio']:checked");
                    var selectedArrproverTyep = $("#approverTypeRadioDiv input[type='radio']:checked");
                    if (selectedsequenORparallle.length > 0 && selectedArrproverTyep.length > 0) {

                        selectedsequenORparallleVal = selectedsequenORparallle.val();
                        // console.log(selectedsequenORparallleVal);

                        selectedArrproverTyepVal = selectedArrproverTyep.val();
                        //console.log(selectedArrproverTyepVal);

                        if (selectedsequenORparallleVal == "Sequencial" && selectedArrproverTyepVal == "2") {
                            approverPriorityIndex--;
                            addApproverinApproverList(approverPriorityIndex, selectedArrproverTyepVal, "Recommender");
                        } else if (selectedsequenORparallleVal == "Parallel" && selectedArrproverTyepVal == "2") {
                            addApproverinApproverList(approverPriorityIndex, selectedArrproverTyepVal, "Recommender");
                        } else if (selectedArrproverTyepVal == "1") {
                            addApproverinApproverList(1, selectedArrproverTyepVal, "Final Approver");
                        } else if (selectedArrproverTyepVal == "3") {
                            addApproverinApproverList(400, selectedArrproverTyepVal, "Informed");
                        }
                    }

                });

            $("#employeeListforApprover").change(function () {
                var selectorID = $("#employeeListforApprover").val();
                if (selectorID == 16) {
                    var o = new Option("1", 1);
                    $(o).html(1);
                    $("#priorityforApprover").append(o);
                    $("#priorityforApprover").val(1);
                    $("#priorityforApprover").prop("disabled", true);
                } else {
                    $("#priorityforApprover").prop("disabled", false);
                    $("#priorityforApprover option[value='1']").remove();
                }

                for (var x = 0; x < storeUsersWithDepartmentName.length; x++) {
                    if (storeUsersWithDepartmentName[x].userID == selectorID) {
                        $("#userDepartmentID").val(storeUsersWithDepartmentName[x].departmentName);
                        $("#DeptIdUserID").val(storeUsersWithDepartmentName[x].departmentId);
                        break;
                    }
                }
            });

            $('#tApproverbody').on('click',
                '.remove',
                function () {

                    var child = $(this).closest('tr').nextAll();
                    child.each(function () {
                        var id = $(this).attr('id');
                        var idx = $(this).children('.row-index').children('p');
                        var dig = parseInt(id.substring(1));
                        idx.html(`Row ${dig - 1}`);
                        $(this).attr('id', `RowApprover${dig - 1}`);
                    });
                    $(this).closest('tr').remove();
                    rowApproverIdx--;
                });

            function getUserWithDepartmentNameSelect2FromDb() {
                $.ajax({
                    type: "GET",
                    url: "/User/GetAllUsersWithDepartmentName",
                    data: "{}",
                    success: function (data) {
                        var users = data.users;
                        storeUsersWithDepartmentName = users;

                        for (var i = 0; i < users.length; i++) {
                            var o = new Option(users[i].fullName, users[i].userID);
                            $(o).html(users[i].fullName + "/ " + users[i].departmentName);
                            $("#employeeListforApprover").append(o);
                        }
                    }
                });
            }

            function addApproverinApproverList(priorityParameter, priorityType, priorityTypeTxt) {
                let checkFlag = false;

                var priority = priorityParameter; //$('#priorityforApprover').find(":selected").text();
                var username = $('#employeeListforApprover').find(":selected").text();
                var userId = $('#employeeListforApprover').find(":selected").val();
                var userDepartment = $('#userDepartmentID').val();
                var DeptIdUserID = $('#DeptIdUserID').val();
                var expectedDate = $('#datetimepickerApproverTimeLine').val();

                var priorityValue = $('#priorityforApprover').find(":selected").val();
                var usernameValue = $('#employeeListforApprover').find(":selected").val();


                if (priorityValue <= 0) {
                    showErrorMessageBelowCtrl('priorityforApprover', 'please add priority', true);
                    return;
                } else {
                    showErrorMessageBelowCtrl('priorityforApprover', 'please select priority', false);
                }
                if (usernameValue <= 0) {
                    showErrorMessageBelowCtrl('employeeListforApprover', 'please add employee', true);
                    return;
                } else {
                    showErrorMessageBelowCtrl('employeeListforApprover', 'please select employee', false);
                }
                if (expectedDate.length <= 0) {
                    showErrorMessageBelowCtrl('datetimepickerApproverTimeLine', 'please select expected timeline', true);
                    return;
                } else {
                    showErrorMessageBelowCtrl('datetimepickerApproverTimeLine', 'please select expected timeline', false);
                }

                $("#TableAprroverList tr").each(function (a, b) {
                    if (a > 0) {
                        var userIdFromtb = $('.approverId', b).text();
                        var priorityFromtb = $('.approverPriority', b).text()
                        if (priorityFromtb == 1 && priority == 1) {
                            showErrorMessageBelowCtrl('employeeListforApprover', 'Already added the approved.', true);
                            checkFlag = true;
                            approverPriorityIndex++;
                        }

                        if (userIdFromtb == userId && priority == priorityFromtb) {
                            checkFlag = true;
                            //console.log("Already Added");
                            showErrorMessageBelowCtrl('priorityforApprover', 'Already added this approved with same priority', true);
                            approverPriorityIndex++;
                        }
                    }
                });

                if (checkFlag == false) {
                    $('#tApproverbody').append(
                        `<tr id="RowApprover${++rowApproverIdx}">
                                <td>&nbsp;</td>
                                <td id="nameApproverId${rowApproverIdx}" class="approverName">` +
                        username +
                        `</td>
                                <td id="idApproverId${rowApproverIdx}" class="approverId" hidden>` +
                        userId +
                        `</td>
                                <td id="priorityApproverId${rowApproverIdx}" class="approverPriority" hidden>` +
                        priority +
                        `</td>
                                <td id="priorityApproverTypeId${rowApproverIdx}" class="approverPriorityType" hidden>` +
                        priorityType +
                        `</td>
                                <td id="priorityApproverTypeTextId${rowApproverIdx}" class="approverPriorityTypeText">` +
                        priorityTypeTxt +
                        `</td>
                                <td id="departmentApproverId${rowApproverIdx}" class="approverDepartment">` +
                        userDepartment +
                        `</td>
                                <td id="departmentIdApproverId${rowApproverIdx}" class="approverDepartmentId" hidden>` +
                        DeptIdUserID +
                        `</td>
                                <td id="expectedTimeId${rowApproverIdx}" class="approverExpectedTime">` +
                        expectedDate +
                        `</td>
                                <td class="text-center">
                                    <button class="btn btn-danger remove" type="button"><i class="fa fa-trash" aria-hidden="true"></i></button>
                                </td>
                            </tr>`
                    );
                }
            }

            $('#tbody').on('keyup', '.findTotalPrice', function () {
                var child = $(this).closest('tr').nextAll();
                var rowTrackId = child.prevObject.attr("id").slice(1);
                calculateTotalPrice(rowTrackId);
            });

            function setDefaultDataOnMultipleSpanAndTextBoxOnParticularTable(rowTrackId) {
                $("#itemCodeTextId" + rowTrackId).html(0);
                $("#itemUnitTextId" + rowTrackId).html(0);
                $("#unitPriceTextId" + rowTrackId).val(0);
                $("#TotalPriceTextId" + rowTrackId).text(0);

                $("#NoOfMaUTCaTextId" + rowTrackId).val(0);
                $("#NoOfDTUTextId" + rowTrackId).val(0);
                $("#requiredQuantityTextId" + rowTrackId).val(0);
                getSumOfTotalPrice();
            }
            function setValuesOnItemCodeAndItemUnitTextAndUnitPrice(rowTrackId, flag) {
                $("#itemCodeTextId" + rowTrackId).html(storeItemDetails[flag]['itemCode']);
                $("#itemUnitTextId" + rowTrackId).html(storeItemDetails[flag]['unitName']);
                $("#unitPriceTextId" + rowTrackId).val(storeItemDetails[flag]['indicatingUnitPrice']);
            }
            function calculateTotalPrice(rowTrackId) {

                var multi = 0;
                multi = $("#actualQuantity" + rowTrackId).val() * $("#actualUnitPrice" + rowTrackId).val();
                $("#actualTotalPrice" + rowTrackId).text(multi);

                var formatter = new Intl.NumberFormat('en-IN');
                $("#actualTotalPrice" + rowTrackId).val(multi)
                getSumOfTotalPrice();

            }
            function getSumOfTotalPrice() {
                var sum = 0;
                $('.particularItemsAndDetailsTable tr').each(function (a, b) {

                    var totalPrice = $('.actualTotalPrice', b).val();
                   
                    if (!isNaN(totalPrice) && totalPrice.length != 0) {
                        sum += parseFloat(totalPrice);
                    }

                });
                $("#sumOfActualTotalPriceShow").text(sum.toFixed(2));
                var formatter = new Intl.NumberFormat('en-IN', {
                    style: 'currency',
                    currency: 'BDT'
                });
                $('#sumOfActualTotalPriceShow').text(formatter.format(sum.toFixed(2)));
                 getSettlementParticularSummary();
                 getDepartmentSummaryForRunningSettlement();
            }

            function getSumOfTotalSettledAmount() {
                var sum = 0;
                $('.particularItemsAndDetailsTable tr').each(function (a, b) {

                    var totalPrice = $('.alreadySettleCost', b).val();
                    if (isNaN(totalPrice)) {
                    }

                    if (!isNaN(totalPrice) && totalPrice.length != 0) {
                        sum += parseFloat(totalPrice);
                    }

                });
                $("#sumOfSettledCost").text(sum.toFixed(2));
                var formatter = new Intl.NumberFormat('en-IN', {
                    style: 'currency',
                    currency: 'BDT'
                });
                $('#sumOfSettledCost').text(formatter.format(sum.toFixed(2)));
            }
            function getSumOfTotalSettledQuantity() {
                var sum = 0;
                $('.particularItemsAndDetailsTable tr').each(function (a, b) {

                    var totalPrice = $('.settleActualQuantity', b).val();
                    if (!isNaN(totalPrice) && totalPrice.length != 0) {
                        sum += parseFloat(totalPrice);
                    }

                });

                $("#sumOfSettledQuantity").text(sum.toFixed(2));
                var formatter = new Intl.NumberFormat('en-IN', {
                    style: 'currency',
                    currency: 'BDT'
                });
                $('#sumOfSettledQuantity').text(sum.toFixed(2));
            }
            function ConstructResponseObject() {
                showErrorMessageBelowCtrl('validatioOfParticularItem', 'please add atlest one  particular item', false);
                showErrorMessageBelowCtrl('employeeListforApprover', 'please add atlest one approver', false);
                var validFlag = 1
                var settlement = {};
                var procurementApprovalRequest = {};
                var settlementItemList = [];

                var settlementApproverList = [];
                var departmentWiseSummaryList = [];
                var particularWiseSummaryList = [];

                formData = new FormData();
                for (var i = 0; i < filelist.length; i++) {
                    if (jQuery.isEmptyObject(filelist[i])) {
                        continue;
                    }
                    formData.append(filelist[i].name, filelist[i]);
                }
                estimationAttachment = formData;


                $('.particularItemsAndDetailsTable #tbody tr').each(function (a, b) {
                    var itemId = $('.itemSelectorFromTable', b).find(":selected").val();
                    var deptId = $('.departmentSelector', b).find(":selected").val();
                    var thanaId = $('.particularTableThana', b).find(":selected").val();
                    var estimateSeetleItemId = $('.estimateSettleItemId', b).text();
                    let idActualQuantity = 'actualQuantity' + a;

                    showErrorMessageBelowCtrl(idActualQuantity, 'please input all of related input ', false);

                    if (Number(estimateSeetleItemId) > 0) {
                        if (
                            Number($('.actualQuantity', b).val().trim().length) > 0 ||
                            Number($('.actualUnitPrice', b).val().trim().length) > 0 ||
                            Number($('.actualTotalPrice', b).val().trim().length) > 0
                        ) {

                            if (
                                Number($('.actualQuantity', b).val().trim().length) == 0 ||
                                Number($('.actualUnitPrice', b).val().trim().length) == 0 ||
                                Number($('.actualTotalPrice', b).val().trim().length) == 0
                            ) {
                                let idActualQuantity = 'actualQuantity' + a;
                                showErrorMessageBelowCtrl(idActualQuantity, 'please input all of related input ', true);

                            } else {
                                settlementItemList.push({
                                    estimationId: $("#estimateId").val(),
                                    settlementId: $("#settlementId").val(),
                                    estimateSettleItemId: Number($('.estimateSettleItemId', b).text()),
                                    particular: null,
                                    itemCategory: null,
                                    itemName: null,
                                    item_Id: -1,
                                    itemCode: null,
                                    itemUnit: null,
                                    noOfMachineAndUsagesAndTeamAndCar: -1,
                                    noOfDayAndTotalUnit: -1,
                                    quantityRequired: -1,
                                    unitPrice: -1,
                                    totalPrice: -1,
                                    responsibleDepartmentName: null,
                                    responsibleDepartment_Id: -1,
                                    districtName: null,
                                    thanaName: null,
                                    thana_Id: -1,
                                    areaType: null,
                                    settleItemId: Number($('.settleItemId', b).text()),
                                    actualQuantity: $('.actualQuantity', b).val().trim().length == 0 ? -1 : $('.actualQuantity', b).val(),
                                    actualUnitPrice: $('.actualUnitPrice', b).val().trim().length == 0 ? -1 : $('.actualUnitPrice', b).val(),
                                    actualTotalPrice: $('.actualTotalPrice', b).val().trim().length == 0 ? -1 : $('.actualTotalPrice', b).val(),
                                    settleItemRemarks: $('.settleItemRemarks', b).val()

                                });
                            }
                        }
                    } else {

                        settlementItemList.push({
                            estimationId: $("#estimateId").val(),
                            settlementId: $("#settlementId").val(),
                            estimateSettleItemId: -1,
                            particular: $('.particularSelectorFromTable', b).find(":selected").text(),
                            itemCategory: $('.itemCategoryDropdownSelector', b).find(":selected").text(),
                            itemName: $('.itemSelectorFromTable', b).find(":selected").text(),
                            itemId: Number($('.itemSelectorFromTable', b).find(":selected").val()),
                            itemCode: $('.itemCodeText', b).text(),
                            itemUnit: $('.itemUnitText', b).text(),
                            noOfMachineAndUsagesAndTeamAndCar: -1,
                            noOfDayAndTotalUnit: -1,
                            quantityRequired: -1,
                            unitPrice: -1,
                            totalPrice: -1,
                            responsibleDepartmentName: $('.departmentSelector', b).find(":selected").text(),
                            responsibleDepartment_Id: Number($('.departmentSelector', b).find(":selected").val()),
                            districtName: $('.distSelectorFromTable', b).find(":selected").text(),
                            thanaName: $('.particularTableThana', b).find(":selected").text(),
                            thanaId: Number($('.particularTableThana', b).find(":selected").val()),
                            areaType: $('.areaType', b).find(":selected").val(),
                            settleItemId: -1,
                            actualQuantity: Number($('.actualQuantity', b).val()),
                            actualUnitPrice: Number($('.actualUnitPrice', b).val()),
                            actualTotalPrice: Number($('.actualTotalPrice', b).val()),
                            settleItemRemarks: $('.settleItemRemarks', b).val()

                        });
                    }
                });

                var departmentSummaryTableRows = $('#TableDepartmentWishSummary tr').length;
                $('#TableDepartmentWishSummary tr').each(function (a, b) {
                    if (a > 0 && a < departmentSummaryTableRows) {
                        if ($('#idDepartmentId' + a).text() == "-1") {
                            //console.log("skip");
                        } else {
                            departmentWiseSummaryList.push({
                                department_Id: parseInt($('#idDepartmentId' + a).text()),
                                departmentName: $('#nameDepartmentId' + a).text(),
                                totalPrice: $('#totalPriceDepartmentId' + a).text()
                            });
                        }

                    }
                });
                var particularSummaryTableRows = $('#TableParticularWishSummary tr').length;
                $('#TableParticularWishSummary tr').each(function (a, b) {
                    if (a > 0 && a < particularSummaryTableRows) {
                        if ($('#idParticularId' + a).text() == "-1") {
                            //console.log("skip");
                        } else {
                            particularWiseSummaryList.push({
                                particular_Id: parseInt($('#idParticularId' + a).text()),
                                particlarName: $('#nameParticularId' + a).text(),
                                totalPrice: $('#totalPriceParticularId' + a).text()
                            });
                        }
                    }
                });


                var tvalue = tableOpen == 1 ? parseFloat($("#sumOfTotalPrice").text()) : parseFloat($("#totalPriceText").val());
                if (isNaN(tvalue)) {
                    tvalue = 0
                }


                settlement = {
                    Id: $("#settlementId").val(),
                    settlementNote: $("#settlementNote").val(),
                    estimationId: Number($("#estimateId").val()),
                    IsItFinalSetttlement: Number($("#settlementTypeDiv input[type='radio']:checked").val())
                };


                $("#TableAprroverList tr").each(function (a, b) {
                    if (a > 0) {
                        settlementApproverList.push({
                            user_Id: $('.approverId', b).text(),
                            approverFullName: $('.approverName', b).text(),
                            priority: $('.approverPriority', b).text(),
                            rolePriority_Id: $('.approverPriorityType', b).text(),
                            approverRole: $('.approverPriorityTypeText', b).text(),
                            approverDepartment: $('.approverDepartment', b).text(),
                            expectedTime: $('.approverExpectedTime', b).text()
                        });
                    }
                });
                if (settlementItemList.length < 1) {
                    showErrorMessageBelowCtrl('validatioOfParticularItem', 'please add atlest one  particular item', true);
                    validFlag = 0;
                }
                if (settlementApproverList.length < 1) {
                    showErrorMessageBelowCtrl('employeeListforApprover', 'please add atlest one approver', true);
                    validFlag = 0;
                } else {
                    let recomendorAdded = 0;
                    let finalAcknowledgerAdded = 0;
                    for (let i = 0; i < settlementApproverList.length; i++) {
                        if (settlementApproverList[i].rolePriority_Id == 1) {
                            finalAcknowledgerAdded = 1;
                        }

                        if (settlementApproverList[i].rolePriority_Id == 2) {
                            recomendorAdded = 1;
                        }
                    }
                    if (finalAcknowledgerAdded == 0) {
                        showErrorMessageBelowCtrl('employeeListforApprover', 'please add atlest one Final Acknowledger', true);
                        validFlag = 0;
                    }
                    if (recomendorAdded == 0) {
                        showErrorMessageBelowCtrl('employeeListforApprover', 'please add atlest one  Acknowledger', true);
                        validFlag = 0;
                    }
                }
                var data = new RequestData(settlement, settlementApproverList, settlementItemList);
                if (validFlag == 1) {

                    return data;
                } else {
                    return false;
                }
            }

            $("#draftSettlement").click(function () {

                var settlementData = ConstructResponseObject();

                if (settlementData == false) {

                } else {
                    var settlementAttachment = [];

                    formData = new FormData();
                    for (var i = 0; i < filelist.length; i++) {
                        if (jQuery.isEmptyObject(filelist[i])) {
                            continue;
                        }
                        formData.append(filelist[i].name, filelist[i]);
                    }
                    settlementAttachment = formData;
                    settlementDraftDataPostToServer(settlementData, settlementAttachment);
                }

            });
            $("#submitButton").click(function () {

                var settlementData = ConstructResponseObject();
                if (settlementData == false) {

                } else {
                    var estimationAttachment = [];

                    formData = new FormData();
                    for (var i = 0; i < filelist.length; i++) {
                        if (jQuery.isEmptyObject(filelist[i])) {
                            continue;
                        }
                        formData.append(filelist[i].name, filelist[i]);
                    }
                    estimationAttachment = formData;
                    settlementSubmitDataPostToServer(settlementData, estimationAttachment);
                }

            });


            function settlementDraftDataPostToServer(settlementData, settlementAttachments) {
                var dataJson = JSON.stringify(settlementData);
                var postData = {
                    "requestDto": dataJson
                };

                $.ajax({
                    type: "POST",
                    traditional: true,
                    async: false,
                    cache: false,
                    url: "/Settlement/DraftSettlement",
                    context: document.body,
                    data: postData,
                    beforeSend: function () {
                        $.blockUI({
                            timeout: 0,
                            message: 'Processing..'
                        });
                    },
                    success: function (response) {
                        if (parseInt(response) > 0) {
                            postAttachment(parseInt(response), settlementAttachments);
                            $.unblockUI();
                            alertify.alert('SUCCESS', 'Draft Saved Successfully!', function () { window.location = "/Settlement/ReadyToSettlementList"; });
                        } else {
                            alertify.alert('Something went wrong! please try again.');
                        }
                    },
                    complete: function () {
                        $.unblockUI();
                    },
                    failure: function (response) {
                        $.unblockUI();
                        alert(response.responseText);
                    },
                    error: function (response) {
                        $.unblockUI();
                        alert(response.responseText);
                    }
                });
            }

            function settlementSubmitDataPostToServer(settlementData, estimationMemoAttachment) {
                var dataJson = JSON.stringify(settlementData);
                var postData = {
                    "requestDto": dataJson
                };

                $.ajax({
                    type: "POST",
                    traditional: true,
                    async: false,
                    cache: false,
                    url: "/Settlement/SubmitSettlement",
                    context: document.body,
                    data: postData,
                    beforeSend: function () {
                        $.blockUI({
                            timeout: 0,
                            message: 'Processing..'
                        });
                    },
                    success: function (response) {
                        if (parseInt(response) > 0) {
                            postAttachment(parseInt(response), estimationMemoAttachment);
                            $.unblockUI();
                            alertify.alert('SUCCESS', 'Settlement Submit Successfully!', function () { window.location = "/Settlement/ReadyToSettlementList"; });
                        } else {
                            alertify.alert('Something went wrong! please try again.');
                        }
                    },
                    complete: function () {
                        $.unblockUI();
                    },
                    failure: function (response) {
                        $.unblockUI();
                        alert(response.responseText);
                    },
                    error: function (response) {
                        $.unblockUI();
                        alert(response.responseText);
                    }
                });
            }

            function postAttachment(estimationSettlementId, data) {
                $.ajax({
                    type: "POST",
                    url: "/Settlement/UploadFilesOfSettlement?estimationSettlementId=" + estimationSettlementId,
                    contentType: false,
                    processData: false,
                    data: data,
                    async: false,
                    beforeSend: function () {
                        $.blockUI({
                            timeout: 0,
                            message: 'Processing..'
                        });
                    },
                    success: function (message) {
                        if (parseInt(message) == 1) {
                            return;
                        }
                        else {
                            alertify.alert('Something went wrong to save the file.');
                        }
                    },
                    error: function () {
                        alert("Error!");
                    }
                });
            }

            function RequestData(settlement, settlementApproverList, settlementItems) {

                this.settlement = settlement;
                this.settlementApproverList = settlementApproverList;
                this.settlementItems = settlementItems;

            }
        });
        $(document).ready(async function () {

            var rowIdx = 0;
            $("#settlementBulkExcelBtn").on('click', function (event) {
                event.preventDefault();
                
                var el = document.createElement("INPUT");
                el.type = "file";
                el.accept = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";

                el.addEventListener('change', function (ev2) {
                    showLoading();
                    ev2.preventDefault();
                    

                    new Promise(function (resolve) {
                        if (el.files.length) {
                            var xl2json = new ExcelToJSON();
                            xl2json.parseExcel(el.files[0], (val) => {
                                
                                _bindToTable(rowIdx, val)
                                resolve();
                            });
                        }
                    })
                        .then(function () {

                            el = undefined;
                        });

                });

                el.click(); // open

            })

            var _bindToTable = (rowIdx, tableData) => {
                
                console.log(tableData);
              
                
                let estimateIdentity = $("#IdentificationTextId").val().trim();
                  console.log(estimateIdentity);
                
                let budgetId =  tableData[0]["Identification"].replaceAll(' ', '');
                if (estimateIdentity != budgetId ) {
                    alertify.alert("Error!", "please use proper bulk settlement templete. You are using wrong templte."); 
                }

                var errorIds = []
               
                var objList = tableData.map((obj, i) => {
                    if ((obj['actualUnitPrice'] === undefined || obj['actualUnitPrice'] == '' ) && (obj['ActualQuantity'] == '' ||  obj['ActualQuantity'] === undefined )) {
                     
                        
                    }else{
                        if (!isNumber(obj['actualUnitPrice']) || !isNumber(obj['ActualQuantity'])) {
                            errorIds.push(i + 2)
                        }
                    
                        if((obj['actualUnitPrice'] === undefined || obj['actualUnitPrice'] == '') || (obj['ActualQuantity'] == '' ||  obj['ActualQuantity'] === undefined ) ){
                            errorIds.push(i + 2)
                            }
                    }

                   
                }
                )
                if (errorIds.length > 0) {
                    alertify.alert("Error!", "Invalid uploaded xlsx file at Serial No: " + errorIds.join(","));
                    hideLoading()
                    return;
                }
                else {
                    
                    if (tableData.length === 0) {
                        alertify.alert("Error!", "No Item Found!");
                        hideLoading()
                        return;
                    } else {

                       
                       
                        if (errorIds.length > 0) {
                            alertify.alert("Error!", "Invalid uploaded xlsx file at Serial No: " + errorIds.join(","));
                            hideLoading()
                           
                            return;
                        }
                       
                        mapToUi(rowIdx, tableData);
                       

                        
                        return;
                        
                    }
                }
            }

            async function mapToUi(rowIdx, tableData) {
                new Promise(function (resolve) {
                    var row = '';
                      
                    tableData.map((data, i) => {
                        new Promise(function (resolve) {
                            
                            

                            var totalPrice = 0;

                        if ((data['actualUnitPrice'] !== undefined ) && (  data['ActualQuantity'] !== undefined )) {
                            
                            $(".actualUnitPrice_"+ data["EstimateSettleItemId"]).val(data["actualUnitPrice"]);
                            $(".actualQuantity_"+ data["EstimateSettleItemId"]).val(data["ActualQuantity"]);
                            $(".settleItemRemarks_"+ data["EstimateSettleItemId"]).val(data["SettlementRemarks"]);
                            let totalPrice = Number(data["actualUnitPrice"]) *  Number(data["ActualQuantity"]) ;
                            $(".actualTotalPrice_"+ data["EstimateSettleItemId"]).val(
                            totalPrice.toFixed(2)
                               );
                               
                               $(".actualQuantity_"+ data["EstimateSettleItemId"]).trigger('keyup');

                          }  
                        })
                    });
                   
                    hideLoading();
                    resolve();
                });
            }

            var ExcelToJSON = function () {

                this.parseExcel = function (file, onCallBack) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        var data = e.target.result;
                        var workbook = XLSX.read(data, {
                            type: 'binary'
                        });
                        var sheet = workbook.SheetNames[2];
                        var XL_row_object = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheet]);
                        var json_object = JSON.stringify(XL_row_object);
                        
                        try {
                            var oo = JSON.parse(json_object).filter(xx => Object.keys(xx).length >= 1)
                            onCallBack(oo);
                           
                        } catch (ex) {
                            console.log(ex)
                        }
                    };

                    reader.onerror = function (ex) {
                        console.log(ex);
                    };

                    reader.readAsBinaryString(file);
                };
            };
        function showLoading(){
                  $("#loaderModal").modal({ backdrop: 'static', keyboard: false });
        }
        function hideLoading() {

            setTimeout(() => {
                $('#loaderModal').modal('hide')
             
                
            }, 2000)
        }

        function isNumber(num) {
                let value1 = num.toString();
                let value2 = parseFloat(num).toString();
                return (value1 === value2);
        }
        $(".removeAttachServer").click(function() {
                $(this).parent().remove();
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You will not be able to recover this attachment!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: "GET",
                            url: "/Settlement/DeleteAttachmentsById?id=" + this.id,
                            data: "{}",
                            success: function(response) {
                                if (response) {
                                }
                            }
                        });
                    }
                });
            });
    });
    </script>
}
@model AMS.Models.ServiceModels.BudgetEstimate.SingleEstimationWithTypeResponse
@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
@using AMS.Models.DomainModels
@inject AMS.Services.Managers.Contracts.ISessionManager _sessionManager
@{
    UserEntity? user = await _sessionManager.GetUser();
}
<style>
    /*select, option {
            width: 200px;
        }*/
    select + .select2-container {
        width: 100% !important;
    }

    #TableAprroverList tbody {
        counter-reset: serial-number;
    }

        #TableAprroverList tbody td:first-child:before {
            counter-increment: serial-number;
            content: counter(serial-number);
        }

    #TableAprroverFeedBackList tbody {
        counter-reset: serial-number;
    }

        #TableAprroverFeedBackList tbody td:first-child:before {
            counter-increment: serial-number;
            content: counter(serial-number);
        }

    #particularItemsDetails tbody {
        counter-reset: serial-number;
    }

        #particularItemsDetails tbody td:first-child:before {
            counter-increment: serial-number;
            content: counter(serial-number);
        }

    .outer {
        display: flex;
        overflow-x: auto;
    }

    .inner {
        flex: 0 0 25%;
    }

    #doublescroll {
        overflow: auto;
        overflow-y: hidden;
    }

        #doublescroll p {
            margin: 0;
            padding: 1em;
            white-space: nowrap;
        }
</style>

<div class="hiddenElements">
    <input id="estimateId"
           type="hidden"
           value="@Model.Estimation.EstimateId" />
</div>
<div class="container-fluid">
    <form id="form">
        <div class="card secondary mb-4">
            <div class="card-header hideShow"><b>Approval for Estimate Budget Here</b></div>
            <div class="card-body">
                <div class="container-fluid">
                    <div class="form-group required row">
                        <label for="approvalForDropDown" class="col-sm-2 col-form-label-sm control-label">Approval For</label>
                        <div class="col-sm-4">
                            <select class="form-control" aria-label=".form-select-sm example" id="approvalForDropDown" disabled>
                                <option value="@Model.Estimation.EstimationTypeId" selected>@Model.Estimation.EstimationTypeName</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="IdentificationTextId" class="col-sm-2 col-form-label-sm control-label">Identification</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control" id="IdentificationTextId" value="@Model.Estimation.EstimationIdentifier" disabled />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="subjectTextId" class="col-sm-2 col-form-label-sm control-label">Subject</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="subjectTextId" disabled />
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card secondary mb-4 procurementApprovalDiv">
            <div class="card-header hideShow"><b>Background</b></div>
            <div class="card-body">
                <div class="container-fluid">
                    <div class="form-group required row">
                        <label for="paReferenceNumberTextId" class="col-sm-2 col-form-label-sm control-label">PA. Reference No.</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="paReferenceNumberTextId" required />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="titleOfPRorRFQTextId" class="col-sm-2 col-form-label-sm control-label">Title of the PR/RFQ</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="titleOfPRorRFQTextId" required />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="RFQReferNoTextId" class="col-sm-2 col-form-label-sm control-label">RFQ Reference No.</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="RFQReferNoTextId" required />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="PRReferenceNoTextId" class="col-sm-2 col-form-label-sm control-label">PR Reference No.</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="PRReferenceNoTextId" required />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="NameAndCellRequesterTextId" class="col-sm-2 col-form-label-sm control-label">Name and Cell No. of Requester</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="nameAndCellRequesterTextId" required />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="deptOrDivTextId" class="col-sm-2 col-form-label-sm control-label">Department/Division</label>
                        <div class="col-sm-10">
                            @*<input type="text" class="form-control" id="" required />*@
                            <select class="form-control" aria-label=".form-select-sm" id="deptOrDivTextId" required>
                                <option value="-1" selected>Select</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="RFQProcessTextId" class="col-sm-2 col-form-label-sm control-label">RFQ Process</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="RFQProcessTextId" required />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="sourcingMethodTextId" class="col-sm-2 col-form-label-sm control-label">Sourcing Method</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="sourcingMethodTextId" required />
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card secondary mb-4 procurementApprovalDiv">
            <div class="card-header hideShow"><b>Award Recommandation</b></div>
            <div class="card-body">
                <div class="container-fluid">
                    <div class="form-group required row">
                        <label for="nameSupplierTextId" class="col-sm-2 col-form-label-sm control-label">Name of the Recommended Supplier</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="nameSupplierTextId" required />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="purchaseValueTextId" class="col-sm-2 col-form-label-sm">Purchase Value</label>
                        <div class="col-sm-10">
                            <textarea class="form-control" id="purchaseValueTextId" style="height:100px;" aria-label="With textarea"></textarea>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="savingAmountTextId" class="col-sm-2 col-form-label-sm">Saving Amount</label>
                        <div class="col-sm-10">
                            <textarea class="form-control" id="savingAmountTextId" style="height:100px;" aria-label="With textarea"></textarea>
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="savingTypeDropDown" class="col-sm-2 col-form-label-sm control-label">Saving Type</label>
                        <div class="col-sm-4">
                            <select class="form-control" aria-label=".form-select-sm example" id="savingTypeDropDown" required>
                                <option value="None">Select</option>
                                <option value="CostAvoidance">Cost Avoidance</option>
                                <option value="CostReduction">Cost Reduction</option>
                                <option value="na">N/A</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card secondary mb-4">
            <div class="card-header hideShow"><b>Budget Descriptions</b></div>
            <div class="card-body">
                <div class="container-fluid">

                    <div class="form-group row">
                        <label for="objectiveTextId" class="col-sm-2 col-form-label-sm">Objective</label>
                        <div class="col-sm-10">
                            <textarea class="form-control" id="objectiveTextId" aria-label="With textarea" style="height:200px;" disabled>@Model.Estimation.EstimationObjective</textarea>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="textEditorEstimation" class="col-sm-2 col-form-label-sm">Details</label>
                        <div class="col-sm-10 ">
                            <div id="doublescroll" class="">@Html.Raw( @Model.Estimation.EstimationDetails)</div>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-2 col-form-label-sm">Plan Date</label>
                        <div class="col-sm-4">
                            <label for="datetimepickerEstimationStartDate" class="col-form-label-sm control-label">Start</label>
                            <input readonly="readonly" @*type="datetime-local"*@ id="datetimepickerEstimationStartDate" class="form-control datepicker" disabled />
                        </div>
                        <div class="col-sm-4">
                            <label for="datetimepickerEstimationEndDate" class="col-form-label-sm control-label">End</label>
                            <input readonly="readonly" @*type="datetime-local"*@ id="datetimepickerEstimationEndDate" class="form-control datepicker" disabled />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="estimationfiles" class="col-sm-2 col-form-label-sm">Attachments</label>
                        <div class="col-sm-10 col-md-10 table-responsive">
                            <table class="table table-sm">
                                <tr id="attachmentsTable"></tr>
                            </table>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="creatortext" class="col-sm-2 col-form-label-sm control-label">Created By</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control" id="creatortext" value="@Model.Estimation.CreateorFullName" disabled />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="creationDateTxt" class="col-sm-2 col-form-label-sm control-label">Creation Time</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control" id="creationDateTxt" value="@Model.Estimation.CreatedDate.ToString("f")" disabled />
                        </div>
                    </div>
                    <div class="form-group row" id="totalPriceDiv">

                        <div class="col-md-6">
                            @* <div class="form-group required row">
                            <label for="currencyTypeDropDown" class="col-sm-4 col-form-label-sm control-label">Currency Type</label>
                            <div class="col-sm-8">
                            <select class="form-control" aria-label=".form-select-sm example" id="currencyTypeDropDown" disabled>
                            </select>
                            </div>
                            </div>*@
                            <div class="row">
                                <label for="totalPriceText" class="col-sm-4 col-form-label-sm control-label">Total Price</label>
                                <div class="col-sm-8">
                                    <input type="text" class="form-control numbersOnly" id="totalPriceText" value="@Model.Estimation.EstimaionTotalPrice" disabled />
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="row">
                                <label for="totalPrice_remarks" class="col-md-2 col-form-label-sm control-label"> Remarks</label>
                                <div class="col-md-10">
                                    <textarea class="form-control" id="total_price_remarks" aria-label="With textarea" disabled="disabled"> @Model.Estimation.TotalPriceRemarks</textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card border-secondary mb-4" id="AddParticularSection">
            <div class="card-header hideShow"><b>Particular Items and Details</b></div>
            <div class="card-body">
                <div id="AddParticularSection">
                    <div class="container-fluid">
                        <div class="table-responsive" id="particularItemTableId">
                            <table class="table table-sm table-hover table-bordered particularItemsAndDetailsTable" style="border:2px;" id="particularItemsDetails">
                                <thead class="thead-dark">
                                    <tr>
                                        <th>#</th>
                                        <th scope="col" style="width:200px">Particular@*<hr />Item Category<hr />Item*@</th>
                                        @*<th scope="col" style="width:200px">Item Category</th>
                                        <th scope="col" style="width:200px">Item</th>*@
                                        <th scope="col">Item Description@*<hr />Unit*@</th>
                                        @*<th scope="col">Unit</th>*@
                                        <th scope="col">Quantity@*No. Of Machine/ Usages/Team/Car<hr />No. Of Day/ Total Unit<hr />Required Quantity*@</th>
                                        @*<th scope="col">No. Of Day /Total Unit</th>
                                        <th scope="col">Required Quantity</th>*@
                                        <th scope="col">Unit Price</th>
                                        <th scope="col">Total Price (TK.)</th>
                                        <th scope="col">Department</th>
                                        <th scope="col">Location@*District<hr />Thana<hr />Area Type*@</th>
                                        @*<th scope="col">Thana</th>
                                        <th scope="col">Area Type</th>*@
                                        <th scope="col">Remarks</th>
                                    </tr>
                                </thead>
                                <tbody id="tbody" style="text-align:left">
                                </tbody>
                                <tfoot align="right">
                                    <tr>
                                        @*<td colspan="4"><span id="validationMsgOnParticular" style="color:red"></span></td>*@
                                        <td id="sumOfTotalPrice" hidden>@Model.Estimation.EstimaionTotalPrice</td>
                                        <td colspan="6" style="font-weight:bold;" id="sumOfTotalPriceShow"></td>
                                        <td><span id="validationMsgOnDepartment" style="color:red"></span></td>
                                        <td colspan="2"><span id="validationMsgOnThana" style="color:red"></span></td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                    <div class="container-fluid">
                        <button class="btn btn-md btn-primary" id="addBtn" type="button"><i class="fa fa-plus" aria-hidden="true"></i></button>
                    </div>
                    <br />
                    <div class="container-fluid">
                        <div class="card border-secondary mb-4">
                            <div class="card-header"><b>Budget Summary View</b></div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-sm">
                                        <h6 style="text-align: center;">Department Wise Summary</h6>
                                        <div class="table-responsive">
                                            <table class="table table-sm table-hover table-bordered departmentWiseSummaryTable"
                                                   id="TableDepartmentWishSummary" style="float:left">
                                                <thead class="thead-dark">
                                                    <tr>
                                                        <th class="text-left" scope="col">Departments</th>
                                                        <th class="text-right" scope="col">Total Price (TK.)</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="tDepartSummarybody" style="text-align:left">
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="col-sm">
                                        <h6 style="text-align: center;">Particular Wise Summary</h6>
                                        <div class="table-responsive">
                                            <table class="table table-sm table-hover table-bordered particularWiseSummaryTable"
                                                   id="TableParticularWishSummary" style="float:left">
                                                <thead class="thead-dark">
                                                    <tr>
                                                        <th class="text-left" scope="col">Particulars</th>
                                                        <th class="text-right" scope="col">Total Price (TK.)</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="tPartiSummarybody" style="text-align:left">
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="card border-secondary mb-4">
            <div class="card-header hideShow"><b>Approver Workflow Design </b></div>
            <div class="card-body">
                <div class="card border-secondary mb-4">
                    <div class="card-header"><b>Approver List </b></div>
                    <div class="card-body">
                        <div class="container-fluid">
                            <span id="app_err-container"></span>
                            <div class="table-responsive">
                                <table class="table table-sm table-hover table-bordered" id="TableAprroverList">
                                    <thead class="thead-dark">
                                        <tr>
                                            <th>#</th>
                                            <th class="text-center" scope="col">Approver Name</th>
                                            @*<th class="text-center" scope="col">Approver Priority</th>*@
                                            <th class="text-center" scope="col">Approver Type</th>
                                            <th class="text-center" scope="col">Approver Department</th>
                                            <th class="text-center" scope="col">Expected Time</th>
                                        </tr>
                                    </thead>
                                    <tbody style="text-align:left">
                                        <tr style="background-color:khaki;">
                                            <td>&nbsp;</td>
                                            <td class="text-left">@Model.Estimation.CreateorFullName</td>
                                            <td class="text-left">Creator</td>
                                            <td class="text-left">@Model.Estimation.CreatorDepartment</td>
                                            <td class="text-left"></td>
                                        </tr>
                                    </tbody>
                                    <tbody id="tApproverbody" style="text-align:left">
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />

        <div class="card border-secondary mb-4" id="divApproverRemarksList">
            <div class="card-header hideShow"><b>Approver Remarks </b></div>
            <div class="card-body">
                <div class="card border-secondary mb-4">
                    <div class="card-header"><b>Feedback List </b></div>
                    <div class="card-body">
                        <div class="container-fluid">
                            <span id="app_err-container"></span>
                            <div class="table-responsive">
                                <table class="table table-sm table-hover table-bordered" id="TableAprroverFeedBackList">
                                    <thead class="thead-dark">
                                        <tr>
                                            <th>#</th>
                                            <th class="text-center" scope="col">Approver</th>
                                            <th class="text-center" scope="col">Status</th>
                                            <th class="text-center" scope="col">Feedback Date</th>
                                            <th class="text-center" scope="col">Feedback</th>
                                        </tr>
                                    </thead>
                                    <tbody id="tApproverRemarksbody" style="text-align:left">
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="container-fluid">
            <div class="form-group row">
                <label for="approved_remarks" class="col-sm-2 col-form-label-sm">Remarks</label>
                <div class="col-sm-10">
                    <textarea class="form-control" id="approved_remarks" aria-label="With textarea"></textarea>
                </div>
            </div>
        </div>

        <div class="container-fluid">
            <div class="form-group row" style="align-content:center">
                <div class="col-sm-2"></div>
                <div class="col-sm-10">
                    @if ((@Model.Estimation.EstimaionTotalPrice <= 2000000 && user.Id == 20) && (@Model.Estimation.EstimationTypeId == 2 || @Model.Estimation.EstimationTypeId == 3))
                    {
                        <button type="button" id="finalApproverBtn" class="btn btn-primary btn-lg">
                            <i class="fa fa-check" aria-hidden="true"></i> Final Approved
                        </button>
                    }

                    @if ((@Model.Estimation.EstimaionTotalPrice <= 2000000 && user.Id == 20) && (@Model.Estimation.EstimationTypeId == 2 || @Model.Estimation.EstimationTypeId == 3))
                    {
                        <button type="button" id="appbtn" class="btn btn-primary btn-lg">
                            <i class="fas fa-forward" aria-hidden="true"></i> Forward to MD Sir
                        </button>
                    }
                    else
                    {
                        <button type="button" id="appbtn" class="btn btn-primary btn-lg">
                            <i class="fa fa-check" aria-hidden="true"></i> Approved
                        </button>
                    }
                    <button id="rollBackbtn" class="btn btn-warning btn-lg" type="button">
                        <i class="fa fa-undo" aria-hidden="true"></i> Rollback Request
                    </button>
                    <button id="rejbtn" class="btn btn-danger btn-lg" type="button">
                        <i class="fa fa-ban" aria-hidden="true"></i> Reject
                    </button>

                </div>
            </div>
        </div>
    </form>
</div>


@section Scripts{
    <script src="~/js/AjaxCall/GetDataFromDbForBudetEstimationPage.js"></script>
    <script>
        $('#approved_remarks').bind('input propertychange',
            function () {
                showErrorMessageBelowCtrl('approved_remarks', 'please input less then 250 character', false);
                if (this.value.length > 256) {
                    showErrorMessageBelowCtrl('approved_remarks', 'please input less then 250 character', true);
                    $("#approved_remarks").val($("#approved_remarks").val().substring(0, 256));
                }
            });



        //$('.datepicker').datepicker()
        //    .on('changeDate',
        //        function(e) {
        //            showErrorMessageBelowCtrl('datetimepickerEstimationStartDate', 'please select start date', false);
        //            showErrorMessageBelowCtrl('datetimepickerEstimationEndDate', 'please select end date', false);

        //            var planStartDate = $("#datetimepickerEstimationStartDate").val();
        //            var planEndDate = $("#datetimepickerEstimationEndDate").val();

        //            if (planStartDate.length <= 0) {
        //                showErrorMessageBelowCtrl('datetimepickerEstimationStartDate', 'please select start date', true);
        //            } else {
        //                showErrorMessageBelowCtrl('datetimepickerEstimationStartDate', 'please select start date', false);
        //            }

        //            if (planEndDate.length <= 0) {
        //                showErrorMessageBelowCtrl('datetimepickerEstimationEndDate', 'please select end date', true);
        //            } else {
        //                showErrorMessageBelowCtrl('datetimepickerEstimationEndDate', 'please select end date', false);
        //            }
        //        });

        var rowIdx = 0;
        var storeItemDetails;
        var storeUsersWithDepartmentName;
        var tableOpen = 1;
        var formData;
        $(document).ready(function () {

            //$(document).on('click',
            //    '#clearbtn',
            //    function() {
            //        console.log('hh');
            //        $("#form")[0].reset();
            //    });

            /*$('.autoSuggestionSelect').css('width', '50%');*/
            $(".autoSuggestionSelect").select2({
                width: 'resolve'
            });

            $('.procurementApprovalDiv').hide();
            $("#totalPriceDiv").hide();
            $("#addBtn").hide();



            //getParticularsFromDb(0);
            //getDepartmentsFrmDb(0);
            //getDepartmentsForDropDownFrmDb();

            var estimationId = $("#estimateId").val();
            var selectValue = $("#approvalForDropDown").val();

            var formatter = new Intl.NumberFormat('en-IN',
                {
                    style: 'currency',
                    currency: 'BDT'
                });

            var totalPriceWithoutItemTable = $('#totalPriceText').val();
            // var formatedtotalPriceWithoutItemTable = formatter.format(totalPriceWithoutItemTable);
            $('#totalPriceText').val(totalPriceWithoutItemTable);

            var totalPrice = $('#sumOfTotalPrice').text();
            var formatedtotalPrice = formatter.format(totalPrice);
            $('#sumOfTotalPriceShow').text(formatedtotalPrice);
            let estimateTypeValue = $("#approvalForDropDown").children("option:selected").val();
            getCurrencyTypeFromDbBasedOnEstimationTypeAndDropdownName("CurrencyType", estimateTypeValue);
            //getUserDept();
            loadEstimation(estimationId);
            loadAttachments(estimationId);
            loadEstimationDetails(estimationId);
            loadEstimateApprovers(estimationId);
            loadSummariesOfThisEstimation(estimationId);
            loadEstimateApproverRemarkList(estimationId);
            getDepartmentsForDropDownFrmDb();
            if (selectValue == 7 || selectValue == 8) {

                setTimeout(function () {
                    $('.procurementApprovalDiv').show();
                    loadProcurementApprovalEstimate(estimationId);
                }, 1300);
            }

            function getUserDept() {
                var sessionUserDept = {};
                $.ajax({
                    type: "POST",
                    url: "/User/GetUserByUserId",
                    data: "{}",
                    success: function (data) {
                        var sessionUserDept = data;
                        console.log(sessionUserDept.isCRA);;
                    }
                });
                return sessionUserDept.isCRA;

            }

            function loadProcurementApprovalEstimate(value) {
                $.ajax({
                    type: "GET",
                    url: "/Estimation/GetProcurementApprovalEstimationInfobyEstimateId?estimationId=" + value,
                    data: "{}",
                    success: function (data) {
                        console.log(data);
                        $("#paReferenceNumberTextId").val(data.paReferenceNo);
                        $("#titleOfPRorRFQTextId").val(data.titleOfPRorRFQ);
                        $("#RFQReferNoTextId").val(data.rfqReferenceNo);
                        $("#PRReferenceNoTextId").val(data.prReferenceNo);
                        $("#nameAndCellRequesterTextId").val(data.nameOfRequester);

                        $(`#deptOrDivTextId option[value='${data.departmentId}']`).prop('selected', true);
                        $('#deptOrDivTextId').val(data.departmentId);
                        $("#RFQProcessTextId").val(data.rfqProcess);
                        $("#sourcingMethodTextId").val(data.sourcingMethod);
                        $("#nameSupplierTextId").val(data.nameOfRecommendedSupplier);
                        $("#purchaseValueTextId").val(data.purchaseValue);
                        $("#savingAmountTextId").val(data.savingAmount);
                        //$('#savingTypeDropDown option[value=' + data.savingType + ']').attr('selected', 'selected');
                        //$("#savingTypeDropDown option").filter(function() {
                        //    return $(this).text() == data.savingType;
                        //}).prop('selected', true);
                        //$('#savingTypeDropDown')
                        //         .removeAttr('selected')
                        //         .filter('[value='+ data.savingType +']')
                        //             .attr('selected', true);
                        //$('#savingTypeDropDown').val(data.savingType).change();


                        $(`#savingTypeDropDown option[value='${data.savingType}']`).prop('selected', true);
                        $('#savingTypeDropDown').trigger('change');
                    }
                });
                if (@user.CanEdit != 3) {
                    $('#paReferenceNumberTextId').attr('disabled', 'disabled');
                    $('#titleOfPRorRFQTextId').attr('disabled', 'disabled');
                    $('#RFQReferNoTextId').attr('disabled', 'disabled');
                    $('#PRReferenceNoTextId').attr('disabled', 'disabled');
                    $('#nameAndCellRequesterTextId').attr('disabled', 'disabled');
                    $('#deptOrDivTextId').attr('disabled', 'disabled');
                    $('#RFQProcessTextId').attr('disabled', 'disabled');
                    $('#sourcingMethodTextId').attr('disabled', 'disabled');
                    $('#nameSupplierTextId').attr('disabled', 'disabled');
                    $('#purchaseValueTextId').attr('disabled', 'disabled');
                    $('#savingAmountTextId').attr('disabled', 'disabled');
                    $('#savingTypeDropDown').attr('disabled', 'disabled');
                }
                //$(‘elementname’).attr(‘disabled’,’disabled’);
            }

            function loadEstimation(value) {
                $.ajax({
                    type: "GET",
                    url: "/Estimation/GetEstimationInfobyId?estimationId=" + value,
                    data: "{}",
                    success: function (data) {
                        console.log('Estimation :============ ');
                        console.log(data);
                        var estimation = data.estimation;
                        $("#subjectTextId").val(estimation.estimationSubject);
                        $("#datetimepickerEstimationEndDate").val(estimation.estimationPlanEndDate.slice(0, 10));
                        $("#datetimepickerEstimationStartDate").val(estimation.estimationPlanStartDate.slice(0, 10));

                        setTimeout(function () {

                            $('#totalPriceText').val(estimation.estimaionTotalPrice.toLocaleString() + ' ' + estimation.currency);
                            //$('#currencyTypeDropDown').val(estimation.currencyType).trigger("change");
                        }, 500);
                    }
                });
            }

            function loadAttachments(value) {
                $.ajax({
                    type: "GET",
                    url: "/BudgetEstimation/LoadEstimateAttachmentsByEstimateId?estimateId=" + value,
                    data: "{}",
                    success: function (data) {
                        let attachment = data;
                        for (var i = 0; i < attachment.length; i++) {
                            var str = attachment[i].url;

                            let index = str.indexOf('\\uploadedFiles\\NewFolder');
                            var res = str.substring(index);
                            console.log(res);

                            $('#attachmentsTable').append(
                                `<td><a href="` + res + `" download>` + attachment[i].fileName + `</a></td>`
                            );
                        }
                    }
                });
            }

            function loadEstimationDetails(value) {
                var formatter = new Intl.NumberFormat('en-IN');
                $.ajax({
                    type: "GET",
                    url: "/DraftedBudgeEstimation/GetAllEstimationDetailsByEstimate?estiId=" + value,
                    data: "{}",
                    success: function (data) {
                        var details = data;
                        if (details.length < 1) {
                            console.log("No Items");
                            $("#AddParticularSection").hide();
                            $("#totalPriceDiv").show(0);
                            tableOpen = 0;
                        } else {
                            for (var i = 0; i < details.length; i++) {
                                var deptId = details[i].departmentId;
                                var deptName = details[i].departmentName;
                                var formatedPrice = formatter.format(details[i].totalPrice);

                                $('#tbody').append(`<tr id="R${++rowIdx}">
                                                <td>&nbsp;</td>
                                                <td width="50%">
                                                    Particular :` +
                                    details[i].particular +
                                    `
                                                    <hr />Item Category: ` +
                                    details[i].itemCategory +
                                    `
                                                    <hr />Item: <span style="color:blue;font-weight:bold">` +
                                    details[i].itemName +
                                    `</span>
                                                </td>
                                                <td>Item Code: ` +
                                    details[i].itemCode +
                                    `
                                                    <hr />Item Unit: ` +
                                    details[i].itemUnit +
                                    `
                                                </td>
                                                <td>
                                                    No.Of Mach./Usages/ Team/Car:<input type="text" class="findTotalPrice nomuct singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                        id="NoOfMaUTCaTextId${rowIdx}" name="indexMAU"
                                                            value="` +
                                    details[i].noOfMachineAndUsagesAndTeamAndCar +
                                    `" disabled /> <hr />
                                                    No.Of Day/ Total Unit:<input type="text" class="onlyNumber findTotalPrice nodut singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                        id="NoOfDTUTextId${rowIdx}" value="` +
                                    details[i].noOfDayAndTotalUnit +
                                    `" disabled /> <hr />
                                                    Req.Quantity: <input type="text" class="onlyNumber findTotalPrice rqt singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                        id="requiredQuantityTextId${rowIdx}" value="` +
                                    details[i].quantityRequired +
                                    `" disabled /> <hr />
                                                </td>
                                                <td><input type="text" class="form-control-sm itemUnitPrice numbersOnly" id="unitPriceTextId${rowIdx}" value="` +
                                    details[i].unitPrice +
                                    `" style="width:100px" disabled /></td>
                                                <td class="form-control-sm totalPriceColumn" id="TotalPriceTextId${rowIdx}" style="color:chocolate" hidden>` +
                                    details[i].totalPrice +
                                    `</td>
                                                <td class="form-control-sm" id="TotalPriceFormateTextId${rowIdx}" style="text-align:right; color:chocolate">` +
                                    formatedPrice +
                                    `</td>
                                                <td>` +
                                    deptName +
                                    `</td>
                                                <td>District: ` +
                                    details[i].districtName +
                                    ` <hr />
                                                    Thana: ` +
                                    details[i].thanaName +
                                    ` <hr />
                                                    Area Type: ` +
                                    details[i].areaType +
                                    `
                                                </td>
                                                <td colspan="2">
                                                    <span>` +
                                    details[i].remarks +
                                    `</span>
                                                </td>
                                            </tr>`);


                            }
                        }
                    }
                });
            }

            function loadSummariesOfThisEstimation(value) {
                var formatter = new Intl.NumberFormat('en-IN',
                    {
                        style: 'currency',
                        currency: 'BDT'
                    });
                $.ajax({
                    type: "GET",
                    url: "/DepartmentWiseSummaryOfBudgetEstimation/LoadDepartmentWiseSummaryDetailsByEstimationId?estimationId=" + value,
                    data: "{}",
                    success: function (data) {
                        var deptSummary = data;
                        console.log(deptSummary);
                        let rowDepartmentWiseSummaryTableIndex = 1;
                        for (var i = 0; i < deptSummary.length; i++) {
                            $('#tDepartSummarybody').append(
                                `<tr class="deletedDepartmentRow" id="RowDepartmentSummary${rowDepartmentWiseSummaryTableIndex}">
                                            <td lass="text-left">
                                                <span id="nameDepartmentId${rowDepartmentWiseSummaryTableIndex}"
                                                    class="departmentWiserSummaryDepartmentColumn"
                                                    style="color:chocolate">` +
                                deptSummary[i].departmentName +
                                `</span>
                                            </td>
                                            <td id="idDepartmentId${rowDepartmentWiseSummaryTableIndex}" class="departmentSummaryDeptId" hidden>` +
                                deptSummary[i].departmentId +
                                `</td>
                                            <td class="text-right">
                                                <span id="totalPriceDepartmentId${rowDepartmentWiseSummaryTableIndex}"
                                                class="departmentWiserSummaryTablePriceColumn"  hidden>` +
                                deptSummary[i].price +
                                `</span>
                                                <span style="color:chocolate">` +
                                formatter.format(deptSummary[i].price) +
                                `</span>
                                            </td>
                                        </tr>`
                            );
                            rowDepartmentWiseSummaryTableIndex++
                        }
                    }
                });
                $.ajax({
                    type: "GET",
                    url: "/ParticularWiseSummary/GetParticularSummaryDetails?estimationId=" + value,
                    data: "{}",
                    success: function (data) {
                        let partiSummary = data;
                        let rowParticularWiseSummaryTableIndex = 1;
                        for (var i = 0; i < partiSummary.length; i++) {
                            $('#tPartiSummarybody').append(
                                `<tr class="deletedParticularRow" id="RowParticularSummary${rowParticularWiseSummaryTableIndex}">
                                            <td lass="text-left">
                                                <span id="nameParticularId${rowParticularWiseSummaryTableIndex}"
                                                    style="color:chocolate">` +
                                partiSummary[i].particularName +
                                `</span>
                                            <td id="idParticularId${rowParticularWiseSummaryTableIndex}" class="particularSummarypartiId" hidden>` +
                                partiSummary[i].particularId +
                                `</td>
                                            </td>
                                            <td class="text-right">
                                                <span id="totalPriceParticularId${rowParticularWiseSummaryTableIndex}" hidden>` +
                                partiSummary[i].price +
                                `</span>
                                                <span style="color:chocolate">` +
                                formatter.format(partiSummary[i].price) +
                                `</span>
                                            </td>
                                        </tr>`
                            );
                            rowParticularWiseSummaryTableIndex++;
                        }
                    }
                });
            }

            function loadEstimateApproverRemarkList(value) {
                $.ajax({
                    type: "GET",
                    url: "/BudgetApprover/GetApproverRemarkList?estimationId=" + value,
                    data: "{}",
                    success: function (data) {
                        var approvers = data;
                        var commentIcon = '<i class="fa fa-quote-left fa-2x fa-pull-left" aria-hidden="true"></i>';
                        console.log(approvers);
                        if (approvers < 1) {
                            $("#divApproverRemarksList").hide();
                        }
                        for (var i = 0; i < approvers.length; i++) {
                            var d = new Date(approvers[i].feedBackDate);
                            if (approvers[i].estimateStatus == "-500") {
                                statusTag = "<span class='w3-tag w3-red'>Rejected</span>";
                            } else if (approvers[i].estimateStatus == "100") {
                                statusTag = "<span class='w3-tag w3-green'>Approved</span>";
                            } else if (approvers[i].estimateStatus == "-404") {
                                statusTag = "<span class='w3-tag w3-deep-orange'>Rollbacked</span>";
                            }
                            if (approvers[i].feedBack == null)
                                approvers[i].feedBack = 'N/A';
                            $('#tApproverRemarksbody').append(
                                `<tr>
                                            <td>&nbsp;</td>
                                            <td class="approverNameFromFeedBack">` +
                                approvers[i].approverFullName +
                                ` </td>
                                            <td>` +
                                statusTag +
                                `</td>
                                            <td class="approverApprovalDate">` +
                                d.toDateString() +
                                ` ` +
                                d.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true }) +
                                `</td>
                                            <td class="approverFeedbackFromFeedBack">` +
                                commentIcon +
                                approvers[i].feedBack +
                                `</td>
                                        </tr>`);
                        }
                    }
                });
            }

            function loadEstimateApprovers(value) {
                $.ajax({
                    type: "GET",
                    url: "/DraftedBudgeEstimation/GetAllApproverByEstimate?estiId=" + value,
                    data: "{}",
                    success: function (data) {
                        var approvers = data;
                        console.log(approvers);

                        var statusTag = "";
                        for (var i = 0; i < approvers.length; i++) {
                            var expectedDate = "";
                            if (approvers[i].approverRoleId == 3) {
                                statusTag = "<span class='w3-tag w3-purple'>Informed</span>";
                            }
                            if (approvers[i].approverRoleId == 1 || approvers[i].approverRoleId == 2) {
                                if (approvers[i].approverStatus == "2") {
                                    statusTag = "<span class='w3-tag w3-yellow'>Pending</span>";
                                } else if (approvers[i].approverStatus == "100") {
                                    statusTag = "<span class='w3-tag w3-green'>Approved</span>";
                                } else if (approvers[i].approverStatus == "-404") {
                                    statusTag = "<span class='w3-tag w3-deep-orange'>Rollbacked</span>";
                                } else if (approvers[i].approverStatus == "-500") {
                                    statusTag = "<span class='w3-tag w3-red'>Rejected</span>";
                                }

                                var d = new Date(approvers[i].approverPlanDate);
                                expectedDate = d.toDateString();
                            }
                            var indicateApproverLevel = "";

                            if (@user.Id == approvers[i].approverId && @ViewBag.PriorityLevel == approvers[i].approverPriority) {
                                indicateApproverLevel = "coral";
                            }
                            $('#tApproverbody').append(
                                `<tr style="background-color:` +
                                indicateApproverLevel +
                                ` ;">
                                            <td>&nbsp;</td>
                                            <td class="approverName">` +
                                approvers[i].approverFullName +
                                ` ` +
                                statusTag +
                                ` </td>
                                            <td class="approverId" hidden>` +
                                approvers[i].approverId +
                                `</td>
                                            <td class="approverPriority" hidden>` +
                                approvers[i].approverPriority +
                                `</td>
                                            <td class="approverPriorityType" hidden>` +
                                approvers[i].approverRoleId +
                                `</td>
                                            <td class="approverPriorityTypeText">` +
                                approvers[i].approverRoleName +
                                `</td>
                                            <td class="approverDepartment">` +
                                approvers[i].approverDepartment +
                                `</td>
                                            <td class="approverDepartmentId" hidden>` +
                                approvers[i].approverDepartmentId +
                                `</td>
                                            <td class="approverExpectedTime">` +
                                expectedDate +
                                `</td>
                                        </tr>`);
                        }
                    }
                });
            }

            $("#tbody").on('keypress',
                '.onlyNumber',
                function (e) {
                    if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                        return false;
                    }
                });

            //event to remove a row from tbody table
            //$('#tbody').on('click',
            //    '.remove',
            //    function() {

            //        var child = $(this).closest('tr').nextAll();
            //        child.each(function() {

            //            var id = $(this).attr('id');
            //            var idx = $(this).children('.row-index').children('p');
            //            var dig = parseInt(id.substring(1));
            //            idx.html(`Row ${dig - 1}`);
            //            $(this).attr('id', `R${dig - 1}`);
            //        });
            //        $(this).closest('tr').remove();
            //        //rowIdx--;
            //        getSumOfTotalPrice();
            //    });

            //$('#addBtn').on('click',
            //    function() {
            //        $('#tbody').append(`
            //                            <tr id="R${++rowIdx}">
            //                                <td>&nbsp;</td>
            //                                <td>
            //                                    <select class="form-control-sm particularSelectorFromTable autoSuggestionSelect" id="paticularDropdown${rowIdx}" class="particularSelectorFromTable" name="particularSelector"></select>
            //                                </td>
            //                                <td>
            //                                    <select class="form-control-sm itemCategoryDropdownSelector autoSuggestionSelect" id="itemCategoryDropdown${rowIdx}" name="itemCategoryDropdown"></select>
            //                                </td>
            //                                <td>
            //                                    <select class="form-control-sm itemSelectorFromTable autoSuggestionSelect" id="itemDropdown${rowIdx}" name="itemDropdown">
            //                                </td>
            //                                <td>
            //                                    <span id="itemCodeTextId${rowIdx}" style="color:chocolate"></span>
            //                                </td>
            //                                <td>
            //                                    <span id="itemUnitTextId${rowIdx}" style="color:chocolate"></span>
            //                                </td>
            //                                <td>
            //                                    <input type="text" class="form-control-sm findTotalPrice nomuct singleRowFindTotalPrice${rowIdx} numbersOnly" id="NoOfMaUTCaTextId${rowIdx}" style="width:50px" />
            //                                </td>
            //                                <td>
            //                                    <input type="text" class="form-control-sm findTotalPrice nodut singleRowFindTotalPrice${rowIdx} numbersOnly" id="NoOfDTUTextId${rowIdx}" style="width:50px" />
            //                                </td>
            //                                <td>
            //                                    <input type="text" class="form-control-sm findTotalPrice rqt singleRowFindTotalPrice${rowIdx} numbersOnlyAndGreaterThan0" id="requiredQuantityTextId${rowIdx}" style="width:50px" />
            //                                </td>
            //                                <td>
            //                                    <input type="text" class="form-control-sm itemUnitPrice numbersOnly" id="unitPriceTextId${rowIdx}" style="width:100px" />
            //                                </td>
            //                                    <td class="form-control-sm totalPriceColumn" id="TotalPriceTextId${rowIdx}" style="color:chocolate" hidden> 0
            //                                </td>
            //                                <td class="form-control-sm" id="TotalPriceFormateTextId${rowIdx}" style="text-align:right; color:chocolate"> 0</td>
            //                                <td>
            //                                    <select class="form-control-sm departmentSelector autoSuggestionSelect" id="departmentDropdown${rowIdx}" name="demartmentDropdown">
            //                                </td>
            //                                <td>
            //                                    <select class="form-control-sm distSelectorFromTable autoSuggestionSelect" id="districtDropdown${rowIdx}" name="districtDropdown">
            //                                </td>
            //                                <td>
            //                                    <select class="form-control-sm particularTableThana autoSuggestionSelect" id="thanaDropdown${rowIdx}" name="thanaDropdown">
            //                                </td>
            //                                <td>
            //                                    <select class="form-control-sm areaType" id="areaTypeDropdown">
            //                                        <option>Select</option>
            //                                        <option>Metropolitan</option>
            //                                        <option>Urban</option>
            //                                        <option>Rural</option>
            //                                    </select>
            //                                </td>
            //                                <td colspan="2">
            //                                    <input type="text" class="particularTableRemarks">
            //                                </td>
            //                                <td class="text-center">
            //                                    <button class="btn btn-danger remove" type="button"><i class="fa fa-trash" aria-hidden="true"></i></button>
            //                                </td>
            //                            </tr>`);
            //        getParticularsFromDb(rowIdx);
            //        getDepartmentsFrmDb(rowIdx);
            //        getDistrictsFrmDb(rowIdx);

            //        $('.autoSuggestionSelect').css('width', '75%');
            //        $(".autoSuggestionSelect").select2({});
            //    });
            //when particular selector changes
            $('#tbody').on('change',
                '.particularSelectorFromTable',
                function () {
                    let getDomId = $(this).attr('id');
                    var rowTrackId = getDomId.slice(17);
                    var value = $("#paticularDropdown" + rowTrackId).val();
                    getItemCategoryById(value, rowTrackId);
                    //getItemUnitDetails(0, rowTrackId);
                    $('#itemDropdown' + rowTrackId).text("Select");
                    setDefaultDataOnMultipleSpanAndTextBoxOnParticularTable(rowTrackId);
                });

            //when itemCategoryDropdownSelector
            $('#tbody').on('change',
                '.itemCategoryDropdownSelector',
                function () {
                    let getDomId = $(this).attr('id');
                    var rowTrackId = getDomId.slice(20);
                    var value = $("#itemCategoryDropdown" + rowTrackId).val();
                    getItemUnitDetails(value, rowTrackId);
                    setDefaultDataOnMultipleSpanAndTextBoxOnParticularTable(rowTrackId);
                });

            //when Item Selector changes
            $('#tbody').on('change',
                '.itemSelectorFromTable',
                function () {
                    $("#validationMsgOnParticular").hide();
                    let getDomId = $(this).attr('id');
                    var rowTrackId = getDomId.slice(12);
                    var value = $("#itemDropdown" + rowTrackId).val();
                    var flag;
                    for (var i = 0; i < storeItemDetails.length; i++) {
                        if (storeItemDetails[i]['id'] == value) {
                            flag = i;
                            break;
                        }
                    }
                    setValuesOnItemCodeAndItemUnitTextAndUnitPrice(rowTrackId, flag);
                });

            //department selector change
            $('#tbody').on('change',
                '.departmentSelector',
                function () {
                    $("#validationMsgOnDepartment").hide();
                    getDepartmentSummary();
                });

            //when district changes
            $('#tbody').on('change',
                '.distSelectorFromTable',
                function () {

                    var child = $(this).closest('tr').nextAll();
                    var rowTrackId = child.prevObject.attr("id").slice(1);
                    var value = $("#districtDropdown" + rowTrackId).val();
                    getThanaByDistIdFromDB(value, rowTrackId);
                });

            //when thana changes
            $('#tbody').on('change',
                '.particularTableThana',
                function () {
                    $("#validationMsgOnThana").hide();
                });

            //keyup event on findTotalPrice classes
            $('#tbody').on('keyup',
                '.findTotalPrice',
                function () {
                    var child = $(this).closest('tr').nextAll();
                    var rowTrackId = child.prevObject.attr("id").slice(1);
                    calculateTotalPrice(rowTrackId);
                });
            $('#tbody').on('keyup',
                '.itemUnitPrice',
                function () {
                    var child = $(this).closest('tr').nextAll();
                    var rowTrackId = child.prevObject.attr("id").slice(1);
                    calculateTotalPrice(rowTrackId);
                });

            //employee list selector change
            $("#employeeListforApprover").change(function () {
                var selectorID = $("#employeeListforApprover").val();
                for (var x = 0; x < storeUsersWithDepartmentName.length; x++) {
                    if (storeUsersWithDepartmentName[x].userID == selectorID) {
                        $("#userDepartmentID").val(storeUsersWithDepartmentName[x].departmentName);
                        break;
                    }
                }
            });

            function setValuesOnItemCodeAndItemUnitTextAndUnitPrice(rowTrackId, flag) {
                $("#itemCodeTextId" + rowTrackId).html(storeItemDetails[flag]['itemCode']);
                $("#itemUnitTextId" + rowTrackId).html(storeItemDetails[flag]['unitName']);
                $("#unitPriceTextId" + rowTrackId).val(storeItemDetails[flag]['indicatingUnitPrice']);
            }

            function setDefaultDataOnMultipleSpanAndTextBoxOnParticularTable(rowTrackId) {
                $("#itemCodeTextId" + rowTrackId).html(0);
                $("#itemUnitTextId" + rowTrackId).html(0);
                $("#unitPriceTextId" + rowTrackId).val(0);
                $("#TotalPriceTextId" + rowTrackId).text(0);

                $("#NoOfMaUTCaTextId" + rowTrackId).val(0);
                $("#NoOfDTUTextId" + rowTrackId).val(0);
                $("#requiredQuantityTextId" + rowTrackId).val(0);
                getSumOfTotalPrice();
            }

            //calculation of total price
            function calculateTotalPrice(rowTrackId) {
                var multi = 1;
                $(".singleRowFindTotalPrice" + rowTrackId).each(function () {
                    if (!isNaN(this.value) && this.value.length != 0 && this.value != 0) {
                        multi = multi * parseFloat(this.value);
                    }
                });
                multi = multi * $("#unitPriceTextId" + rowTrackId).val();
                $("#TotalPriceTextId" + rowTrackId).text(multi.toFixed(2));
                var formatter = new Intl.NumberFormat('en-IN');
                $("#TotalPriceFormateTextId" + rowTrackId).text(formatter.format(multi.toFixed(2)));
                getSumOfTotalPrice();
            }

            //get sumation of total price
            function getSumOfTotalPrice() {
                var sum = 0;
                $('.particularItemsAndDetailsTable tr').each(function (a, b) {

                    var totalPrice = $('.totalPriceColumn', b).text();
                    if (!isNaN(totalPrice) && totalPrice.length != 0) {
                        sum += parseFloat(totalPrice);
                    }
                });

                $("#sumOfTotalPrice").text(sum.toFixed(2));
                var formatter = new Intl.NumberFormat('en-IN',
                    {
                        style: 'currency',
                        currency: 'BDT'
                    });
                $('#sumOfTotalPriceShow').text(formatter.format(sum.toFixed(2)));
                getParticularSummary();
                getDepartmentSummary();
            }

            //....................... Particular Summary
            //................................
            //.... getting Particular summary
            function getParticularSummary() {

                var particularTableArray = [];
                $('.particularItemsAndDetailsTable tr').each(function (a, b) {
                    var particularName = $('.particularSelectorFromTable', b).find(":selected").text();
                    var particularId = $('.particularSelectorFromTable', b).find(":selected").val()
                    var totalPrice = $('.totalPriceColumn', b).text();
                    if (particularId == "-1") {
                        console.log("not selected");
                    } else {
                        if (particularName.length > 0) {
                            particularTableArray.push({
                                ParticularName: particularName,
                                ParticularId: particularId,
                                TotalPrice: totalPrice
                            });
                        }
                    }
                });

                var result = [];
                particularTableArray.reduce(function (res, value) {
                    if (!res[value.ParticularName]) {
                        res[value.ParticularName] = {
                            TotalPrice: 0,
                            ParticularId: value.ParticularId,
                            ParticularName: value.ParticularName
                        };
                        result.push(res[value.ParticularName])
                    }
                    res[value.ParticularName].TotalPrice = parseFloat(value.TotalPrice) + parseFloat(res[value.ParticularName].TotalPrice);
                    return res;
                },
                    {});

                removeTableRows();
                var rowParticularSummaryTableIndex = 1;
                for (var x = 0; x < result.length; x++) {
                    addingRowInParticularSummaryTable(rowParticularSummaryTableIndex,
                        result[x].ParticularName,
                        result[x].ParticularId,
                        result[x].TotalPrice.toFixed(2));
                    rowParticularSummaryTableIndex++;
                }
            }

            //adding a row in Particular summary table
            function addingRowInParticularSummaryTable(rowParticularSummaryTableIndex, name, particularId, value) {
                var formatter = new Intl.NumberFormat('en-IN',
                    {
                        style: 'currency',
                        currency: 'BDT'
                    });
                $('#tPartiSummarybody').append(
                    `<tr class="deletedParticularRow" id="RowParticularSummary${rowParticularSummaryTableIndex}">
                                <td lass="text-left">
                                    <span id="nameParticularId${rowParticularSummaryTableIndex}" style="color:chocolate">` +
                    name +
                    `</span>
                                <td id="idParticularId${rowParticularSummaryTableIndex}" hidden>` +
                    particularId +
                    `</td>
                                </td>
                                <td class="text-right">
                                    <span id="totalPriceParticularId${rowParticularSummaryTableIndex}" style="color:chocolate" hidden>` +
                    value +
                    `</span>
                                    <span style="color:chocolate">` +
                    formatter.format(value) +
                    `</span>
                                </td>
                            </tr>`
                );
            }

            function removeTableRows() {
                $('.deletedParticularRow').remove();
            }

            //...................... DeartmentWisye Summary
            //.................................
            //.... getting Department summary
            function getDepartmentSummary() {
                var departmentTableArray = [];
                $('.particularItemsAndDetailsTable tr').each(function (a, b) {
                    var department = $('.departmentSelector', b).find(":selected").text();
                    var departmentId = $('.departmentSelector', b).find(":selected").val()
                    var totalPrice = $('.totalPriceColumn', b).text();
                    if (departmentId == "-1") {
                        console.log("not selected");
                    } else {
                        var totalPrice = $('.totalPriceColumn', b).text();
                        if (department.length > 0) {
                            departmentTableArray.push({
                                DepartmentName: department,
                                DepartmentID: departmentId,
                                TotalPrice: totalPrice
                            });
                        }
                    }
                });

                var result = [];
                departmentTableArray.reduce(function (res, value) {
                    if (!res[value.DepartmentName]) {
                        res[value.DepartmentName] = {
                            TotalPrice: 0,
                            DepartmentID: value.DepartmentID,
                            DepartmentName: value.DepartmentName
                        };
                        result.push(res[value.DepartmentName])
                    }
                    res[value.DepartmentName].TotalPrice = parseFloat(value.TotalPrice) + parseFloat(res[value.DepartmentName].TotalPrice);
                    return res;
                },
                    {});
                //adding row from result data
                removeDepartmentWiseSummmaryTableRows();
                var rowDepartmentWiseSummaryTableIndex = 1;
                for (var x = 0; x < result.length; x++) {
                    addingRowInDepartmentSummaryTable(rowDepartmentWiseSummaryTableIndex, result[x].DepartmentName, result[x].DepartmentID, result[x].TotalPrice.toFixed(2));
                    rowDepartmentWiseSummaryTableIndex++;
                }
            }

            //adding a row in Department summary table
            function addingRowInDepartmentSummaryTable(rowDepartmentWiseSummaryTableIndex, name, deptId, value) {
                var formatter = new Intl.NumberFormat('en-IN',
                    {
                        style: 'currency',
                        currency: 'BDT'
                    });
                $('#tDepartSummarybody').append(
                    `<tr class="deletedDepartmentRow" id="RowParticularSummary${rowDepartmentWiseSummaryTableIndex}">
                                <td lass="text-left">
                                    <span id="nameDepartmentId${rowDepartmentWiseSummaryTableIndex}"
                                        class="departmentWiserSummaryDepartmentColumn"
                                        style="color:chocolate">` +
                    name +
                    `</span>
                                </td>
                                <td id="idDepartmentId${rowDepartmentWiseSummaryTableIndex}" class="approverId" hidden>` +
                    deptId +
                    `</td>
                                <td class="text-right">
                                    <span id="totalPriceDepartmentId${rowDepartmentWiseSummaryTableIndex}"
                                        class="departmentWiserSummaryTablePriceColumn" style="color:chocolate" hidden>` +
                    value +
                    `</span>
                                    <span style="color:chocolate">` +
                    formatter.format(value) +
                    `</span>
                                </td>
                            </tr>`
                );
            }

            function removeDepartmentWiseSummmaryTableRows() {
                $('.deletedDepartmentRow').remove();
            }

            function Response(estimation, estimateApproverList, estimateDetails, departmentWiseSummaryList, particularWiseSummaryList, procurementApprovalRequest) {
                this.estimation = estimation;
                this.estimateApproverList = estimateApproverList;
                this.estimateDetails = estimateDetails;
                this.departmentWiseSummary = departmentWiseSummaryList;
                this.particularWiseSummary = particularWiseSummaryList;
                this.procurementApprovalRequest = procurementApprovalRequest;
            }

            function validationCheck() {
                var response = true;
                var estimateType = $("#approvalForDropDown").children("option:selected").val();
                var subject = $("#subjectTextId").val();
                var objective = $("#objectiveTextId").val();
                var details = $("#textEditorEstimation").val();
                var planStartDate = $("#datetimepickerEstimationStartDate").val();
                var planEndDate = $("#datetimepickerEstimationEndDate").val();

                showErrorMessageBelowCtrl('approvalForDropDown', 'please select approval for option', false);
                showErrorMessageBelowCtrl('subjectTextId', 'please add subject', false);
                showErrorMessageBelowCtrl('datetimepickerEstimationStartDate', 'please select start date', false);
                showErrorMessageBelowCtrl('datetimepickerEstimationEndDate', 'please select end date', false);

                if (estimateType.length <= 0) {
                    showErrorMessageBelowCtrl('approvalForDropDown', 'please select approval for option', true);
                    response = false;
                    $('html, body').animate({
                        scrollTop: $("#approvalForDropDown").offset().top
                    },
                        800);
                } else {
                    showErrorMessageBelowCtrl('approvalForDropDown', 'please select approval for option', false);
                }

                if (subject.length <= 0) {
                    showErrorMessageBelowCtrl('subjectTextId', 'please add subject', true);
                    response = false;
                    $('html, body').animate({
                        scrollTop: $("#subjectTextId").offset().top
                    },
                        800);
                } else {
                    showErrorMessageBelowCtrl('subjectTextId', 'please add subject', false);
                }

                if (planStartDate.length <= 0) {
                    showErrorMessageBelowCtrl('datetimepickerEstimationStartDate', 'please select start date', true);
                    response = false;
                    $('html, body').animate({
                        scrollTop: $("#datetimepickerEstimationStartDate").offset().top
                    },
                        800);
                } else {
                    showErrorMessageBelowCtrl('datetimepickerEstimationStartDate', 'please select start date', false);
                }

                if (planEndDate.length <= 0) {
                    showErrorMessageBelowCtrl('datetimepickerEstimationEndDate', 'please select end date', true);
                    response = false;
                    $('html, body').animate({
                        scrollTop: $("#datetimepickerEstimationEndDate").offset().top
                    },
                        800);
                } else {
                    showErrorMessageBelowCtrl('datetimepickerEstimationEndDate', 'please select end date', false);
                }

                if ($("#datetimepickerEstimationStartDate").val() > $("#datetimepickerEstimationEndDate").val()) {
                    showErrorMessageBelowCtrl('datetimepickerEstimationEndDate', 'End Date should be set after Start Date.', true);
                    response = false;
                    $('html, body').animate({
                        scrollTop: $("#datetimepickerEstimationEndDate").offset().top
                    },
                        800);
                } else {
                    showErrorMessageBelowCtrl('datetimepickerEstimationEndDate', 'please select end date', false);
                }

                let estimateTypeValue = $("#approvalForDropDown").children("option:selected").val()
                let estimateTypeTxt = $("#approvalForDropDown").children("option:selected").text()

                // procurement approval validation
                if ((estimateTypeValue == '7' && estimateTypeTxt == "PROCUREMENT APPROVAL") || (estimateTypeValue == '8' && estimateTypeTxt == "Factsheet")) {
                    var pAReferenceNo = $("#paReferenceNumberTextId").val();
                    var titleOfPRorRFQ = $("#titleOfPRorRFQTextId").val();
                    var rFQReferenceNo = $("#RFQReferNoTextId").val();
                    var pRReferenceNo = $("#PRReferenceNoTextId").val();
                    var nameOfRequester = $("#nameAndCellRequesterTextId").val();
                    var departmentId = $("#deptOrDivTextId").val();
                    var rFQProcess = $("#RFQProcessTextId").val();
                    var sourcingMethod = $("#sourcingMethodTextId").val();
                    var nameOfRecommendedSupplier = $("#nameSupplierTextId").val();
                    var purchaseValue = $("#purchaseValueTextId").val();
                    var savingAmount = $("#savingAmountTextId").val();
                    var savingType = $("#savingTypeDropDown").val();

                    showErrorMessageBelowCtrl('paReferenceNumberTextId', 'please add PA Reference', false);
                    showErrorMessageBelowCtrl('titleOfPRorRFQTextId', 'please add Title of PR or RFQ', false);
                    showErrorMessageBelowCtrl('RFQReferNoTextId', 'please add RFQ Reference Number', false);
                    showErrorMessageBelowCtrl('PRReferenceNoTextId', 'please add PR Reference Number', false);
                    showErrorMessageBelowCtrl('nameAndCellRequesterTextId', 'please add Name of the Requester', false);
                    showErrorMessageBelowCtrl('deptOrDivTextId', 'please add Department', false);
                    showErrorMessageBelowCtrl('RFQProcessTextId', 'please add RFQ Process', false);
                    showErrorMessageBelowCtrl('sourcingMethodTextId', 'please add Sourcing method', false);
                    showErrorMessageBelowCtrl('nameSupplierTextId', 'please add name of the Supplier', false);
                    showErrorMessageBelowCtrl('purchaseValueTextId', 'please add Purchase value', false);
                    showErrorMessageBelowCtrl('savingAmountTextId', 'please add saving amount', false);
                    showErrorMessageBelowCtrl('savingTypeDropDown', 'please add saving type', false);

                    if (pAReferenceNo.length <= 0) {
                        showErrorMessageBelowCtrl('paReferenceNumberTextId', 'please add PA Reference', true);
                        response = false;
                        $('html, body').animate({
                            scrollTop: $("#paReferenceNumberTextId").offset().top
                        },
                            800);
                    } else {
                        showErrorMessageBelowCtrl('paReferenceNumberTextId', 'please add PA Reference', false);
                    }

                    if (titleOfPRorRFQ.length <= 0) {
                        showErrorMessageBelowCtrl('titleOfPRorRFQTextId', 'please add Title of PR or RFQ', true);
                        response = false;
                        $('html, body').animate({
                            scrollTop: $("#titleOfPRorRFQTextId").offset().top
                        },
                            800);
                    } else {
                        showErrorMessageBelowCtrl('titleOfPRorRFQTextId', 'please add Title of PR or RFQ', false);
                    }

                    if (rFQReferenceNo.length <= 0) {
                        showErrorMessageBelowCtrl('RFQReferNoTextId', 'please add RFQ Reference Number', true);
                        response = false;
                        $('html, body').animate({
                            scrollTop: $("#RFQReferNoTextId").offset().top
                        },
                            800);
                    } else {
                        showErrorMessageBelowCtrl('RFQReferNoTextId', 'please add RFQ Reference Number', false);
                    }

                    if (pRReferenceNo.length <= 0) {
                        showErrorMessageBelowCtrl('PRReferenceNoTextId', 'please add PR Reference Number', true);
                        response = false;
                        $('html, body').animate({
                            scrollTop: $("#PRReferenceNoTextId").offset().top
                        },
                            800);
                    } else {
                        showErrorMessageBelowCtrl('PRReferenceNoTextId', 'please add PR Reference Number', false);
                    }

                    if (nameOfRequester.length <= 0) {
                        showErrorMessageBelowCtrl('nameAndCellRequesterTextId', 'please add Name of the Requester', true);
                        response = false;
                        $('html, body').animate({
                            scrollTop: $("#nameAndCellRequesterTextId").offset().top
                        },
                            800);
                    } else {
                        showErrorMessageBelowCtrl('nameAndCellRequesterTextId', 'please add Name of the Requester', false);
                    }

                    if (departmentId <= 0) {
                        showErrorMessageBelowCtrl('deptOrDivTextId', 'please add Department', true);
                        response = false;
                        $('html, body').animate({
                            scrollTop: $("#deptOrDivTextId").offset().top
                        },
                            800);
                    } else {
                        showErrorMessageBelowCtrl('deptOrDivTextId', 'please add Department', false);
                    }

                    if (rFQProcess.length <= 0) {
                        showErrorMessageBelowCtrl('RFQProcessTextId', 'please add RFQ Process', true);
                        response = false;
                        $('html, body').animate({
                            scrollTop: $("#RFQProcessTextId").offset().top
                        },
                            800);
                    } else {
                        showErrorMessageBelowCtrl('RFQProcessTextId', 'please add RFQ Process', false);
                    }

                    if (sourcingMethod.length <= 0) {
                        showErrorMessageBelowCtrl('sourcingMethodTextId', 'please add Sourcing method', true);
                        response = false;
                        $('html, body').animate({
                            scrollTop: $("#sourcingMethodTextId").offset().top
                        },
                            800);
                    } else {
                        showErrorMessageBelowCtrl('sourcingMethodTextId', 'please add Sourcing method', false);
                    }

                    if (nameOfRecommendedSupplier.length <= 0) {
                        showErrorMessageBelowCtrl('nameSupplierTextId', 'please add name of the Supplier', true);
                        response = false;
                        $('html, body').animate({
                            scrollTop: $("#nameSupplierTextId").offset().top
                        },
                            800);
                    } else {
                        showErrorMessageBelowCtrl('nameSupplierTextId', 'please add name of the Supplier', false);
                    }

                    if (purchaseValue.length <= 0) {
                        showErrorMessageBelowCtrl('purchaseValueTextId', 'please add Purchase value', true);
                        response = false;
                        $('html, body').animate({
                            scrollTop: $("#purchaseValueTextId").offset().top
                        },
                            800);
                    } else {
                        showErrorMessageBelowCtrl('purchaseValueTextId', 'please add Purchase value', false);
                    }

                    if (savingAmount.length <= 0) {
                        showErrorMessageBelowCtrl('savingAmountTextId', 'please add saving amount', true);
                        response = false;
                        $('html, body').animate({
                            scrollTop: $("#savingAmountTextId").offset().top
                        },
                            800);
                    } else {
                        showErrorMessageBelowCtrl('savingAmountTextId', 'please add saving amount', false);
                    }

                    if (savingType.length <= 0) {
                        showErrorMessageBelowCtrl('savingTypeDropDown', 'please add saving type', true);
                        response = false;
                        $('html, body').animate({
                            scrollTop: $("#savingTypeDropDown").offset().top
                        },
                            800);
                    } else {
                        showErrorMessageBelowCtrl('savingTypeDropDown', 'please add saving type', false);
                    }
                }

                return response;
            }

            $(document).on("click",
                "#appbtn",
                function () {
                    $('#appbtn').attr('disabled', 'disabled');
                    var id = $('#estimateId').val();
                    var remarks = $('#approved_remarks').val();

                    if (@user.CanEdit > 0) {
                        var estimation = {};
                        var procurementApprovalRequest = {};
                        var estimateDetailsList = [];
                        var departmentWiseSummaryList = [];
                        var particularWiseSummaryList = [];
                        $('.particularItemsAndDetailsTable tr').each(function (a, b) {
                            var itemId = $('.itemSelectorFromTable', b).find(":selected").val();
                            var deptId = $('.departmentSelector', b).find(":selected").val();
                            var thanaId = $('.particularTableThana', b).find(":selected").val();
                            if ($('.itemSelectorFromTable', b).val() == null) {
                                console.log("Undefined");
                            } else {
                                if (itemId == "-1" || typeof itemId === 'undefined') {
                                    console.log("Item is not selected on " + a + " row in Particular Item Table.");
                                    $("#validationMsgOnParticular").show();
                                    $("#validationMsgOnParticular").text("Item is not selected on row :" + a);
                                    validFlag = -1;
                                    $('html, body').animate({
                                        scrollTop: $("#validationMsgOnParticular").offset().top
                                    },
                                        800);
                                } else {
                                    if (deptId == "-1" || typeof deptId === 'undefined') {
                                        console.log("Department is not selected on " + a + " row in Particular Item Table.");
                                        $("#validationMsgOnDepartment").show();
                                        $("#validationMsgOnDepartment").text("Select Department on row :" + a);
                                        validFlag = -1;
                                        $('html, body').animate({
                                            scrollTop: $("#validationMsgOnDepartment").offset().top
                                        },
                                            800);
                                    } else {
                                        if (thanaId == "-1" || typeof thanaId === 'undefined') {
                                            console.log("Thana is not selected on " + a + " row in Particular Item Table.");
                                            $("#validationMsgOnThana").show();
                                            $("#validationMsgOnThana").text("Select Thana on row :" + a);
                                            validFlag = -1;
                                            $('html, body').animate({
                                                scrollTop: $("#validationMsgOnThana").offset().top
                                            },
                                                800);
                                        } else {
                                            estimateDetailsList.push({
                                                item_Id: $('.itemSelectorFromTable', b).val(),
                                                noOfMachineAndUsagesAndTeamAndCar: $('.nomuct', b).val(),
                                                noOfDayAndTotalUnit: $('.nodut', b).val(),
                                                quantityRequired: $('.rqt', b).val(),
                                                unitPrice: $('.itemUnitPrice', b).val(),
                                                totalPrice: $('.totalPriceColumn', b).text(),
                                                responsibleDepartment_Id: $('.departmentSelector', b).find(":selected").val(),
                                                thana_Id: $('.particularTableThana', b).find(":selected").val(),
                                                areaType: $('.areaType', b).find(":selected").val(),
                                                remarks: $('.particularTableRemarks', b).val()
                                            });

                                        }
                                    }
                                }
                            }
                        });

                        var departmentSummaryTableRows = $('#TableDepartmentWishSummary tr').length;
                        $('#TableDepartmentWishSummary tr').each(function (a, b) {
                            if (a > 0 && a < departmentSummaryTableRows) {
                                if ($('#idDepartmentId' + a).text() == "-1") {
                                    console.log("skip");
                                } else {
                                    departmentWiseSummaryList.push({
                                        department_Id: parseInt($('#idDepartmentId' + a).text()),
                                        totalPrice: $('#totalPriceDepartmentId' + a).text()
                                    });
                                }
                            }
                        });

                        var particularSummaryTableRows = $('#TableParticularWishSummary tr').length;
                        $('#TableParticularWishSummary tr').each(function (a, b) {
                            if (a > 0 && a < particularSummaryTableRows) {
                                if ($('#idParticularId' + a).text() == "-1") {
                                    console.log("skip");
                                } else {
                                    particularWiseSummaryList.push({
                                        particular_Id: parseInt($('#idParticularId' + a).text()),
                                        totalPrice: $('#totalPriceParticularId' + a).text()
                                    });
                                }
                            }
                        });

                        var tvalue = parseFloat($("#sumOfTotalPrice").text());
                        if (isNaN(tvalue)) {
                            tvalue = 0
                        }

                        estimation = {
                            id: $('#estimateId').val(),
                            estimateType: $("#approvalForDropDown").children("option:selected").val(),
                            subject: $("#subjectTextId").val(),
                            objective: $("#objectiveTextId").val(),
                            details: $("#textEditorEstimation").val(),
                            planStartDate: $("#datetimepickerEstimationStartDate").val(),
                            planEndDate: $("#datetimepickerEstimationEndDate").val(),
                            previousEstimateId: $('#LinkEstimateSubjectListForDropDown').find(":selected").val(),
                            totalPrice: tvalue
                        };

                        //Procurement Approval
                        let estimateTypeValue = $("#approvalForDropDown").children("option:selected").val()
                        let estimateTypeTxt = $("#approvalForDropDown").children("option:selected").text()

                        if ((estimateTypeValue == '7' && estimateTypeTxt == "PROCUREMENT APPROVAL") || (estimateTypeValue == '8' && estimateTypeTxt == "Factsheet")) {
                            procurementApprovalRequest = {
                                pAReferenceNo: $("#paReferenceNumberTextId").val(),
                                titleOfPRorRFQ: $("#titleOfPRorRFQTextId").val(),
                                rFQReferenceNo: $("#RFQReferNoTextId").val(),
                                pRReferenceNo: $("#PRReferenceNoTextId").val(),
                                nameOfRequester: $("#nameAndCellRequesterTextId").val(),
                                departmentId: $("#deptOrDivTextId").val(),
                                rFQProcess: $("#RFQProcessTextId").val(),
                                sourcingMethod: $("#sourcingMethodTextId").val(),
                                nameOfRecommendedSupplier: $("#nameSupplierTextId").val(),
                                purchaseValue: $("#purchaseValueTextId").val(),
                                savingAmount: $("#savingAmountTextId").val(),
                                savingType: $("#savingTypeDropDown").val()
                            };
                        }
                        var data = new Response(estimation, [], estimateDetailsList, departmentWiseSummaryList, particularWiseSummaryList, procurementApprovalRequest);
                        console.log(data);
                        var dataJson = JSON.stringify(data);
                        var postData = {
                            "requestDto": dataJson
                        };
                        console.log(postData);

                        $.ajax({
                            type: "POST",
                            traditional: true,
                            async: false,
                            cache: false,
                            url: "/BudgetApprover/ReRegisterParticularItemByEstimate",
                            context: document.body,
                            data: postData,
                            beforeSend: function () {
                                $.blockUI({
                                    timeout: 0,
                                    message: 'Processing..'
                                });
                            },
                            success: function (response) {
                                if (parseInt(response) > 0) {
                                    //Callback
                                    $.ajax({
                                        url: "/BudgetApprover/Edit",
                                        type: "POST",
                                        data: { id: id, feedback: '100', remarks: remarks },
                                        beforeSend: function () {
                                            $.blockUI({
                                                timeout: 0,
                                                message: 'Processing..'
                                            });
                                        },
                                        success: function (response) {
                                            if (parseInt(response) > 0) {
                                                $.unblockUI();
                                                alertify.alert('SUCCESS', 'Feedback Successfully Submitted!', function () { window.location = "/BudgetApprover/Index"; });
                                            } else {
                                                alertify.alert(response, function () { window.location = "/BudgetApprover/Index"; });
                                            }
                                        },
                                        complete: function () {
                                            $.unblockUI();
                                        },
                                        error: function (data) {
                                            $.unblockUI();
                                        }
                                    });
                                    $.unblockUI();
                                    console.log("success");
                                } else {
                                    alertify.alert('ERROR', 'Something went wrong! please try again.');
                                }
                            },
                            complete: function () {
                                $.unblockUI();
                            },
                            error: function (data) {
                                $.unblockUI();
                            }
                        });
                    } else {
                        $.ajax({
                            url: "/BudgetApprover/Edit",
                            type: "POST",
                            data: { id: id, feedback: '100', remarks: remarks },
                            beforeSend: function () {
                                $.blockUI({
                                    timeout: 0,
                                    message: 'Processing..'
                                });
                            },
                            success: function (response) {
                                if (parseInt(response) > 0) {
                                    $.unblockUI();
                                    alertify.alert('SUCCESS', 'Feedback Successfully Submitted!', function () { window.location = "/BudgetApprover/Index"; });
                                } else {
                                    alertify.alert(response, function () { window.location = "/BudgetApprover/Index"; });
                                }
                            },
                            complete: function () {
                                $.unblockUI();
                            },
                            error: function (data) {
                                $.unblockUI();
                            }
                        });
                    }
                });

            $(document).on("click",
                "#rollBackbtn",
                function () {
                    alertify.confirm('Approval Rejection',
                        'Do you want to roll back this approval?',
                        function () {
                            $('#appbtn').attr('disabled', 'disabled');
                            var id = $('#estimateId').val();
                            var remarks = $('#approved_remarks').val();
                            console.log(remarks);
                            $.ajax({
                                url: "/BudgetApprover/Edit",
                                type: "POST",
                                data: { id: id, feedback: '-404', remarks: remarks },
                                beforeSend: function () {
                                    $.blockUI({
                                        timeout: 0,
                                        message: '<h1> Processing...</h1>'
                                    });
                                },
                                success: function (response) {
                                    if (parseInt(response) > 0) {
                                        $.unblockUI();
                                        alertify.alert('SUCCESS', 'Approval request has been rollbacked!', function () { window.location = "/BudgetApprover/Index"; });
                                    } else {
                                        alertify.alert('Something went wrong! please try again.');
                                    }
                                },
                                complete: function () {
                                    $.unblockUI();
                                },
                                error: function (data) {
                                    $.unblockUI();
                                }
                            });
                        },
                        function () {
                            alertify.error('Cancelled')
                        });
                });


            $(document).on("click",
                "#finalApproverBtn",
                function () {
                    alertify.confirm('Final Approval',
                        'Do you want really want to finally  approved this budget without MD sir Approval ?',
                        function () {
                            $('#finalApproverBtn').attr('disabled', 'disabled');
                            var id = $('#estimateId').val();
                            var remarks = $('#approved_remarks').val();
                            console.log(remarks);
                            $.ajax({
                                url: "/BudgetApprover/FinalRecomendorFeedback",
                                type: "POST",
                                data: { id: id, feedback: '100', remarks: remarks },
                                beforeSend: function () {
                                    $.blockUI({
                                        timeout: 0,
                                        message: '<h1> Processing...</h1>'
                                    });
                                },
                                success: function (response) {
                                    if (parseInt(response) > 0) {
                                        $.unblockUI();
                                        alertify.alert('SUCCESS', 'Successfully Approved the budget as a Final Approver!', function () { window.location = "/BudgetApprover/Index"; });
                                    } else {
                                        alertify.alert('Something went wrong! please try again.');
                                    }
                                },
                                complete: function () {
                                    $.unblockUI();
                                },
                                error: function (data) {
                                    $.unblockUI();
                                }
                            });
                        },
                        function () {
                            alertify.error('Cancelled')
                        });
                });

            $(document).on("click",
                "#rejbtn",
                function () {
                    alertify.confirm('Approval Rejection',
                        'Do you want to reject this approval?',
                        function () {
                            $('#appbtn').attr('disabled', 'disabled');
                            var id = $('#estimateId').val();
                            var remarks = $('#approved_remarks').val();
                            $.ajax({
                                url: "/BudgetApprover/Edit",
                                type: "POST",
                                data: { id: id, feedback: '-500', remarks: remarks },
                                beforeSend: function () {
                                    $.blockUI({
                                        timeout: 0,
                                        message: '<h1> Processing...</h1>'
                                    });
                                },
                                success: function (response) {
                                    if (parseInt(response) > 0) {
                                        $.unblockUI();
                                        alertify.alert('SUCCESS', 'Approval request has been rejected!', function () { window.location = "/BudgetApprover/Index"; });
                                    } else {
                                        alertify.alert('Something went wrong! please try again.');
                                    }
                                },
                                complete: function () {
                                    $.unblockUI();
                                },
                                error: function (data) {
                                    $.unblockUI();
                                }
                            });
                        },
                        function () {
                            alertify.error('Cancelled')
                        });
                });

            function getParticularsInitially(parameter, partiId) {
                $.ajax({
                    type: "GET",
                    url: "/Particular/GetParticulars",
                    data: "{}",
                    success: function (data) {
                        var particulars = data.particulars;
                        for (var i = 0; i < particulars.length; i++) {
                            if (particulars[i].id == partiId)
                                continue;
                            var o = new Option(particulars[i].name, particulars[i].id);
                            $(o).html(particulars[i].name);
                            $("#paticularDropdown" + parameter).append(o);
                        }
                    }
                });
            }

            function getItemCategoryInitially(value, rowTrack, selectedValue) {
                var selectedID = 0;
                $.ajax({
                    type: "GET",
                    url: "/ItemCategory/GetAllItemCategoriesBYparticularId?particularId=" + value,
                    data: "{}",
                    success: function (data) {
                        var itemsCategories = data.itemCategories;
                        for (var i = 0; i < itemsCategories.length; i++) {
                            if (itemsCategories[i].name == selectedValue) {
                                selectedID = itemsCategories[i].id;
                                continue;
                            }
                            var o = new Option(itemsCategories[i].name, itemsCategories[i].id);
                            $(o).html(itemsCategories[i].name);
                            $("#itemCategoryDropdown" + rowTrack).append(o);
                        }
                    }
                });
                return selectedID;
            }

            function getItemUnitDetailsInitially(value, rowTrack, selectedValue) {
                $.ajax({
                    type: "GET",
                    url: "/Item/GetItemUnitDetails?itemCategoryId=" + value,
                    data: "{}",
                    success: function (data) {
                        var items = data.itemUnitModel;
                        storeItemDetails = items;
                        for (var i = 0; i < items.length; i++) {

                            if (items[i].id == selectedValue) {
                                continue;
                            }
                            var o = new Option(items[i].name, items[i].id);
                            $(o).html(items[i].name);
                            $("#itemDropdown" + rowTrack).append(o);
                        }
                    }
                });

            }



            function getCurrencyTypeFromDbBasedOnEstimationTypeAndDropdownName(dropdownName, estimationType) {

                var data = { "dropdownName": dropdownName, "estimateType": estimationType };
                $("#currencyTypeDropDown").html("");

                $.ajax({
                    type: "GET",
                    url: "/EstimateType/GetAllDropdownItemByDropdownNameAndEstimateType",
                    data: data,
                    success: function (data) {
                        console.log('Currency type dropdown ==============================');
                        console.log(data);
                        var currencyType = data;
                        for (var i = 0; i < currencyType.length; i++) {
                            if (Number(currencyType[i].isDefaultSelected) == 1) {
                                console.log('select dropdown');
                                var o = new Option(currencyType[i].name, currencyType[i].value, true, true);
                            } else {
                                var o = new Option(currencyType[i].name, currencyType[i].value);
                            }

                            $(o).html(currencyType[i].name);
                            $("#currencyTypeDropDown").append(o);
                        }
                    }
                });
            }
            function DoubleScroll(element) {
                var scrollbar = document.createElement('div');
                scrollbar.appendChild(document.createElement('div'));
                scrollbar.style.overflow = 'auto';
                scrollbar.style.overflowY = 'hidden';
                scrollbar.firstChild.style.width = element.scrollWidth + 'px';
                scrollbar.firstChild.style.paddingTop = '1px';
                scrollbar.firstChild.appendChild(document.createTextNode('\xA0'));
                scrollbar.onscroll = function () {
                    element.scrollLeft = scrollbar.scrollLeft;
                };
                element.onscroll = function () {
                    scrollbar.scrollLeft = element.scrollLeft;
                };
                element.parentNode.insertBefore(scrollbar, element);
            }

            DoubleScroll(document.getElementById('doublescroll'));
        });
    </script>
}


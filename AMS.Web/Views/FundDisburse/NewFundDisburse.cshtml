@model AMS.Models.ServiceModels.BudgetEstimate.SingleEstimationWithTypeResponse
@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
@using AMS.Models.DomainModels
@inject AMS.Services.Managers.Contracts.ISessionManager _sessionManager
@{
    UserEntity? user = await _sessionManager.GetUser();
}
<style>
    select, option {
        width: 200px;
    }

    #TableAprroverList tbody {
        counter-reset: serial-number;
    }

        #TableAprroverList tbody td:first-child:before {
            counter-increment: serial-number;
            content: counter(serial-number);
        }

    #TableAprroverFeedBackList tbody {
        counter-reset: serial-number;
    }

        #TableAprroverFeedBackList tbody td:first-child:before {
            counter-increment: serial-number;
            content: counter(serial-number);
        }

    #particularItemsDetails tbody {
        counter-reset: serial-number;
    }

        #particularItemsDetails tbody td:first-child:before {
            counter-increment: serial-number;
            content: counter(serial-number);
        }

    [data-toggle="collapse"] .fa:before {
        content: "\f13a";
       /* content: "\002B";*/
        
        color: orangered;
        font-size : 25px;
    }

    [data-toggle="collapse"].collapsed .fa:before {
        
        content: "\f139";
        color: green;
        font-size: 25px;
    }
</style>

<div class="hiddenElements">
    <input id="estimateId"
           type="hidden"
           value="@Model.Estimation.EstimateId" />
</div>
<div class="container-fluid">
    
<div class="card border-secondary mb-4">
    <div class="card-header">
        @{
            var fundRequisitionId =  ViewBag.fundRequisition.FundRequisitionId;
        }
        <b>View Estimate Budget</b>
        <input id="fundRequisitionId"
               type="hidden"
               value="@fundRequisitionId" />
        @*<a id="btnDownloadExcelReport"
           style="margin-left: 5px;"
           href="/ReportGenarator/SingleEstimateReport?id=@Model.Estimation.EstimateId"
           class="btn btn-info float-right">
            <span class="icon text-gray-100">
                <i class="fas fa-file-excel"></i>
            </span>
        </a>

        <a id="btnDownloadPdfReport" href="/ReportGenarator/SinglePdfEstimateReport?id=@Model.Estimation.EstimateId" class="btn btn-info float-right">
            <span class="icon text-gray-100">
                <i class="fas fa-file-pdf"></i>
            </span>
        </a>*@
    </div>
    <div class="card-body">
        <div class="container-fluid">
            <div class="form-group required row">
                <label for="approvalForDropDown" class="col-sm-2 col-form-label-sm control-label">Approval For</label>
                <div class="col-sm-4">
                    <select class="form-control" aria-label=".form-select-sm example" id="approvalForDropDown" disabled>
                        <option value="@Model.Estimation.EstimationTypeId" selected>@Model.Estimation.EstimationTypeName</option>
                    </select>
                </div>
            </div>
            <div class="form-group required row">
                <label for="IdentificationTextId" class="col-sm-2 col-form-label-sm control-label">Idenfication</label>
                <div class="col-sm-4">
                    <input type="text" class="form-control" id="IdentificationTextId" value="@Model.Estimation.EstimationIdentifier" disabled />
                </div>
            </div>
            <div class="form-group required row">
                <label for="subjectTextId" class="col-sm-2 col-form-label-sm control-label">Subject</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" id="subjectTextId" disabled />
                </div>
            </div>

        </div>
    </div>
</div>


        <div class="card secondary mb-4 procurementApprovalDiv">
            <div class="card-header"><b>Background</b></div>
            <div class="card-body">
                <div class="container-fluid">
                    <div class="form-group required row">
                        <label for="paReferenceNumberTextId" class="col-sm-2 col-form-label-sm control-label">PA. Reference No.</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="paReferenceNumberTextId" disabled />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="titleOfPRorRFQTextId" class="col-sm-2 col-form-label-sm control-label">Title of the PR/RFQ</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="titleOfPRorRFQTextId" disabled />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="RFQReferNoTextId" class="col-sm-2 col-form-label-sm control-label">RFQ Reference No.</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="RFQReferNoTextId" disabled />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="PRReferenceNoTextId" class="col-sm-2 col-form-label-sm control-label">PR Reference No.</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="PRReferenceNoTextId" disabled />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="NameAndCellRequesterTextId" class="col-sm-2 col-form-label-sm control-label">Name and Cell No. of Requester</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="nameAndCellRequesterTextId" disabled />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="deptOrDivTextId" class="col-sm-2 col-form-label-sm control-label">Department/Division</label>
                        <div class="col-sm-10">
                            @*<input type="text" class="form-control" id="" required />*@
                            <select class="form-control" aria-label=".form-select-sm" id="deptOrDivTextId" disabled>
                                <option value="-1" selected>Select</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="RFQProcessTextId" class="col-sm-2 col-form-label-sm control-label">RFQ Process</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="RFQProcessTextId" disabled />
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="sourcingMethodTextId" class="col-sm-2 col-form-label-sm control-label">Sourcing Method</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="sourcingMethodTextId" disabled />
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card secondary mb-4 procurementApprovalDiv">
            <div class="card-header"><b>Award Recommandation</b></div>
            <div class="card-body">
                <div class="container-fluid">
                    <div class="form-group required row">
                        <label for="nameSupplierTextId" class="col-sm-2 col-form-label-sm control-label">Name of the Recommended Supplied</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="nameSupplierTextId" disabled />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="purchaseValueTextId" class="col-sm-2 col-form-label-sm">Purchase Value</label>
                        <div class="col-sm-10">
                            <textarea class="form-control" id="purchaseValueTextId" style="height:200px;" aria-label="With textarea" disabled></textarea>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="savingAmountTextId" class="col-sm-2 col-form-label-sm">Saving Amount</label>
                        <div class="col-sm-10">
                            <textarea class="form-control" id="savingAmountTextId" style="height:200px;" aria-label="With textarea" disabled></textarea>
                        </div>
                    </div>
                    <div class="form-group required row">
                        <label for="savingTypeDropDown" class="col-sm-2 col-form-label-sm control-label">Saving Type</label>
                        <div class="col-sm-4">
                            <select class="form-control" aria-label=".form-select-sm example" id="savingTypeDropDown" disabled>
                                <option value="None">Select</option>
                                <option value="CostAvoidance">Cost Avoidance</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card border-secondary mb-4">
            <div class="card-header "  data-toggle="collapse" href="#budgetDiscription"><b>Budget Descriptions<i class="fa"></i></b></div>
            <div class="collapse" id="budgetDiscription">
                <div class="card-body">
                    <div class="container-fluid">
                        <div class="form-group row">
                            <label for="objectiveTextId" class="col-sm-2 col-form-label-sm">Objective</label>
                            <div class="col-sm-10">
                                <textarea class="form-control" id="objectiveTextId" aria-label="With textarea" style="height:200px;" disabled>@Model.Estimation.EstimationObjective</textarea>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="textEditorEstimation" class="col-sm-2 col-form-label-sm">Details</label>
                            <div class="col-sm-10">
                                <textarea id="textEditorEstimation" name="detailsData" disabled>@Model.Estimation.EstimationDetails</textarea>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-2 col-form-label-sm">Plan Date</label>
                            <div class="col-sm-4">
                                <label for="datetimepickerEstimationStartDate" class="col-form-label-sm control-label">Start</label>
                                <input readonly="readonly" @*type="datetime-local"*@ id="datetimepickerEstimationStartDate" class="form-control datepicker" disabled />
                            </div>
                            <div class="col-sm-4">
                                <label for="datetimepickerEstimationEndDate" class="col-form-label-sm control-label">End</label>
                                <input readonly="readonly" @*type="datetime-local"*@ id="datetimepickerEstimationEndDate" class="form-control datepicker" disabled />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="estimationfiles" class="col-sm-2 col-form-label-sm">Attachments</label>
                            <div class="col-sm-4">
                                <table class="table table-sm">
                                    <tr id="attachmentsTable"></tr>
                                </table>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="creatortext" class="col-sm-2 col-form-label-sm control-label">Created By</label>
                            <div class="col-sm-4">
                                <input type="text" class="form-control" id="creatortext" value="@Model.Estimation.CreateorFullName" disabled />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="creationDateTxt" class="col-sm-2 col-form-label-sm control-label">Creation Time</label>
                            <div class="col-sm-4">
                                <input type="text" class="form-control" id="creationDateTxt" value="@Model.Estimation.CreatedDate.ToString("f")" disabled />
                            </div>
                        </div>
                        <div class="form-group row" id="totalPriceDiv">
                            <label for="totalPriceText" class="col-sm-2 col-form-label-sm control-label">Total Price</label>
                            <div class="col-sm-4">
                                <input type="text" class="form-control numbersOnly" id="totalPriceText" value="@Model.Estimation.EstimaionTotalPrice" disabled />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card border-secondary mb-4" id="AddParticularSection">
            <div class="card-header" data-toggle="collapse" href="#particularItemDetails"><b>Particular Items and Details</b> <i class="fa"></i></div>
            <div class="collapse" id="particularItemDetails">
                <div class="card-body">
                    <div id="AddParticularSection">
                        <div class="container-fluid">
                            <div class="table-responsive" id="particularItemTableId">
                                <table class="table table-responsive-md table-hover table-bordered particularItemsAndDetailsTable" id="particularItemsDetails">
                                    <thead style="position: sticky;top: 0" class="thead-dark">
                                        <tr>
                                            <th class="header" scope="col">#</th>
                                            <th class="header" scope="col">Particular@*<hr />Item Category<hr />Item*@</th>
                                            @*<th scope="col" style="width:200px">Item Category</th>
                                    <th scope="col" style="width:200px">Item</th>*@
                                            <th class="header" scope="col">Item Description@*<hr />Unit*@</th>
                                            @*<th scope="col">Unit</th>*@
                                            <th class="header" scope="col">Quantity@*No. Of Machine/ Usages/Team/Car<hr />No. Of Day/ Total Unit<hr />Required Quantity*@</th>
                                            @*<th scope="col">No. Of Day /Total Unit</th>
                                    <th scope="col">Required Quantity</th>*@
                                            <th class="header" scope="col">Unit Price</th>
                                            <th class="header" scope="col">Total Price (TK.)</th>
                                            <th class="header" scope="col">Department</th>
                                            <th class="header" scope="col">Location@*District<hr />Thana<hr />Area Type*@</th>
                                            @*<th scope="col">Thana</th>
                                    <th scope="col">Area Type</th>*@
                                            <th class="header" scope="col">Remarks</th>
                                        </tr>
                                    </thead>
                                    <tbody id="tbody" style="text-align:left">
                                    </tbody>
                                    <tfoot align="right">
                                        <tr>
                                            @*<td colspan="4"><span id="validationMsgOnParticular" style="color:red"></span></td>*@
                                            <td id="sumOfTotalPrice" hidden>@Model.Estimation.EstimaionTotalPrice</td>
                                            <td colspan="6" style="font-weight:bold;" id="sumOfTotalPriceShow"></td>
                                            <td><span id="validationMsgOnDepartment" style="color:red"></span></td>
                                            <td colspan="2"><span id="validationMsgOnThana" style="color:red"></span></td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>
                        <div class="container-fluid">
                            <button class="btn btn-md btn-primary" id="addBtn" type="button"><i class="fa fa-plus" aria-hidden="true"></i></button>
                        </div>
                        <br />
                        <div class="container-fluid">
                            <div class="card border-secondary mb-4">
                                <div class="card-header"><b>Budget Summary View</b></div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-sm">
                                            <h6 style="text-align: center;">Department Wise Summary</h6>
                                            <div class="table-responsive">
                                                <table class="table table-sm table-hover table-bordered departmentWiseSummaryTable"
                                                       id="TableDepartmentWishSummary" style="float:left">
                                                    <thead class="thead-dark">
                                                        <tr>
                                                            <th class="text-left" scope="col">Departments</th>
                                                            <th class="text-right" scope="col">Total Price (TK.)</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="tDepartSummarybody" style="text-align:left">
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="col-sm">
                                            <h6 style="text-align: center;">Particular Wise Summary</h6>
                                            <div class="table-responsive">
                                                <table class="table table-sm table-hover table-bordered particularWiseSummaryTable"
                                                       id="TableParticularWishSummary" style="float:left">
                                                    <thead class="thead-dark">
                                                        <tr>
                                                            <th class="text-left" scope="col">Particulars</th>
                                                            <th class="text-right" scope="col">Total Price (TK.)</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="tPartiSummarybody" style="text-align:left">
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        
        <div class="card border-secondary mb-4">
            <div class="card-header">
                <b>Fund Requistion History & Summary </b>
            </div>
            <div class="card-body">
                <div class="card border-secondary mb-4" id="fundRequistionDisburseHistory">
                    <div class="card-header">
                        <b>Own Department Fund Requistion History </b>
                    </div>
                    <div class="card-body">
                        <div class="container-fluid">
                            <span id="app_err-container"></span>
                            <div class="table-responsive">
                                <table class="table table-sm table-hover table-bordered" id="TableFundRequistionHistory">
                                    <thead class="thead-dark">
                                        <tr>
                                            <th>#</th>
                                            <th class="text-center" scope="col">Req. Sl</th>
                                            <th class="text-center" scope="col">Department</th>
                                            <th class="text-center" scope="col">Fund Type</th>
                                            <th class="text-center" scope="col"> Date</th>
                                            <th class="text-center" scope="col">Amount</th>
                                            <th class="text-center" scope="col">Disburse Sl</th>
                                            <th class="text-center" scope="col">Date</th>
                                            <th class="text-center" scope="col">Amount</th>
                                        </tr>
                                    </thead>
                                    <tbody id="TableBodyFundRequistionHistory" style="text-align: left">
                                    </tbody>
                                    <tfoot align="right">
                                        <tr>
                                            <td colspan="5">
                                                <b>Total Requisition:</b>
                                            </td>
                                            <td id="totalRequisitionT"></td>
                                            <td colspan="2">
                                                <b>Total Disburse : </b>
                                            </td>
                                            <td id="totalDisburseT"></td>

                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card border-secondary mb-4" id="fundRequistionDisburseHistoryOfOtherDepartment">
                    <div class="card-header">
                        <b>Other Department Fund Requistion History  </b>
                    </div>
                    <div class="card-body">
                        <div class="container-fluid">
                            <span id="app_err-container"></span>
                            <div class="table-responsive">
                                <table class="table table-sm table-hover table-bordered" id="TableOtherDepartmentFundRequistionHistory">
                                    <thead class="thead-dark">
                                        <tr>
                                            <th>#</th>
                                            <th class="text-center" scope="col">Req. Sl</th>
                                            <th class="text-center" scope="col">Department</th>
                                            <th class="text-center" scope="col">Fund Type</th>
                                            <th class="text-center" scope="col"> Date</th>
                                            <th class="text-center" scope="col">Amount</th>
                                            <th class="text-center" scope="col">Disburse Sl</th>
                                            <th class="text-center" scope="col">Date</th>
                                            <th class="text-center" scope="col">Amount</th>
                                        </tr>
                                    </thead>
                                    <tbody id="TableBodyOtherDepartmentFundRequistionHistory" style="text-align: left">
                                    </tbody>
                                    <tfoot align="right">
                                        <tr>
                                            <td colspan="5">
                                                <b>Total Requisition:</b>
                                            </td>
                                            <td id="otherDepartmentTotalRequisitionT"></td>
                                            <td colspan="2">
                                                <b>Total Disburse : </b>
                                            </td>
                                            <td id="otherDepartmentTotalDisburseT"></td>

                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

<div class="card secondary mb-4">
        <div class="card-header" data-toggle="collapse" href="#fundRequisitionHistory"><b>Fund Requistion History <i class="fa"></i> </b></div>
        <div class="card-body collapse" id="fundRequisitionHistory" >
            <div class="container-fluid">

                <div class="form-group  row" id="">
                    <label for="requisitionAmount" class="col-sm-2 col-form-label-sm control-label">Requisition Amount </label>
                    <div class="col-sm-4">
                        <input type="text" readonly="readonly" class="form-control numbersOnly"  value="@ViewBag.fundRequisition.Amount"/>
                    </div>
                    <label for="newAmount" class="col-sm-2 col-form-label-sm ">Proposed Disburse Date</label>
                    <div class="col-sm-4">
                        <input type="text" value="@ViewBag.fundRequisition.ProposedDisburseDate" readonly="readonly" class="form-control numbersOnly" id=""  />
                    </div>

                </div>
                <div class="form-group  row">
                    <label for="objectiveTextId" class="col-sm-2 col-form-label-sm control-label">Allowable Budget</label>
                    <div class="col-sm-4">
                        <input type="text" value="@ViewBag.fundRequisition.AllowableBudget" readonly="readonly" class="form-control numbersOnly" id=""  />
                    </div>
                    <label for="newAmount" class="col-sm-2 col-form-label-sm control-label">Requisition Type</label>
                    <div class="col-sm-4" id="requisitionTypeDiv">
                        @if (ViewBag.fundRequisition.RequisitionType.ToString() == "Fund")
                        {
                            <label class="btn btn-success" title="">
                                <input type="radio" readonly="readonly" class="btn btn-default" name="role"  checked/>&nbsp;&nbsp;Fund
                            </label>
                            <label class="btn btn-secondary" title="">
                                <input type="radio" readonly="readonly" class="btn btn-default" name="role" disabled/>&nbsp;&nbsp;Payment
                            </label>
                        }
                        else
                        {
                            <label class="btn btn-secondary" >
                                <input type="radio" readonly="readonly" class="btn btn-default" name="role" disabled  />&nbsp;&nbsp;Fund
                            </label>
                            <label class="btn btn-primary">
                                <input type="radio" readonly="readonly" class="btn btn-default" name="role" checked />&nbsp;&nbsp;Payment
                            </label>
                        }
                        
                    </div>
                  
                </div>
             
                <div class="form-group  row" id="">
                    <label for="requisitionAmount" class="col-sm-2 col-form-label-sm control-label">All Fund/ Payment Requested </label>
                    <div class="col-sm-4">
                        <input type="text" readonly="readonly" class="form-control numbersOnly"   value="@ViewBag.fundRequisition.FundRequested"/>
                    </div>
                    <label for="newAmount" class="col-sm-2 col-form-label-sm ">Departmental Fund/Payment Requested</label>
                   
                    <div class="col-sm-4">
                        <input type="text" value="@ViewBag.fundRequisition.DepartmentalFundRequested" readonly="readonly" class="form-control numbersOnly" id=""  />
                    </div>

                </div>
               
                <div class="form-group  row" id="">
                    <label for="requisitionAmount" class="col-sm-2 col-form-label-sm control-label">Remaining Budget </label>
                    <div class="col-sm-4">
                        <input type="text" readonly="readonly" class="form-control numbersOnly" id="newAmount"  value="@ViewBag.fundRequisition.RemainingBudget"/>
                    </div>
                   
                    <label for="newAmount" class="col-sm-2 col-form-label-sm ">Already Disburse Amount</label>
                    <div class="col-sm-4">
                        <input type="text" value="@ViewBag.fundRequisition.AlreadyDisburseAmount" readonly="readonly" class="form-control numbersOnly" id=""  />
                    </div>
                    @{
                        var a = false;
                    }
                </div>
               
                <div class="form-group row">
                    <label for="detailsId" class="col-sm-2 col-form-label-sm"> Fund Requisition Remarks</label>
                    <div class="col-sm-10">
                        <p>
                            @Html.Raw( @ViewBag.fundRequisition.Remarks)
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>

<form id="fundDisburseForm">
    <div class="card secondary mb-4">
        <div class="card-header"><b>Fund Disburse</b></div>
        <div class="card-body">
            <div class="container-fluid">
                @{
                    var remainingDisburseAmount = @ViewBag.fundRequisition.Amount - @ViewBag.fundRequisition.AlreadyDisburseAmount;
                }
                <div class="form-group required row" id="totalPriceDiv">
                    <label for="newDisburseAmount" class="col-sm-2 col-form-label-sm control-label">New Disburse Amount</label>
                    @if (@ViewBag.fundRequisition.RequisitionType == "Payment")
                    {
                        <div class="col-sm-4">
                            <input type="text" readonly="readonly" value="@remainingDisburseAmount" class="form-control numbersOnly" id="newDisburseAmount" required />
                        </div>
                    }
                    else
                    {
                        <div class="col-sm-4">
                            <input type="text" class="form-control numbersOnly" id="newDisburseAmount" required />
                        </div>
                    }
                    
                    <label for="newAmount" class="col-sm-2 col-form-label-sm ">Remaining  Disburse Amount</label>
                    <div class="col-sm-4">
                        
                        <input type="text" value="@remainingDisburseAmount " id="remainingDisburseAmount" readonly="readonly" class="form-control numbersOnly" id=""/>
                    </div>

                </div>
                <div class="form-group required row">
                    <label for="objectiveTextId" class="col-sm-2 col-form-label-sm control-label">Fund Available Date</label>
                    <div class="col-sm-4">
                        <input id="fundAvailableDate" class="form-control datepicker" required />
                    </div>
                    @*<label for="newAmount" class="col-sm-2 col-form-label-sm control-label">Requisition Type</label>
                    <div class="col-sm-4" id="requisitionTypeDiv">
                       
                        <label class="btn btn-success" title="Will be pending to Recommendation end for input. Will go to next after recommendation input.">
                            <input type="radio" class="btn btn-default" name="role" value="1" checked />&nbsp;&nbsp;Fund
                        </label>
                        <label class="btn btn-primary" title="Will be pending to Recommendation end for input. This will be the last stage of the workflow. Only one person can be final approver.">
                            <input type="radio" class="btn btn-default" name="role" value="2" />&nbsp;&nbsp;Payment
                        </label>
                    </div>*@
                  
                </div>
                
                <div class="form-group row">
                    <label for="detailsId" class="col-sm-2 col-form-label-sm">Remarks</label>
                    <div class="col-sm-10">
                        <textarea id="fundDisburseRemarksRichText" style="height:300px;" name="fundDisburseRemarks"></textarea>
                    </div>
                </div>

            <div class="form-group row" style="align-content:center">
                <div class="col-sm-4"></div>
                <div class="col-sm-8 ">
                    <button type="button" id="submitFundDisburse" class="btn btn-info btn-lg">
                        @*<i class="fa fa-eye" aria-hidden="true"></i>*@ Submit
                    </button>
                    @*<button id="draftBudgeEstimation" class="btn btn-primary btn-lg" type="button">
                        <i class="fa fa-file" aria-hidden="true"></i> Draft
                    </button>*@
                    @Html.Hidden("RedirectToAllDraft", Url.Action("Index", "DraftedBudgeEstimation"))
                    <button id="clearbtn" class="btn btn-warning btn-lg" type="button">
                        <i class="fa fa-ban" aria-hidden="true"></i> Clear Form
                    </button>
                    
                @if (@ViewBag.fundRequisition.AlreadyDisburseAmount == 0)
                {
                    <button id="rejectButton" class="btn btn-danger btn-lg" type="button">
                        <i class="fa fa-ban" aria-hidden="true"></i> Reject
                    </button>
                }
                </div>
            </div>
              
                
            </div>
        </div>
    </div>
</form>
   
</div>


@section Scripts{
    <script src="~/js/AjaxCall/GetDataFromDbForBudetEstimationPage.js"></script>
    <script>

        $('.datepicker').datepicker({
            format: 'mm/dd/yyyy',
            autoclose: true
        });

        $('.datepicker').datepicker()
            .on('changeDate', function (e) {
                showErrorMessageBelowCtrl('datetimepickerEstimationStartDate', 'please select start date', false);
                showErrorMessageBelowCtrl('datetimepickerEstimationEndDate', 'please select end date', false);

                var planStartDate = $("#datetimepickerEstimationStartDate").val();
                var planEndDate = $("#datetimepickerEstimationEndDate").val();

                if (planStartDate.length <= 0) {
                    showErrorMessageBelowCtrl('datetimepickerEstimationStartDate', 'please select start date', true);
                }
                else {
                    showErrorMessageBelowCtrl('datetimepickerEstimationStartDate', 'please select start date', false);
                }

                if (planEndDate.length <= 0) {
                    showErrorMessageBelowCtrl('datetimepickerEstimationEndDate', 'please select end date', true);
                }
                else {
                    showErrorMessageBelowCtrl('datetimepickerEstimationEndDate', 'please select end date', false);
                }
            });

        $(":input").on("keyup change",
            function(e) {
                showErrorMessageBelowCtrl('fundAvailableDate', 'please set Fund avaialable  date', false);
                showErrorMessageBelowCtrl('fundDisburseRemarksRichText', 'please input remarks field', false);
                showErrorMessageBelowCtrl('newDisburseAmount', 'please input remarks field', false);
            });

        var rowIdx = 0;
        var storeItemDetails;
        var storeUsersWithDepartmentName;
        var tableOpen = 1;
        var formData;
        $(document).ready(function () {

            $(document).on('click', '#clearbtn', function () {
                console.log('hh');
                $("#form")[0].reset();
            });

            $('.procurementApprovalDiv').hide();
            $("#totalPriceDiv").hide();
            $("#addBtn").hide();

            //rich text editor configuration
            $('#textEditorEstimation').summernote({
                placeholder: 'Estimation Details',
                tabsize: 2,
                height: 300,
                toolbar: [
                    ['style', ['style']],
                    ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']],
                    ['fontname', ['fontname']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ol', 'ul', 'paragraph', 'height']],
                    ['table', ['table']],
                    ['insert', ['link', 'picture', 'video']],
                    ['view', ['undo', 'redo', 'fullscreen', 'codeview', 'help']]
                ]
            });



            $('#textEditorEstimation').summernote('disable');
            getParticularsFromDb(0);
            getDepartmentsForDropDownFrmDb();

            var estimationId = $("#estimateId").val();
            var selectValue = $("#approvalForDropDown").val();

            var formatter = new Intl.NumberFormat('en-IN', {
                style: 'currency',
                currency: 'BDT'
            });

            var totalPriceWithoutItemTable = $('#totalPriceText').val();
            var formatedtotalPriceWithoutItemTable = formatter.format(totalPriceWithoutItemTable);
            $('#totalPriceText').val(formatedtotalPriceWithoutItemTable);

            var totalPrice = $('#sumOfTotalPrice').text();
            var formatedtotalPrice = formatter.format(totalPrice);
            $('#sumOfTotalPriceShow').text(formatedtotalPrice);

            getUserDept();
            loadEstimation(estimationId);
            loadAttachments(estimationId);
            if (selectValue == 7) {
                $('.procurementApprovalDiv').show();
                loadProcurementApprovalEstimate(estimationId);
            }
            loadEstimationDetails(estimationId);
            //loadEstimateApprovers(estimationId);
            loadSummariesOfThisEstimation(estimationId);
            //loadEstimateApproverRemarkList(estimationId);
            loadFundRequistionHistoryByEstimateId(estimationId);
            loadFundRequistionHistoryOfOtherDepartmentByEstimateId(estimationId);

            function getUserDept() {
                var sessionUserDept = {};
                $.ajax({
                    type: "POST",
                    url: "/User/GetUserByUserId",
                    data: "{}",
                    success: function (data) {
                        var sessionUserDept = data;
                        console.log(sessionUserDept.isCRA);
                        ;
                    }
                });
                return sessionUserDept.isCRA;

            }
            function loadEstimation(value) {
                $.ajax({
                    type: "GET",
                    url: "/Estimation/GetEstimationInfobyId?estimationId=" + value,
                    data: "{}",
                    success: function (data) {
                        var estimation = data.estimation;
                        $("#subjectTextId").val(estimation.estimationSubject);
                        $("#datetimepickerEstimationEndDate").val(estimation.estimationPlanEndDate.slice(0, 10));
                        $("#datetimepickerEstimationStartDate").val(estimation.estimationPlanStartDate.slice(0, 10));
                    }
                });
            }
            function loadProcurementApprovalEstimate(value) {
                $.ajax({
                    type: "GET",
                    url: "/Estimation/GetProcurementApprovalEstimationInfobyEstimateId?estimationId=" + value,
                    data: "{}",
                    success: function (data) {
                        console.log(data);
                        
                        $("#paReferenceNumberTextId").val(data.paReferenceNo);
                        $("#titleOfPRorRFQTextId").val(data.titleOfPRorRFQ);
                        $("#RFQReferNoTextId").val(data.rfqReferenceNo);
                        $("#PRReferenceNoTextId").val(data.prReferenceNo);
                        $("#nameAndCellRequesterTextId").val(data.nameOfRequester);
                        //$('#deptOrDivTextId option[value=' + data.departmentId + ']').attr('selected', 'selected');
                        $('#deptOrDivTextId').val(data.departmentId);
                        $("#RFQProcessTextId").val(data.rfqProcess);
                        $("#sourcingMethodTextId").val(data.sourcingMethod);
                        $("#nameSupplierTextId").val(data.nameOfRecommendedSupplier);
                        $("#purchaseValueTextId").val(data.purchaseValue);
                        $("#savingAmountTextId").val(data.savingAmount);
                        //$('#savingTypeDropDown option[value=' + data.savingType + ']').attr('selected', 'selected');
                        $("#savingTypeDropDown option").filter(function () {
                            return $(this).text() == data.savingType;
                        }).prop('selected', true);
                    }
                });
            }
            function loadAttachments(value) {
                $.ajax({
                    type: "GET",
                    url: "/BudgetEstimation/LoadEstimateAttachmentsByEstimateId?estimateId=" + value,
                    data: "{}",
                    success: function (data) {
                        let attachment = data;
                        for (var i = 0; i < attachment.length; i++) {
                            var str = attachment[i].url;

                            let index = str.indexOf('\\uploadedFiles\\NewFolder');
                            var res = str.substring(index);
                            console.log(res);

                            $('#attachmentsTable').append(
                                `<td><a href="` + res + `" download>` + attachment[i].fileName + `</a></td>`
                            );
                        }
                    }
                });
            }
            function loadEstimationDetails(value) {
                var formatter = new Intl.NumberFormat('en-IN');
                $.ajax({
                    type: "GET",
                    url: "/DraftedBudgeEstimation/GetAllEstimationDetailsByEstimate?estiId=" + value,
                    data: "{}",
                    success: function (data) {
                        var details = data;
                        if (details.length < 1) {
                            console.log("No Items");
                            $("#AddParticularSection").hide();
                            $("#totalPriceDiv").show(0);
                            tableOpen = 0;
                        }
                        else {
                            for (var i = 0; i < details.length; i++) {
                                var deptId = details[i].departmentId;
                                var deptName = details[i].departmentName;
                                var formatedPrice = formatter.format(details[i].totalPrice);

                                $('#tbody').append(`<tr id="R${++rowIdx}">
                                        <td>&nbsp;</td>
                                        <td width="50%">
                                            Particular :` + details[i].particular + `
                                            <hr />Item Category: `+ details[i].itemCategory + ` 
                                            <hr />Item: <span style="color:blue;font-weight:bold">` + details[i].itemName + `</span>
                                        </td>    
                                        <td>Item Code: ` + details[i].itemCode + `
                                            <hr />Item Unit: ` + details[i].itemUnit + `
                                        </td>                                     
                                        <td>
                                            No.Of Mach./Usages/ Team/Car:<input type="text" class="findTotalPrice nomuct singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                id="NoOfMaUTCaTextId${rowIdx}" name="indexMAU"
                                                    value="` + details[i].noOfMachineAndUsagesAndTeamAndCar + `" disabled /> <hr />
                                            No.Of Day/ Total Unit:<input type="text" class="onlyNumber findTotalPrice nodut singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                id="NoOfDTUTextId${rowIdx}" value="` + details[i].noOfDayAndTotalUnit + `" disabled /> <hr />
                                            Req.Quantity: <input type="text" class="onlyNumber findTotalPrice rqt singleRowFindTotalPrice${rowIdx}" style="width:50px"
                                                id="requiredQuantityTextId${rowIdx}" value="` + details[i].quantityRequired + `" disabled /> <hr />
                                        </td>
                                        <td><input type="text" class="form-control-sm itemUnitPrice numbersOnly" id="unitPriceTextId${rowIdx}" value="` + details[i].unitPrice + `" style="width:100px" disabled /></td>
                                        <td class="form-control-sm totalPriceColumn" id="TotalPriceTextId${rowIdx}" style="color:chocolate" hidden>` + details[i].totalPrice + `</td>
                                        <td class="form-control-sm" id="TotalPriceFormateTextId${rowIdx}" style="text-align:right; color:chocolate">` + formatedPrice + `</td>
                                        <td>` + deptName + `</td>
                                        <td>District: `+ details[i].districtName + ` <hr />
                                            Thana: ` + details[i].thanaName + ` <hr />
                                            Area Type: ` + details[i].areaType + `
                                        </td>
                                        <td colspan="2">
                                            <span>` + details[i].remarks + `</span>
                                        </td>
                                    </tr>`);
                            }
                        }
                        
                    }
                });
            }
            function loadEstimateApprovers(value) {
                
                $.ajax({
                    type: "GET",
                    url: "/DraftedBudgeEstimation/GetAllApproverByEstimate?estiId=" + value,
                    data: "{}",
                    success: function (data) {
                        var approvers = data;
                        console.log(approvers);

                        var statusTag = "";
                        for (var i = 0; i < approvers.length; i++) {
                            var expectedDate = "";

                            if (approvers[i].approverRoleId == 1 || approvers[i].approverRoleId == 2) {
                                if (approvers[i].approverStatus == "2") {
                                    statusTag = "<span class='w3-tag w3-yellow'>Pending</span>";
                                }
                                else if (approvers[i].approverStatus == "100") {
                                    statusTag = "<span class='w3-tag w3-green'>Approved</span>";
                                }
                                else if (approvers[i].approverStatus == "-404") {
                                    statusTag = "<span class='w3-tag w3-deep-orange'>Rollbacked</span>";
                                }
                                else if (approvers[i].approverStatus == "-500") {
                                    statusTag = "<span class='w3-tag w3-red'>Rejected</span>";
                                }
                                var d = new Date(approvers[i].approverPlanDate);
                                expectedDate = d.toDateString();
                            }
                            $('#tApproverbody').append(
                                `<tr>
                                    <td>&nbsp;</td>
                                    <td class="approverName">` + approvers[i].approverFullName + ` ` + statusTag +` </td>
                                    <td class="approverId" hidden>` + approvers[i].approverId + `</td>
                                    <td class="approverPriority" hidden>` + approvers[i].approverPriority + `</td>
                                    <td class="approverPriorityType" hidden>` + approvers[i].approverRoleId + `</td>
                                    <td class="approverPriorityTypeText">` + approvers[i].approverRoleName + `</td>
                                    <td class="approverDepartment">` + approvers[i].approverDepartment + `</td>
                                    <td class="approverDepartmentId" hidden>` + approvers[i].approverDepartmentId + `</td>
                                    <td class="approverExpectedTime">`+ expectedDate + `</td>
                                </tr>`);
                        }
                    }
                });
            }
            function loadSummariesOfThisEstimation(value) {
                var formatter = new Intl.NumberFormat('en-IN', {
                    style: 'currency',
                    currency: 'BDT'
                });
                
                $.ajax({
                    type: "GET",
                    url: "/DepartmentWiseSummaryOfBudgetEstimation/LoadDepartmentWiseSummaryDetailsByEstimationId?estimationId=" + value,
                    data: "{}",
                    success: function (data) {
                        var deptSummary = data;
                        console.log(deptSummary);
                        let rowDepartmentWiseSummaryTableIndex = 1;
                        for (var i = 0; i < deptSummary.length; i++) {
                            $('#tDepartSummarybody').append(
                                `<tr class="deletedDepartmentRow" id="RowDepartmentSummary${rowDepartmentWiseSummaryTableIndex}">
                                    <td lass="text-left">
                                        <span id="nameDepartmentId${rowDepartmentWiseSummaryTableIndex}"
                                            class="departmentWiserSummaryDepartmentColumn"
                                            style="color:chocolate">` + deptSummary[i].departmentName + `</span>
                                    </td>
                                    <td id="idDepartmentId${rowDepartmentWiseSummaryTableIndex}" class="departmentSummaryDeptId" hidden>` + deptSummary[i].departmentId + `</td>
                                    <td class="text-right">
                                        <span id="totalPriceDepartmentId${rowDepartmentWiseSummaryTableIndex}"
                                            class="departmentWiserSummaryTablePriceColumn" hidden>` + deptSummary[i].price + `</span>
                                        <span style="color:chocolate">` + formatter.format(deptSummary[i].price) + `</span>
                                    </td>
                                </tr>`
                            );
                            rowDepartmentWiseSummaryTableIndex++
                        }
                    }
                });
                $.ajax({
                    type: "GET",
                    url: "/ParticularWiseSummary/GetParticularSummaryDetails?estimationId=" + value,
                    data: "{}",
                    success: function (data) {
                        let partiSummary = data;
                        let rowParticularWiseSummaryTableIndex = 1;
                        for (var i = 0; i < partiSummary.length; i++) {
                            $('#tPartiSummarybody').append(
                                `<tr class="deletedParticularRow" id="RowParticularSummary${rowParticularWiseSummaryTableIndex}">
                                    <td lass="text-left">
                                        <span id="nameParticularId${rowParticularWiseSummaryTableIndex}"
                                            style="color:chocolate">` + partiSummary[i].particularName + `</span>
                                    <td id="idParticularId${rowParticularWiseSummaryTableIndex}" class="particularSummarypartiId" hidden>` + partiSummary[i].particularId + `</td>
                                    </td>
                                    <td class="text-right">
                                        <span id="totalPriceParticularId${rowParticularWiseSummaryTableIndex}" hidden>` + partiSummary[i].price + `</span>
                                        <span style="color:chocolate">` + formatter.format(partiSummary[i].price) + `</span>
                                    </td>
                                </tr>`
                            );
                            rowParticularWiseSummaryTableIndex++;
                        }
                    }
                });
            }
            function loadEstimateApproverRemarkList(value) {
                $.ajax({
                    type: "GET",
                    url: "/BudgetApprover/GetApproverRemarkList?estimationId=" + value,
                    data: "{}",
                    success: function (data) {
                        var approvers = data;
                        var commentIcon = '<i class="fa fa-quote-left fa-2x fa-pull-left" aria-hidden="true"></i>';
                        console.log(approvers);
                        if (approvers < 1) {
                            $("#divApproverRemarksList").hide();
                        }
                        for (var i = 0; i < approvers.length; i++) {
                            var d = new Date(approvers[i].feedBackDate);
                            if (approvers[i].estimateStatus == "-500") {
                                statusTag = "<span class='w3-tag w3-red'>Rejected</span>";
                            }
                            else if (approvers[i].estimateStatus == "100") {
                                statusTag = "<span class='w3-tag w3-green'>Approved</span>";
                            }
                            else if (approvers[i].estimateStatus == "-404") {
                                statusTag = "<span class='w3-tag w3-deep-orange'>Rollbacked</span>";
                            }
                            if (approvers[i].feedBack == null)
                                approvers[i].feedBack = 'N/A';
                            $('#tApproverRemarksbody').append(
                                `<tr>
                                    <td>&nbsp;</td>
                                    <td class="approverNameFromFeedBack">` + approvers[i].approverFullName +` </td>
                                    <td>`+ statusTag  +`</td>
                                    <td class="approverApprovalDate">`+ d.toDateString() + ` ` + d.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true }) + `</td>
                                    <td class="approverFeedbackFromFeedBack">` + commentIcon + approvers[i].feedBack + `</td>
                                </tr>`);
                        }
                    }
                });
            }

        });

      /* ================================================ New Fund Disburtion Script Start==================================================*/
        //rich text editor configuration
        $('#fundDisburseRemarksRichText').summernote({
            placeholder: 'Fund Disburse Remarks',
            tabsize: 2,
            height: 300,
            toolbar: [
                ['style', ['style']],
                ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']],
                ['fontname', ['fontname']],
                ['fontsize', ['fontsize']],
                ['color', ['color']],
                ['para', ['ol', 'ul', 'paragraph', 'height']],
                ['table', ['table']],
                ['insert', ['link', 'picture', 'video']],
                ['view', ['undo', 'redo', 'fullscreen', 'codeview', 'help']]
            ]
        });

        //Preview submit
        $("#submitFundDisburse").click(function () {

            

            var result = validationCheck();
            console.log(result);
            if (result == false) { return; }
            console.log('SUmmit commmunication .....');

            //var data = ConstructResponseObject();
            //if (data == false)
            //    return;

            var selectedRequisitionType = $("#requisitionTypeDiv input[type='radio']:checked").val();

       
            console.log(selectedRequisitionType);


            fundDisburse = {
                DisburseAmount : $("#newDisburseAmount").val(),
                RemarksByFinance : $("#fundDisburseRemarksRichText").val(),
                FundAvailableDate : $("#fundAvailableDate").val(),
                FundRequisitionId :$("#fundRequisitionId").val()
              
            };


            var fundRequistionAttachment = [];

            formData = new FormData();
            //for (var i = 0; i < filelist.length; i++) {
            //    if (jQuery.isEmptyObject(filelist[i])) {
            //        console.log("skip");
            //        continue;
            //    }
            //    formData.append(filelist[i].name, filelist[i]);
            //}
            fundRequistionAttachment = formData;

            fundDisubrseDataPostToServer(fundDisburse, fundRequistionAttachment);
        });


        $(document).on("click", "#rejectButton", function () {
            alertify.confirm('Fund Requisition Rejection', 'Do you want to really Reject this Fund Requistion?', function (){
                        
                    $('#rejectButton').attr('disabled', 'disabled');

                    fundDisburse = {
                        DisburseAmount : $("#newDisburseAmount").val(),
                        RemarksByFinance : $("#fundDisburseRemarksRichText").val(),
                        FundAvailableDate : $("#fundAvailableDate").val(),
                        FundRequisitionId :$("#fundRequisitionId").val()
              
                    };


                    $.ajax({
                        url: "/FundRequisition/RejectFundRequisition",
                        type: "POST",
                        data: { fundRequistionId: $("#fundRequisitionId").val(),  remarks: $("#fundDisburseRemarksRichText").val()},
                        beforeSend: function() {
                            $.blockUI({
                                timeout: 0,
                                message: 'Processing..'
                            });
                        },
                        success: function(response) {

                            if (parseInt(response) > 0) {
                                $.unblockUI();
                                alertify.alert('SUCCESS', 'Feedback Successfully Submitted!', function() { window.location = "/FundRequisition/FundRequistionListForFinance"; });
                            } else {
                                alertify.alert(response, function() { window.location = "/FundRequisition/FundRequistionListForFinance"; });
                            }
                        },
                        complete: function() {
                            $.unblockUI();
                        },
                        error: function(data) {
                            $.unblockUI();
                        }
                    });
                }
                , function () {
                    alertify.error('Cancelled')
                });
        });
      

        //validation
        function validationCheck() {

            var response = true;
           
            var newDisburseAmount = $("#newDisburseAmount").val();
            var fundAvailableDate = $("#fundAvailableDate").val();
            var remarks = $("#fundDisburseRemarksRichText").val();

            var remainingDisburseAmount = $("#remainingDisburseAmount").val();
            showErrorMessageBelowCtrl('fundAvailableDate', 'please set Fund avaialable  date', false);
            showErrorMessageBelowCtrl('fundDisburseRemarksRichText', 'please input remarks field', false);
            showErrorMessageBelowCtrl('newDisburseAmount', 'please input remarks field', false);

            console.log('new disburse amount');
            console.log($("#newDisburseAmount").val());

            if (newDisburseAmount.length <= 0) {
                showErrorMessageBelowCtrl('newDisburseAmount', 'please input new disburse amount', true);
                response = false;
                $('html, body').animate({
                        scrollTop: $("#newDisburseAmount").offset().top
                    },
                    300);
            } else {
                showErrorMessageBelowCtrl('newDisburseAmount', 'please input remarks field', false);

                if (newDisburseAmount < 1) {
                    showErrorMessageBelowCtrl('newDisburseAmount', 'please input new disburse amount greater than 0 ', true);
                    response = false;
                    $('html, body').animate({
                            scrollTop: $("#newDisburseAmount").offset().top
                        },
                        300);
                } else {
                    showErrorMessageBelowCtrl('newDisburseAmount', 'please input new disburse amount greater than 0 ', false);
                    if (Number($("#newDisburseAmount").val()) > Number($("#remainingDisburseAmount").val())) {
                        showErrorMessageBelowCtrl('newDisburseAmount', 'please input new disburse amount less than remaining disburse amount ', true);
                        response = false;
                        $('html, body').animate({
                                scrollTop: $("#newDisburseAmount").offset().top
                            },
                            300);

                    } else {
                        showErrorMessageBelowCtrl('newDisburseAmount', 'please input new disburse amount greater than 0 ', false);
                    }
                }
            }




            
            

            if (remarks.length <= 0) {
                showErrorMessageBelowCtrl('fundDisburseRemarksRichText', 'please input remarks field', true); response = false;
                $('html, body').animate({
                    scrollTop: $("#fundDisburseRemarksRichText").offset().top
                }, 300);
            }
            else {
                showErrorMessageBelowCtrl('fundDisburseRemarksRichText', 'please input remarks field', false);
            }
           
            if (fundAvailableDate.length <= 0) {
                showErrorMessageBelowCtrl('fundAvailableDate', 'please set Fund avaialable  date', true);
                response = false;
                $('html, body').animate({
                    scrollTop: $("#fundAvailableDate").offset().top
                }, 300);
            }
            else {
                showErrorMessageBelowCtrl('fundAvailableDate', 'please select Proposed Disburse date', false);
            }
         

           
         
            

            return response;
        }

        //Reset the Fund Requistion Form

        $(document).on('click', '#clearbtn', function () {
            console.log('hh');
            $("#fundDisburseForm")[0].reset();
            $('#fundDisburseRemarksRichText').summernote('reset');
        });


        function fundDisubrseDataPostToServer(data, estimationAttachment) {
            console.log('fundRequisitionDataPostToServer hit .... ');
            var dataJson = JSON.stringify(data);
            var postData = {
                "fundDisburse": dataJson
            };
            console.log(postData);
            $.ajax({
                type: "POST",
                traditional: true,
                async: false,
                cache: false,
                url: "/FundDisburse/PostNewFundDisburse",
                context: document.body,
                data: postData,
                beforeSend: function () {
                    $.blockUI({
                        timeout: 0,
                        message: 'Processing..'
                    });
                },
                success: function (response) {
                    if (parseInt(response) > 0) {
                        //postEstimateAttachment(parseInt(response), estimationAttachment);
                        $.unblockUI();
                        alertify.alert('SUCCESS', 'Fund Disburse Submit Successfully!', function () {
                            window.location = "/FundRequisition/FundRequistionListForFinance";
                        });
                    }
                    else {
                        alertify.alert('Something went wrong! please try again.');
                    }
                },
                complete: function () {
                    $.unblockUI();
                },
                failure: function (response) {
                    $.unblockUI();
                    alert(response.responseText);
                },
                error: function (response) {
                    $.unblockUI();
                    alert(response.responseText);
                }
            });
        }



        function loadFundRequistionHistoryByEstimateId(value) {

            $.ajax({
                type: "GET",
                url: "/FundRequisition/GetFundRequistionDisburseHistory?estimationId=" + value,
                data: "{}",
                success: function (data) {
                    var fundRequistionHistory = data;
                    console.log('RequistionData');
                    console.log(fundRequistionHistory);
                    console.log('SCL FUND requisition History');
                    console.log(fundRequistionHistory);
                    let totalDisbuseAmount = 0;
                    let totalRequisitionAmount = 0;
                    if (fundRequistionHistory.length == 0) {
                        $("#fundRequistionDisburseHistory").hide();
                    }
                    var formatter = new Intl.NumberFormat('en-IN',
                        {
                            style: 'currency',
                            currency: 'BDT'
                        });

                    for (var i = 0; i < fundRequistionHistory.length; i++) {
                        // var expectedDate = "";
                        //
                        let paymentTypeClass = fundRequistionHistory[i].fundType == "Payment" ? "badge-success" : "badge-primary";
                        var tableRow =
                            `<tr>
                                    <td>&nbsp;</td>
                                    <td class="requistion1">` +
                            'Requistion-' +
                            fundRequistionHistory[i].sl +
                            ` </td>
                                    <td class="departmentName" >` +
                            fundRequistionHistory[i].departmentName +
                            `</td><td class="FundType badge ` +
                            paymentTypeClass +
                            `" >` +
                            fundRequistionHistory[i].fundType +
                            `</td>
                                    <td class="proposedDisburseDate" >` +
                            fundRequistionHistory[i].proposedDisburseDate +
                            `</td>
                                    <td class="requisitionAmount">` +
                            formatter.format(fundRequistionHistory[i].requisitionAmount) +
                            `</td>
                                `;
                        totalRequisitionAmount += fundRequistionHistory[i].requisitionAmount;



                        if (fundRequistionHistory[i].disburseHistory != null) {
                            var disburseList = JSON.parse(fundRequistionHistory[i].disburseHistory);
                            let isItFirstDisburse = 1;
                            for (var j = 0; j < disburseList.length; j++) {


                                if (isItFirstDisburse == 1) {

                                    tableRow += `     
                                    <td class="disburseSl">` +
                                        'Disburse-' +
                                        disburseList[j].Sl +
                                        `</td><td class="DisburseDate">` +
                                        disburseList[j].DisburseDate +
                                        `
                                            </td>
                                            
                                    <td class="DisburseAmount" >` +
                                        formatter.format(disburseList[j].DisburseAmount) +
                                        `</tr>`;
                                    totalDisbuseAmount += disburseList[j].DisburseAmount;

                                    $('#TableBodyFundRequistionHistory').append(tableRow);
                                    isItFirstDisburse = 0;
                                    tableRow = "";
                                } else {
                                    $('#TableBodyFundRequistionHistory').append(`  
                                        <tr>
                                         <td colspan="6"></td>
                                          <td  class="disburseSl">` +
                                        'Disburse-' +
                                        disburseList[j].Sl +
                                        ` </td><td class="DisburseDate">` +
                                        disburseList[j].DisburseDate +
                                        `
                                           </td> <td class="DisburseAmount" >` +
                                        formatter.format(disburseList[j].DisburseAmount) +
                                        `<td></tr>`);
                                    totalDisbuseAmount += disburseList[j].DisburseAmount;
                                }


                            }
                        } else {
                            $('#TableBodyFundRequistionHistory').append(tableRow + '<td class="disburseSl"></td><td class="DisburseDate"></td><td class="DisburseAmount" ></tr>');
                        }


                        //var jsonValue = fundRequistionHistory[i].disburseHistory;

                        //console.log("--------------------------------------Json ---------------");
                        // console.log(jsonValue);
                        $("#totalRequisitionT").html(formatter.format(totalRequisitionAmount));
                        $("#totalDisburseT").html(formatter.format(totalDisbuseAmount));
                    }
                }
            });
        }
        function loadFundRequistionHistoryOfOtherDepartmentByEstimateId(value) {
            //$("#fundRequistionDisburseHistoryOfOtherDepartment").hide();
            $.ajax({
                type: "GET",
                url: "/FundRequisition/GetFundRequistionDisburseHistoryOfOtherDepartment?estimationId=" + value,
                data: "{}",
                success: function (data) {
                    var fundRequistionHistory = data;
                    console.log(' other department fund history');

                    let totalDisbuseAmount = 0;
                    let totalRequisitionAmount = 0;
                    if (fundRequistionHistory.length == 0) {
                        $("#fundRequistionDisburseHistoryOfOtherDepartment").hide();
                    }

                    var formatter = new Intl.NumberFormat('en-IN',
                        {
                            style: 'currency',
                            currency: 'BDT'
                        });

                    for (var i = 0; i < fundRequistionHistory.length; i++) {
                        // var expectedDate = "";
                        //
                        let paymentTypeClass = fundRequistionHistory[i].fundType == "Payment" ? "badge-success" : "badge-primary";
                        var tableRow =
                            `<tr>
                                    <td>&nbsp;</td>
                                    <td class="requistion1">` +
                            'Requistion-' +
                            fundRequistionHistory[i].sl +
                            ` </td>
                                    <td class="departmentName" >` +
                            fundRequistionHistory[i].departmentName +
                            `</td><td class="FundType badge ` +
                            paymentTypeClass +
                            `" >` +
                            fundRequistionHistory[i].fundType +
                            `</td>
                                    <td class="proposedDisburseDate" >` +
                            fundRequistionHistory[i].proposedDisburseDate +
                            `</td>
                                    <td class="requisitionAmount">` +
                            formatter.format(fundRequistionHistory[i].requisitionAmount) +
                            `</td>
                                `;
                        totalRequisitionAmount += fundRequistionHistory[i].requisitionAmount;



                        if (fundRequistionHistory[i].disburseHistory != null) {
                            var disburseList = JSON.parse(fundRequistionHistory[i].disburseHistory);
                            let isItFirstDisburse = 1;
                            for (var j = 0; j < disburseList.length; j++) {


                                if (isItFirstDisburse == 1) {

                                    tableRow += `     
                                    <td class="disburseSl">` +
                                        'Disburse-' +
                                        disburseList[j].Sl +
                                        `</td><td class="DisburseDate">` +
                                        disburseList[j].DisburseDate +
                                        `
                                            </td>
                                            
                                    <td class="DisburseAmount" >` +
                                        formatter.format(disburseList[j].DisburseAmount) +
                                        `</tr>`;
                                    totalDisbuseAmount += disburseList[j].DisburseAmount;

                                    $('#TableBodyOtherDepartmentFundRequistionHistory').append(tableRow);
                                    isItFirstDisburse = 0;
                                    tableRow = "";
                                } else {
                                    $('#TableBodyOtherDepartmentFundRequistionHistory').append(`  
                                        <tr>
                                         <td colspan="6"></td>
                                          <td  class="disburseSl">` +
                                        'Disburse-' +
                                        disburseList[j].Sl +
                                        ` </td><td class="DisburseDate">` +
                                        disburseList[j].DisburseDate +
                                        `
                                           </td> <td class="DisburseAmount" >` +
                                        formatter.format(disburseList[j].DisburseAmount) +
                                        `<td></tr>`);
                                    totalDisbuseAmount += disburseList[j].DisburseAmount;
                                }


                            }
                        } else {
                            $('#TableBodyOtherDepartmentFundRequistionHistory').append(tableRow + '<td class="disburseSl"></td><td class="DisburseDate"></td><td class="DisburseAmount" ></tr>');
                        }


                        //var jsonValue = fundRequistionHistory[i].disburseHistory;

                        //console.log("--------------------------------------Json ---------------");
                        // console.log(jsonValue);
                        $("#otherDepartmentTotalRequisitionT").html(formatter.format(totalRequisitionAmount));
                        $("#otherDepartmentTotalDisburseT").html(formatter.format(totalDisbuseAmount));
                    }
                }
            });
        }


       /*==================================================== New Fund Requistion Script END =====================================*/

 
    </script>
}


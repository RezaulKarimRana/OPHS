@model AMS.Models.ServiceModels.FundDisburse.FundDisburseVM
@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
@using AMS.Models.DomainModels
@inject AMS.Services.Managers.Contracts.ISessionManager _sessionManager
@{
    UserEntity? user = await _sessionManager.GetUser();
}
<style>
    select, option {
        width: 200px;
    }

    #TableAprroverList tbody {
        counter-reset: serial-number;
    }

        #TableAprroverList tbody td:first-child:before {
            counter-increment: serial-number;
            content: counter(serial-number);
        }

    #TableAprroverFeedBackList tbody {
        counter-reset: serial-number;
    }

        #TableAprroverFeedBackList tbody td:first-child:before {
            counter-increment: serial-number;
            content: counter(serial-number);
        }

    #particularItemsDetails tbody {
        counter-reset: serial-number;
    }

        #particularItemsDetails tbody td:first-child:before {
            counter-increment: serial-number;
            content: counter(serial-number);
        }

    [data-toggle="collapse"] .fa:before {
        content: "\f13a";
        
        color: orangered;
        font-size : 25px;
    }

    [data-toggle="collapse"].collapsed .fa:before {
        
        content: "\f139";
        color: red;
        font-size: 25px;
    }
</style>

<div class="hiddenElements">
    <input id="fundDisburseId"
           type="hidden"
           value="@Model.FundDisburseId" />
</div>
<div class="container-fluid">
<div class="card secondary mb-4">
    <div class="card-header"  data-toggle="collapse" href="#fundDisburseHistory"><b>Fund Disburse History <i class="fa"></i></b></div>
    <div class="card-body collapse"  id="fundDisburseHistory">
        <div class="container-fluid">
            <div class="form-group  row" id="">
                <label for="requisitionAmount" class="col-sm-2 col-form-label-sm control-label">Estimate Identifier </label>
                <div class="col-sm-4">
                    <input type="text" readonly="readonly" class="form-control numbersOnly" id="" value="@Model.EstimateIdentifier" />
                </div>


            </div>
            <div class="form-group  row">
                <label for="" class="col-sm-2 col-form-label-sm control-label">Total Allowable Budget</label>

                <div class="col-sm-4 ">

                    <input type="text" value="@ViewBag.fundRequisition.TotalAllowableBudget" readonly="readonly" class="  form-control numbersOnly" id="TotalAllowableBudget" />
                </div>
                <label for="" class="col-sm-2 col-form-label-sm ">Own Allowable Budget</label>
                <div class="col-sm-4">
                    <input type="text" value="@ViewBag.fundRequisition.DepartmentWiseTotalAllowableBudget" readonly="readonly" class="form-control numbersOnly" id="DepartmentWiseTotalAllowableBudget" />
                </div>

            </div>
            <div class="form-group  row">
                <label for="" class="col-sm-2 col-form-label-sm control-label">Total Requisition Amount</label>

                <div class="col-sm-4 ">

                    <input type="text" value="@ViewBag.fundRequisition.TotalRequisitionAmount" readonly="readonly" class="  form-control numbersOnly" id="TotalRequisitionAmount" />
                </div>
                <label for="" class="col-sm-2 col-form-label-sm ">Total Received Amount</label>
                <div class="col-sm-4">
                    <input type="text" value="@ViewBag.fundRequisition.TotalReceived" readonly="readonly" class="form-control numbersOnly" id="TotalReceived" />
                </div>

            </div>
            <div class="form-group  row">
                <label for="" class="col-sm-2 col-form-label-sm control-label"> Own Requisition Amount</label>

                <div class="col-sm-4 ">

                    <input type="text" value="@ViewBag.fundRequisition.DepartmentWiseTotalRequisition" readonly="readonly" class="  form-control numbersOnly" id="DepartmentWiseTotalRequisition" />
                </div>
                <label for="newAmount" class="col-sm-2 col-form-label-sm ">Remaining Budget</label>
                <div class="col-sm-4">
                    <input type="text" value="@ViewBag.fundRequisition.RemainingBudget" readonly="readonly" id="remainingBudget" class="form-control numbersOnly" id="" />
                </div>


            </div>

            <div class="form-group required row">
                <label for="requisitionAmount" class="col-sm-2 col-form-label-sm control-label">Requisition Amount </label>
                <div class="col-sm-4">
                    <input type="text" readonly="readonly" class="form-control numbersOnly" id="FundRequisitionAmount" value="@Model.FundRequisitionAmount" />
                </div>
                <label for="" class="col-sm-2 col-form-label-sm ">Own Remaining Budget</label>
                <div class="col-sm-4">
                    <input type="text" value="@ViewBag.fundRequisition.DepartmentWiseRemainingBudget" readonly="readonly" class="form-control numbersOnly" id="DepartmentWiseRemainingBudget" />
                </div>

            </div>
            <div class="form-group required row">
                <label for="newAmount" class="col-sm-2 col-form-label-sm ">Proposed Disburse Date</label>
                <div class="col-sm-4">
                    <input type="text" value="@Model.ProposedDisburseDate" readonly="readonly" class="form-control numbersOnly" id="" />
                </div>
                <label for="newAmount" class="col-sm-2 col-form-label-sm control-label">Requisition Type</label>
                <div class="col-sm-4" id="requisitionTypeDiv">


                    <label class="btn btn-primary">
                        @Model.RequisitionType
                    </label>
                </div>

            </div>
            <div class="form-group row">
                <label for="detailsId" class="col-sm-2 col-form-label-sm"> Fund Requisition Remarks</label>
                <div class="col-sm-10">
                    <p>
                        @Html.Raw(@Model.FundRequisitionRemarksByFundRequestor)
                    </p>
                </div>
            </div>
            <div class="form-group row">
                <label for="detailsId" class="col-sm-2 col-form-label-sm"> Fund Disburse Remarks By Finance</label>
                <div class="col-sm-10">
                    <p>
                        @Html.Raw(@Model.FundDisburseRemarksByFinance)
                    </p>
                </div>
            </div>
            @*<h2>Test</h2>
            <div class="form-group  row" id="">
                <label for="requisitionAmount" class="col-sm-2 col-form-label-sm control-label">Requisition Amount </label>
                <div class="col-sm-4">
                    <input type="text" readonly="readonly" class="form-control numbersOnly" id="FundRequisitionAmount" value="@Model.FundRequisitionAmount" />
                </div>


            </div>

            <div class="form-group  row">
                <label for="objectiveTextId" class="col-sm-2 col-form-label-sm control-label">Allowable Budget</label>
                <div class="col-sm-4">
                    <input type="text" value="@Model.AllowableBudget" readonly="readonly" class="form-control numbersOnly" id="" />
                </div>


            </div>
            <div class="form-group  row" id="">
                <label class="col-sm-2 col-form-label-sm control-label">All Fund/ Payment Requested </label>
                <div class="col-sm-4">
                    <input type="text" readonly="readonly" class="form-control numbersOnly" id="newAmount" value="@Model.FundRequested" />
                </div>
                <label for="newAmount" class="col-sm-2 col-form-label-sm ">Departmental Fund/Payment Requested</label>
                <div class="col-sm-4">
                    <input type="text" value="@Model.DepartmentalFundRequested" readonly="readonly" class="form-control numbersOnly" id="" />
                </div>

            </div>
            <div class="form-group  row" id="">
                <label for="requisitionAmount" class="col-sm-2 col-form-label-sm control-label">Remaining Budget </label>
                <div class="col-sm-4">
                    <input type="text" readonly="readonly" class="form-control numbersOnly" value="@Model.RemainingBudget" />
                </div>
                <label for="newAmount" class="col-sm-2 col-form-label-sm ">Already Disburse Amount</label>
                <div class="col-sm-4">
                    <input type="text" value="@Model.AlreadyDisburseAmount" readonly="readonly" class="form-control numbersOnly" id="" />
                </div>

            </div>*@


        </div>
        </div>
    </div>

<form id="fundDisburseForm">
    <div class="card secondary mb-4">
        <div class="card-header"><b>Fund Disburse</b></div>
        <div class="card-body">
            <div class="container-fluid">
                
                <div class="form-group required row" id="totalPriceDiv">
                    <label for="receivedAmount" class="col-sm-2 col-form-label-sm control-label">Receive Amount</label>
                   
                        <div class="col-sm-4">
                            <input type="text" class="form-control numbersOnly" id="receiveAmount" required />
                        </div>
                    
                    
                    <label for="newAmount" class="col-sm-2 col-form-label-sm ">Fund  Disburse Amount By Finance</label>
                    <div class="col-sm-4">
                        
                        <input type="text" value="@Model.FundDisburseAmount" id="fundDisburseAmount" readonly="readonly" class="form-control numbersOnly" id=""/>
                    </div>

                </div>

                <div class="form-group row">
                    <label for="detailsId" class="col-sm-2 col-form-label-sm">Remarks</label>
                    <div class="col-sm-10">
                        <textarea id="fundReceiveRemarksRichText" style="height:300px;" name="fundReceiveRemarksRichText"></textarea>
                    </div>
                </div>

            <div class="form-group row" style="align-content:center">
                <div class="col-sm-4"></div>
                <div class="col-sm-8 ">
                    <button type="button" id="submitReceiveFund" class="btn btn-info btn-lg">
                        <i class="fa fa-check-circle" aria-hidden="true"></i>Receive
                    </button>
                    <button id="submitRollbackFund" class="btn btn-primary btn-lg" type="button">
                        <i class="fa fa-undo" aria-hidden="true"></i> Roll-Back
                    </button>
                   
                    <button id="clearbtn" class="btn btn-warning btn-lg" type="button">
                        <i class="fa fa-ban" aria-hidden="true"></i> Clear Form
                    </button>

                </div>
            </div>
            
                
            </div>
        </div>
    </div>
</form>
   
</div>


@section Scripts{
    <script src="~/js/AjaxCall/GetDataFromDbForBudetEstimationPage.js"></script>
    <script>


        var rowIdx = 0;
        var storeItemDetails;
        var storeUsersWithDepartmentName;
        var tableOpen = 1;
        var formData;
        $(document).ready(function() {


        });

        /* ================================================ New Fund Disburtion Script Start==================================================*/
        //rich text editor configuration
        $('#fundReceiveRemarksRichText').summernote({
            placeholder: 'Fund Requistion Remarks',
            tabsize: 2,
            height: 300,
            toolbar: [
                ['style', ['style']],
                ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']],
                ['fontname', ['fontname']],
                ['fontsize', ['fontsize']],
                ['color', ['color']],
                ['para', ['ol', 'ul', 'paragraph', 'height']],
                ['table', ['table']],
                ['insert', ['link', 'picture', 'video']],
                ['view', ['undo', 'redo', 'fullscreen', 'codeview', 'help']]
            ]
        });

        //Preview submit
        $("#submitReceiveFund").click(function() {


            var result = validationCheck();
            //console.log(result);
            //var result= true
            if (result == false) {
                return;
            }
            console.log('SUmmit commmunication .....');


            fundDisburse = {
                ReceivedAmount: $("#receiveAmount").val(),
                RemarksByFundReceiver: $("#fundReceiveRemarksRichText").val(),
                Id: $("#fundDisburseId").val(),
                isRollBack: false


            };
            console.log(fundDisburse);


            var fundRequistionAttachment = [];

            formData = new FormData();
            //for (var i = 0; i < filelist.length; i++) {
            //    if (jQuery.isEmptyObject(filelist[i])) {
            //        console.log("skip");
            //        continue;
            //    }
            //    formData.append(filelist[i].name, filelist[i]);
            //}
            fundRequistionAttachment = formData;

            fundReceiveOrRollBackDataPostToServer(fundDisburse, fundRequistionAttachment);
        });

        $("#submitRollbackFund").click(function() {


            //var result = validationCheck();
            //console.log(result);  
            //var result= true
            //if (result == false) { return; }
            console.log('SUmmit commmunication .....');

            let receivedAmount = $("#receiveAmount").val();
            receivedAmount = receivedAmount.length == 0  ? 0 : receivedAmount;

            console.log('Received amount is not numner or not ');
            console.log(receivedAmount);
            fundDisburse = {
                ReceivedAmount:receivedAmount,
                RemarksByFundReceiver: $("#fundReceiveRemarksRichText").val(),
                Id: $("#fundDisburseId").val(),
                isRollBack: true


            };
            console.log(fundDisburse);


            var fundRequistionAttachment = [];

            formData = new FormData();
            //for (var i = 0; i < filelist.length; i++) {
            //    if (jQuery.isEmptyObject(filelist[i])) {
            //        console.log("skip");
            //        continue;
            //    }
            //    formData.append(filelist[i].name, filelist[i]);
            //}
            fundRequistionAttachment = formData;

            fundReceiveOrRollBackDataPostToServer(fundDisburse, fundRequistionAttachment);
        });


        //validation
        function validationCheck() {

            var response = true;

            var receiveAmount = $("#receiveAmount").val();

            var remarks = $("#fundReceiveRemarksRichText").val();

            var fundDisburseAmount = $("#fundDisburseAmount").val();

            showErrorMessageBelowCtrl('fundReceiveRemarksRichText', 'please input remarks field', false);
            showErrorMessageBelowCtrl('receiveAmount', 'please input receive amount less than Disburse Amount ', false);


            if (receiveAmount.length <= 0) {
                showErrorMessageBelowCtrl('receiveAmount', 'please input receive amount', true);
                response = false;
                $('html, body').animate({
                        scrollTop: $("#receiveAmount").offset().top
                    },
                    300);
            } else {
                console.log(parseInt(receiveAmount) + ' disburse amount ' + parseInt(fundDisburseAmount));
                if (parseInt(receiveAmount) == parseInt(fundDisburseAmount)) {
                    console.log(parseInt(receiveAmount) + ' disburse amount ' + parseInt(fundDisburseAmount));
                    showErrorMessageBelowCtrl('receiveAmount', 'please input receive amount ', false);
                } else {
                    response = false;
                    showErrorMessageBelowCtrl('receiveAmount', 'please input receive amount equal to disburse amount ', true);
                }
                


                //if ( fundDisburseAmount < receiveAmount ) {
                //    console.log('mached');
                //    showErrorMessageBelowCtrl('receiveAmount', 'please input receive amount less than Disburse Amount 222 ', true);
                //    response = false;
                //    $('html, body').animate({
                //            scrollTop: $("#receiveAmount").offset().top
                //        },
                //        300);
                //} else {
                //    showErrorMessageBelowCtrl('receiveAmount', 'please input new disburse amount greater than  333 ', false);


                //}
            }


            if (remarks.length <= 0) {
                showErrorMessageBelowCtrl('fundReceiveRemarksRichText', 'please input remarks field', true);
                response = false;
                $('html, body').animate({
                        scrollTop: $("#fundReceiveRemarksRichText").offset().top
                    },
                    300);
            } else {
                showErrorMessageBelowCtrl('fundReceiveRemarksRichText', 'please input remarks field', false);
            }


            return response;
        }

        //Reset the Fund Requistion Form

        $(document).on('click',
            '#clearbtn',
            function() {
                console.log('hh');
                $("#fundDisburseForm")[0].reset();
                $('#fundDisburseRemarksRichText').summernote('reset');
            });


        function fundReceiveOrRollBackDataPostToServer(data, estimationAttachment) {
            console.log('fundRequisitionDataPostToServer hit .... ');
            var dataJson = JSON.stringify(data);
            var postData = {
                "fundDisburse": dataJson
            };
            console.log(postData);
            $.ajax({
                type: "POST",
                traditional: true,
                async: false,
                cache: false,
                url: "/FundDisburse/PostFundDisburseReceiveOrRollback",
                context: document.body,
                data: postData,
                beforeSend: function() {
                    $.blockUI({
                        timeout: 0,
                        message: 'Processing..'
                    });
                },
                success: function(response) {
                    if (parseInt(response) > 0) {
                        //postEstimateAttachment(parseInt(response), estimationAttachment);
                        $.unblockUI();
                        alertify.alert('SUCCESS',
                            'Submit Successfully!',
                            function() {
                                window.location = "/FundRequisition/SubmitedFundRequistionList";
                            });
                    } else {
                        alertify.alert('Something went wrong! please try again.');
                    }
                },
                complete: function() {
                    $.unblockUI();
                },
                failure: function(response) {
                    $.unblockUI();
                    alert(response.responseText);
                },
                error: function(response) {
                    $.unblockUI();
                    alert(response.responseText);
                }
            });
        }


        function loadFundDisburseHistoryByEstimateId(value) {
            $.ajax({
                type: "GET",
                url: "/FundDisburse/GetFundDisburseHistoryByEstimateId?estimationId=" + value,
                data: "{}",
                success: function(data) {
                    var fundDisburseHistory = data;
                    var commentIcon = '<i class="fa fa-quote-left fa-2x fa-pull-left" aria-hidden="true"></i>';
                    console.log(fundDisburseHistory);
                    if (fundDisburseHistory < 1) {
                        $("#fundDisburseHistory").hide();
                    }
                    for (var i = 0; i < fundDisburseHistory.length; i++) {
                        var requisitionDate = new Date(fundDisburseHistory[i].RequisitionDate);
                        //    if (approvers[i].estimateStatus == "-500") {
                        //        statusTag = "<span class='w3-tag w3-red'>Rejected</span>";
                        //    }
                        //    else if (approvers[i].estimateStatus == "100") {
                        //        statusTag = "<span class='w3-tag w3-green'>Approved</span>";
                        //    }
                        //    else if (approvers[i].estimateStatus == "-404") {
                        //        statusTag = "<span class='w3-tag w3-deep-orange'>Rollbacked</span>";
                        //    }
                        //    if (approvers[i].feedBack == null)
                        //        approvers[i].feedBack = 'N/A';
                        $('#tableBodyFundDisburseHistory').append(
                            `<tr>
                                    <td>` +
                            fundDisburseHistory[i].fundRequisitionId +
                            `</td>
                                    <td>` +
                            fundDisburseHistory[i].departmentName +
                            ` </td>
                                    <td class="approverApprovalDate">` +
                            fundDisburseHistory[i].requisitionDate +
                            `</td>
                                    <td>` +
                            fundDisburseHistory[i].requisitionAmount +
                            ` </td>
                                    <td>` +
                            fundDisburseHistory[i].FundDisburseId +
                            ` </td>
                                    <td>` +
                            fundDisburseHistory[i].disburseAmount +
                            ` </td>
                                    <td>` +
                            fundDisburseHistory[i].totalDisburseAmount +
                            ` </td>
                                
                                    
                                </tr>`);
                    }
                }
            });
        }


        /*==================================================== New Fund Requistion Script END =====================================*/


    </script>
}

